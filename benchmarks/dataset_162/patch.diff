From 9b9e446221c07df753a16ad0b604aa97e1c5dc04 Mon Sep 17 00:00:00 2001
From: Hanna K <hanna.knutsson@protonmail.com>
Date: Thu, 14 Jul 2022 19:19:42 +0200
Subject: [PATCH] Increase efficiency of for() in some cases

---
 libqalculate/BuiltinFunctions-logical.cc | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

diff --git a/libqalculate/BuiltinFunctions-logical.cc b/libqalculate/BuiltinFunctions-logical.cc
index 4a25efd2..6344ef8a 100644
--- a/libqalculate/BuiltinFunctions-logical.cc
+++ b/libqalculate/BuiltinFunctions-logical.cc
@@ -259,6 +259,7 @@ int ForFunction::calculate(MathStructure &mstruct, const MathStructure &vargs, c
 	MathStructure mtest;
 	MathStructure mcount;
 	MathStructure mupdate;
+	bool b_eval = true;
 	while(true) {
 		mtest = vargs[2];
 		mtest.replace(vargs[1], mcounter);
@@ -271,13 +272,17 @@ int ForFunction::calculate(MathStructure &mstruct, const MathStructure &vargs, c
 		else mupdate = vargs[5];
 		mupdate.replace(vargs[1], mcounter, vargs[6], mstruct);
 		mstruct = mupdate;
-		mstruct.calculatesub(eo, eo, false);
-
+		if(b_eval) {
+			mstruct.eval(eo);
+			if(mstruct.containsType(STRUCT_ADDITION) || mstruct.containsType(STRUCT_FUNCTION)) b_eval = false;
+		} else {
+			mstruct.calculatesub(eo, eo, false);
+		}
 		if(vargs[3].isComparison() && vargs[3].comparisonType() == COMPARISON_EQUALS && vargs[3][0] == vargs[1]) mcount = vargs[3][1];
 		else mcount = vargs[3];
 		mcount.replace(vargs[1], mcounter);
 		mcounter = mcount;
-		mcounter.calculatesub(eo, eo, false);
+		mcounter.eval(eo);
 	}
 	return 1;
 

/usr/include/c++/11/bits/basic_string.h:2321:23: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936.
/usr/include/c++/11/bits/basic_string.h:2321:23: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936 into const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1570.
/usr/include/c++/11/bits/basic_string.h:2333:23: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936.
/usr/include/c++/11/bits/basic_string.h:2333:23: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936 into const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1750.
/usr/include/c++/11/bits/basic_string.h:340:39: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664.
/usr/include/c++/11/bits/basic_string.h:340:39: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_limit(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2280.
/usr/include/c++/11/bits/basic_string.h:339:44: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664.
/usr/include/c++/11/bits/basic_string.h:339:44: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_limit(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2280.
/usr/include/c++/11/bits/basic_string.h:321:28: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664.
/usr/include/c++/11/bits/basic_string.h:321:28: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2117.
/usr/include/c++/11/bits/basic_string.h:320:24: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664.
/usr/include/c++/11/bits/basic_string.h:320:24: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2117.
/usr/include/c++/11/bits/basic_string.h:1960:19: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2117.
/usr/include/c++/11/bits/basic_string.h:1960:19: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2117 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2234.
/usr/include/c++/11/bits/basic_string.h:1960:19: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_limit(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2280.
/usr/include/c++/11/bits/basic_string.h:1960:19: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_limit(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2280 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2234.
/usr/include/c++/11/bits/basic_string.h:1062:16: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936.
/usr/include/c++/11/bits/basic_string.h:1062:16: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::reference std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[](std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1658.
/usr/include/c++/11/bits/basic_string.h:681:21: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2593.
/usr/include/c++/11/bits/basic_string.h:681:21: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2593 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2587.
/usr/include/c++/11/bits/basic_string.h:225:21: note: Considering inline candidate static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/288.
/usr/include/c++/11/bits/basic_string.h:225:21: optimized:  Inlining static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/288 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1957.
/usr/include/c++/11/bits/basic_string.h:225:29: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936.
/usr/include/c++/11/bits/basic_string.h:225:29: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1957.
/usr/include/c++/11/bits/basic_string.h:224:11: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1956.
/usr/include/c++/11/bits/basic_string.h:224:11: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1956 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1957.
/usr/include/c++/11/bits/char_traits.h:379:32: optimized:   Inlining constexpr bool std::__constant_char_array_p(const _CharT*, std::size_t) [with _CharT = char]/291 into static constexpr int std::char_traits<char>::compare(const char_type*, const char_type*, std::size_t)/292 (always_inline).
/usr/include/c++/11/bits/char_traits.h:378:32: optimized:   Inlining constexpr bool std::__constant_char_array_p(const _CharT*, std::size_t) [with _CharT = char]/291 into static constexpr int std::char_traits<char>::compare(const char_type*, const char_type*, std::size_t)/292 (always_inline).
/usr/include/c++/11/bits/char_traits.h:384:19: note: Considering inline candidate static constexpr bool std::char_traits<char>::lt(const char_type&, const char_type&)/290.
/usr/include/c++/11/bits/char_traits.h:384:19: optimized:  Inlining static constexpr bool std::char_traits<char>::lt(const char_type&, const char_type&)/290 into static constexpr int std::char_traits<char>::compare(const char_type*, const char_type*, std::size_t)/292.
/usr/include/c++/11/bits/char_traits.h:382:14: note: Considering inline candidate static constexpr bool std::char_traits<char>::lt(const char_type&, const char_type&)/290.
/usr/include/c++/11/bits/char_traits.h:382:14: optimized:  Inlining static constexpr bool std::char_traits<char>::lt(const char_type&, const char_type&)/290 into static constexpr int std::char_traits<char>::compare(const char_type*, const char_type*, std::size_t)/292.
/usr/include/c++/11/bits/char_traits.h:171:17: note: Considering inline candidate static constexpr bool __gnu_cxx::char_traits<_CharT>::eq(const char_type&, const char_type&) [with _CharT = char]/294.
/usr/include/c++/11/bits/char_traits.h:171:17: optimized:  Inlining static constexpr bool __gnu_cxx::char_traits<_CharT>::eq(const char_type&, const char_type&) [with _CharT = char]/294 into static constexpr std::size_t __gnu_cxx::char_traits<_CharT>::length(const char_type*) [with _CharT = char]/295.
/usr/include/c++/11/bits/char_traits.h:396:25: optimized:   Inlining constexpr bool std::__constant_string_p(const _CharT*) [with _CharT = char]/293 into static constexpr std::size_t std::char_traits<char>::length(const char_type*)/296 (always_inline).
/usr/include/c++/11/bits/char_traits.h:397:52: note: Considering inline candidate static constexpr std::size_t __gnu_cxx::char_traits<_CharT>::length(const char_type*) [with _CharT = char]/295.
/usr/include/c++/11/bits/char_traits.h:397:52: optimized:  Inlining static constexpr std::size_t __gnu_cxx::char_traits<_CharT>::length(const char_type*) [with _CharT = char]/295 into static constexpr std::size_t std::char_traits<char>::length(const char_type*)/296.
/usr/include/c++/11/bits/basic_string.h:1459:19: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664.
/usr/include/c++/11/bits/basic_string.h:1459:19: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2116.
/usr/include/c++/11/bits/basic_string.h:1459:19: note: Considering inline candidate static constexpr std::size_t std::char_traits<char>::length(const char_type*)/296.
/usr/include/c++/11/bits/basic_string.h:1459:19: optimized:  Inlining static constexpr std::size_t std::char_traits<char>::length(const char_type*)/296 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2116.
/usr/include/c++/11/bits/basic_string.h:690:28: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2116.
/usr/include/c++/11/bits/basic_string.h:690:28: missed:   will not early inline: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1918->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2116, growth 7 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/basic_string.h:2494:20: note: Considering inline candidate static constexpr std::size_t std::char_traits<char>::length(const char_type*)/296.
/usr/include/c++/11/bits/basic_string.h:2494:20: optimized:  Inlining static constexpr std::size_t std::char_traits<char>::length(const char_type*)/296 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1919.
/usr/include/c++/11/bits/basic_string.h:1728:22: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2234.
/usr/include/c++/11/bits/basic_string.h:1728:22: missed:   will not early inline: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2074->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2234, growth 10 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/basic_string.h:1728:22: note: Considering inline candidate static constexpr std::size_t std::char_traits<char>::length(const char_type*)/296.
/usr/include/c++/11/bits/basic_string.h:1728:22: optimized:  Inlining static constexpr std::size_t std::char_traits<char>::length(const char_type*)/296 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2074.
/usr/include/c++/11/bits/basic_string.h:359:21: note: Considering inline candidate static std::char_traits<char>::char_type* std::char_traits<char>::copy(std::char_traits<char>::char_type*, const char_type*, std::size_t)/300.
/usr/include/c++/11/bits/basic_string.h:359:21: optimized:  Inlining static std::char_traits<char>::char_type* std::char_traits<char>::copy(std::char_traits<char>::char_type*, const char_type*, std::size_t)/300 into static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2367.
/usr/include/c++/11/bits/basic_string.h:357:23: note: Considering inline candidate static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/288.
/usr/include/c++/11/bits/basic_string.h:357:23: optimized:  Inlining static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/288 into static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2367.
/usr/include/c++/11/bits/basic_string.h:406:16: note: Considering inline candidate static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2367.
/usr/include/c++/11/bits/basic_string.h:406:16: optimized:  Inlining static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2367 into static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2245.
/usr/include/c++/11/bits/basic_string.h:401:16: note: Considering inline candidate static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2367.
/usr/include/c++/11/bits/basic_string.h:401:16: optimized:  Inlining static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2367 into static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, _CharT*, _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2438.
/usr/include/c++/11/bits/basic_string.h:6876:37: note: Considering inline candidate static std::size_t std::_Hash_impl::hash(const void*, std::size_t, std::size_t)/97.
/usr/include/c++/11/bits/basic_string.h:6876:37: optimized:  Inlining static std::size_t std::_Hash_impl::hash(const void*, std::size_t, std::size_t)/97 into std::size_t std::hash<std::__cxx11::basic_string<char> >::operator()(const string&) const/512.
/usr/include/c++/11/bits/basic_string.h:6876:46: note: Considering inline candidate const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1750.
/usr/include/c++/11/bits/basic_string.h:6876:46: optimized:  Inlining const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1750 into std::size_t std::hash<std::__cxx11::basic_string<char> >::operator()(const string&) const/512.
/usr/include/c++/11/bits/basic_string.h:6876:37: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1751.
/usr/include/c++/11/bits/basic_string.h:6876:37: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1751 into std::size_t std::hash<std::__cxx11::basic_string<char> >::operator()(const string&) const/512.
/usr/include/c++/11/bits/basic_ios.h:158:20: note: Considering inline candidate constexpr std::_Ios_Iostate std::operator|(std::_Ios_Iostate, std::_Ios_Iostate)/1402.
/usr/include/c++/11/bits/basic_ios.h:158:20: optimized:  Inlining constexpr std::_Ios_Iostate std::operator|(std::_Ios_Iostate, std::_Ios_Iostate)/1402 into void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/2128.
/usr/include/c++/11/bits/basic_ios.h:158:20: note: Considering inline candidate std::ios_base::iostate std::basic_ios<_CharT, _Traits>::rdstate() const [with _CharT = char; _Traits = std::char_traits<char>]/2281.
/usr/include/c++/11/bits/basic_ios.h:158:20: optimized:  Inlining std::ios_base::iostate std::basic_ios<_CharT, _Traits>::rdstate() const [with _CharT = char; _Traits = std::char_traits<char>]/2281 into void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/2128.
/usr/include/c++/11/ostream:617:44: note: Considering inline candidate static constexpr std::size_t std::char_traits<char>::length(const char_type*)/296.
/usr/include/c++/11/ostream:617:44: optimized:  Inlining static constexpr std::size_t std::char_traits<char>::length(const char_type*)/296 into std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1930.
/usr/include/c++/11/ostream:614:16: note: Considering inline candidate void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/2128.
/usr/include/c++/11/ostream:614:16: optimized:  Inlining void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/2128 into std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1930.
/usr/include/c++/11/chrono:666:9: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::duration(const _Rep2&) [with _Rep2 = long int; <template-parameter-2-2> = void; _Rep = long int; _Period = std::ratio<1, 1000000000>]/1225.
/usr/include/c++/11/chrono:666:9: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::duration(const _Rep2&) [with _Rep2 = long int; <template-parameter-2-2> = void; _Rep = long int; _Period = std::ratio<1, 1000000000>]/1225 into constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1543.
/usr/include/c++/11/chrono:666:53: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/1217.
/usr/include/c++/11/chrono:666:53: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/1217 into constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1543.
/usr/include/c++/11/chrono:666:31: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/1217.
/usr/include/c++/11/chrono:666:31: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/1217 into constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1543.
/usr/include/c++/11/chrono:1044:41: note: Considering inline candidate constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1543.
/usr/include/c++/11/chrono:1044:41: optimized:  Inlining constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1543 into constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1544.
/usr/include/c++/11/chrono:1044:38: note: Considering inline candidate constexpr std::chrono::time_point<_Clock, _Dur>::duration std::chrono::time_point<_Clock, _Dur>::time_since_epoch() const [with _Clock = std::chrono::_V2::system_clock; _Dur = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1236.
/usr/include/c++/11/chrono:1044:38: optimized:  Inlining constexpr std::chrono::time_point<_Clock, _Dur>::duration std::chrono::time_point<_Clock, _Dur>::time_since_epoch() const [with _Clock = std::chrono::_V2::system_clock; _Dur = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1236 into constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1544.
/usr/include/c++/11/chrono:1044:65: note: Considering inline candidate constexpr std::chrono::time_point<_Clock, _Dur>::duration std::chrono::time_point<_Clock, _Dur>::time_since_epoch() const [with _Clock = std::chrono::_V2::system_clock; _Dur = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1236.
/usr/include/c++/11/chrono:1044:65: optimized:  Inlining constexpr std::chrono::time_point<_Clock, _Dur>::duration std::chrono::time_point<_Clock, _Dur>::time_since_epoch() const [with _Clock = std::chrono::_V2::system_clock; _Dur = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1236 into constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1544.
/usr/include/c++/11/ext/string_conversions.h:94:5: note: Considering inline candidate __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1575.
/usr/include/c++/11/ext/string_conversions.h:94:5: optimized:  Inlining __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1575 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1579.
/usr/include/c++/11/ext/string_conversions.h:94:5: note: Considering inline candidate __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1575.
/usr/include/c++/11/ext/string_conversions.h:94:5: optimized:  Inlining __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1575 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1579.
/usr/include/c++/11/ext/string_conversions.h:85:25: note: Considering inline candidate static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1578.
/usr/include/c++/11/ext/string_conversions.h:85:25: optimized:  Inlining static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1578 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1579.
/usr/include/c++/11/ext/string_conversions.h:66:15: note: Considering inline candidate __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1572.
/usr/include/c++/11/ext/string_conversions.h:66:15: optimized:  Inlining __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1572 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1579.
/usr/include/c++/11/bits/basic_string.h:6620:40: note: Considering inline candidate _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1579.
/usr/include/c++/11/bits/basic_string.h:6620:40: missed:   will not early inline: int std::__cxx11::stoi(const string&, std::size_t*, int)/475->_Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1579, call is cold and code would grow at least by 26
/usr/include/c++/11/bits/basic_string.h:6620:40: note: Considering inline candidate const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1570.
/usr/include/c++/11/bits/basic_string.h:6620:40: optimized:  Inlining const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1570 into int std::__cxx11::stoi(const string&, std::size_t*, int)/475.
/usr/include/c++/11/ext/string_conversions.h:94:5: note: Considering inline candidate __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1611.
/usr/include/c++/11/ext/string_conversions.h:94:5: optimized:  Inlining __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1611 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1615.
/usr/include/c++/11/ext/string_conversions.h:94:5: note: Considering inline candidate __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1611.
/usr/include/c++/11/ext/string_conversions.h:94:5: optimized:  Inlining __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1611 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1615.
/usr/include/c++/11/ext/string_conversions.h:85:25: note: Considering inline candidate static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::false_type) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1613.
/usr/include/c++/11/ext/string_conversions.h:85:25: optimized:  Inlining static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::false_type) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1613 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1615.
/usr/include/c++/11/ext/string_conversions.h:66:15: note: Considering inline candidate __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1608.
/usr/include/c++/11/ext/string_conversions.h:66:15: optimized:  Inlining __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1608 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1615.
/usr/include/c++/11/bits/basic_string.h:6640:29: note: Considering inline candidate _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1615.
/usr/include/c++/11/bits/basic_string.h:6640:29: missed:   will not early inline: long long unsigned int std::__cxx11::stoull(const string&, std::size_t*, int)/479->_Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1615, call is cold and code would grow at least by 23
/usr/include/c++/11/bits/basic_string.h:6640:29: note: Considering inline candidate const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1570.
/usr/include/c++/11/bits/basic_string.h:6640:29: optimized:  Inlining const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1570 into long long unsigned int std::__cxx11::stoull(const string&, std::size_t*, int)/479.
/usr/include/c++/11/bits/basic_string.h:6237:45: note: Considering inline candidate static constexpr int std::char_traits<char>::compare(const char_type*, const char_type*, std::size_t)/292.
/usr/include/c++/11/bits/basic_string.h:6237:45: optimized:  Inlining static constexpr int std::char_traits<char>::compare(const char_type*, const char_type*, std::size_t)/292 into typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]/1813.
/usr/include/c++/11/bits/basic_string.h:6237:45: note: Considering inline candidate const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1750.
/usr/include/c++/11/bits/basic_string.h:6237:45: optimized:  Inlining const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1750 into typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]/1813.
/usr/include/c++/11/bits/basic_string.h:6237:45: note: Considering inline candidate const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1750.
/usr/include/c++/11/bits/basic_string.h:6237:45: optimized:  Inlining const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1750 into typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]/1813.
/usr/include/c++/11/bits/basic_string.h:6237:45: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664.
/usr/include/c++/11/bits/basic_string.h:6237:45: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664 into typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]/1813.
/usr/include/c++/11/bits/basic_string.h:6236:41: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664.
/usr/include/c++/11/bits/basic_string.h:6236:41: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664 into typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]/1813.
/usr/include/c++/11/bits/basic_string.h:6236:25: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664.
/usr/include/c++/11/bits/basic_string.h:6236:25: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664 into typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]/1813.
/usr/include/c++/11/bits/hashtable_policy.h:1210:7: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash<std::__cxx11::basic_string<char> >]/1885.
/usr/include/c++/11/bits/hashtable_policy.h:1210:7: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash<std::__cxx11::basic_string<char> >]/1885 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_Hash_code_base() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1476.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::equal_to<std::__cxx11::basic_string<char> >]/1888.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::equal_to<std::__cxx11::basic_string<char> >]/1888 into std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1479.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: note: Considering inline candidate std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_Hash_code_base() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1476.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: optimized:  Inlining std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_Hash_code_base() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1476 into std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1479.
/usr/include/c++/11/initializer_list:79:51: note: Considering inline candidate constexpr std::initializer_list<_E>::size_type std::initializer_list<_E>::size() const [with _E = std::__cxx11::basic_string<char>]/1905.
/usr/include/c++/11/initializer_list:79:51: optimized:  Inlining constexpr std::initializer_list<_E>::size_type std::initializer_list<_E>::size() const [with _E = std::__cxx11::basic_string<char>]/1905 into constexpr const _E* std::initializer_list<_E>::end() const [with _E = std::__cxx11::basic_string<char>]/1906.
/usr/include/c++/11/initializer_list:79:42: note: Considering inline candidate constexpr const _E* std::initializer_list<_E>::begin() const [with _E = std::__cxx11::basic_string<char>]/1904.
/usr/include/c++/11/initializer_list:79:42: optimized:  Inlining constexpr const _E* std::initializer_list<_E>::begin() const [with _E = std::__cxx11::basic_string<char>]/1904 into constexpr const _E* std::initializer_list<_E>::end() const [with _E = std::__cxx11::basic_string<char>]/1906.
/usr/include/c++/11/chrono:226:13: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::duration(const _Rep2&) [with _Rep2 = long int; <template-parameter-2-2> = void; _Rep = long int; _Period = std::ratio<1, 1000>]/1934.
/usr/include/c++/11/chrono:226:13: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::duration(const _Rep2&) [with _Rep2 = long int; <template-parameter-2-2> = void; _Rep = long int; _Period = std::ratio<1, 1000>]/1934 into static constexpr _ToDur std::chrono::__duration_cast_impl<_ToDur, _CF, _CR, true, false>::__cast(const std::chrono::duration<_Rep, _Period>&) [with _Rep = long int; _Period = std::ratio<1, 1000000000>; _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _CF = std::ratio<1, 1000000>; _CR = long int]/1541.
/usr/include/c++/11/chrono:227:34: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/1217.
/usr/include/c++/11/chrono:227:34: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/1217 into static constexpr _ToDur std::chrono::__duration_cast_impl<_ToDur, _CF, _CR, true, false>::__cast(const std::chrono::duration<_Rep, _Period>&) [with _Rep = long int; _Period = std::ratio<1, 1000000000>; _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _CF = std::ratio<1, 1000000>; _CR = long int]/1541.
/usr/include/c++/11/chrono:276:21: note: Considering inline candidate static constexpr _ToDur std::chrono::__duration_cast_impl<_ToDur, _CF, _CR, true, false>::__cast(const std::chrono::duration<_Rep, _Period>&) [with _Rep = long int; _Period = std::ratio<1, 1000000000>; _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _CF = std::ratio<1, 1000000>; _CR = long int]/1541.
/usr/include/c++/11/chrono:276:21: optimized:  Inlining static constexpr _ToDur std::chrono::__duration_cast_impl<_ToDur, _CF, _CR, true, false>::__cast(const std::chrono::duration<_Rep, _Period>&) [with _Rep = long int; _Period = std::ratio<1, 1000000000>; _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _CF = std::ratio<1, 1000000>; _CR = long int]/1541 into constexpr std::chrono::__enable_if_is_duration<_ToDur> std::chrono::duration_cast(const std::chrono::duration<_Rep, _Period>&) [with _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _Rep = long int; _Period = std::ratio<1, 1000000000>]/1542.
/usr/include/c++/11/bits/allocator.h:156:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = char]/1938.
/usr/include/c++/11/bits/allocator.h:156:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = char]/1938 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = char]/1941.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = char]/1941 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
/usr/include/c++/11/bits/basic_string.h:158:14: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
/usr/include/c++/11/bits/basic_string.h:158:14: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1650.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__cxx11::basic_string<char>]/2027.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__cxx11::basic_string<char>]/2027 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/1818.
/usr/include/c++/11/bits/stl_vector.h:128:14: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/1818.
/usr/include/c++/11/bits/stl_vector.h:128:14: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/1818 into std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl::~_Vector_impl()/527.
/usr/include/c++/11/bits/hashtable.h:1341:32: note: Considering inline candidate void std::__detail::_Prime_rehash_policy::_M_reset()/140.
/usr/include/c++/11/bits/hashtable.h:1341:32: optimized:  Inlining void std::__detail::_Prime_rehash_policy::_M_reset()/140 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_reset() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2067.
/usr/include/c++/11/bits/allocator.h:156:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = LdapObject]/2076.
/usr/include/c++/11/bits/allocator.h:156:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = LdapObject]/2076 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = LdapObject]/1873.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = LdapObject]/2079.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = LdapObject]/2079 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = LdapObject]/1876.
/usr/include/c++/11/bits/stl_vector.h:128:14: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = LdapObject]/1876.
/usr/include/c++/11/bits/stl_vector.h:128:14: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = LdapObject]/1876 into std::_Vector_base<LdapObject, std::allocator<LdapObject> >::_Vector_impl::~_Vector_impl()/1511.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2090.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2090 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1894.
/usr/include/c++/11/bits/hashtable_policy.h:1124:12: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1894.
/usr/include/c++/11/bits/hashtable_policy.h:1124:12: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1894 into std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >, true>::~_Hashtable_ebo_helper()/1482.
/usr/include/c++/11/bits/hashtable_policy.h:1802:12: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >, true>::~_Hashtable_ebo_helper()/1482.
/usr/include/c++/11/bits/hashtable_policy.h:1802:12: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >, true>::~_Hashtable_ebo_helper()/1482 into std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >::~_Hashtable_alloc()/1488.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:141:29: note: Considering inline candidate constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const char*]/2094.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:141:29: optimized:  Inlining constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const char*]/2094 into constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char*]/2095.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:141:29: note: Considering inline candidate constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const std::__cxx11::basic_string<char>*]/2105.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:141:29: optimized:  Inlining constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const std::__cxx11::basic_string<char>*]/2105 into constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*]/2106.
/usr/include/c++/11/bits/stl_vector.h:133:19: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_impl_data::_Vector_impl_data() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2122.
/usr/include/c++/11/bits/stl_vector.h:133:19: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_impl_data::_Vector_impl_data() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2122 into std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1922.
/usr/include/c++/11/bits/stl_vector.h:133:19: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = LdapObject]/1873.
/usr/include/c++/11/bits/stl_vector.h:133:19: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = LdapObject]/1873 into std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1922.
/usr/include/c++/11/bits/stl_vector.h:288:7: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1922.
/usr/include/c++/11/bits/stl_vector.h:288:7: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1922 into std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1523.
/usr/include/c++/11/bits/stl_vector.h:487:7: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1523.
/usr/include/c++/11/bits/stl_vector.h:487:7: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1523 into std::vector<_Tp, _Alloc>::vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1526.
/usr/include/c++/11/bits/stl_vector.h:812:16: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2125.
/usr/include/c++/11/bits/stl_vector.h:812:16: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2125 into std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1924.
/usr/include/c++/11/bits/stl_vector.h:830:16: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2125.
/usr/include/c++/11/bits/stl_vector.h:830:16: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2125 into std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1925.
/usr/include/c++/11/bits/stl_iterator.h:1182:40: note: Considering inline candidate const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2127.
/usr/include/c++/11/bits/stl_iterator.h:1182:40: optimized:  Inlining const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2127 into bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1926.
/usr/include/c++/11/bits/stl_iterator.h:1182:24: note: Considering inline candidate const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2127.
/usr/include/c++/11/bits/stl_iterator.h:1182:24: optimized:  Inlining const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2127 into bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1926.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = char]/2129.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = char]/2129 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = char]/2130.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = char]/2130.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = char]/2130 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = char]/2131.
/usr/include/c++/11/bits/basic_string.h:201:49: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = char]/2131.
/usr/include/c++/11/bits/basic_string.h:201:49: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = char]/2131 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1943.
/usr/include/c++/11/bits/stl_vector.h:839:16: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2179.
/usr/include/c++/11/bits/stl_vector.h:839:16: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2179 into std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2013.
/usr/include/c++/11/bits/stl_vector.h:821:16: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2179.
/usr/include/c++/11/bits/stl_vector.h:821:16: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2179 into std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2012.
/usr/include/c++/11/bits/allocator.h:156:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__cxx11::basic_string<char>]/2186.
/usr/include/c++/11/bits/allocator.h:156:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__cxx11::basic_string<char>]/2186 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__cxx11::basic_string<char>]/2021.
/usr/include/c++/11/bits/stl_vector.h:133:19: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_impl_data::_Vector_impl_data() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2024.
/usr/include/c++/11/bits/stl_vector.h:133:19: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_impl_data::_Vector_impl_data() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2024 into std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1815.
/usr/include/c++/11/bits/stl_vector.h:133:19: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__cxx11::basic_string<char>]/2021.
/usr/include/c++/11/bits/stl_vector.h:133:19: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__cxx11::basic_string<char>]/2021 into std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1815.
/usr/include/c++/11/bits/stl_vector.h:288:7: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1815.
/usr/include/c++/11/bits/stl_vector.h:288:7: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1815 into std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/530.
/usr/include/c++/11/bits/stl_vector.h:487:7: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/530.
/usr/include/c++/11/bits/stl_vector.h:487:7: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/530 into std::vector<_Tp, _Alloc>::vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/533.
/usr/include/c++/11/bits/stl_vector.h:839:16: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2195.
/usr/include/c++/11/bits/stl_vector.h:839:16: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2195 into std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2047.
/usr/include/c++/11/bits/stl_vector.h:821:16: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2195.
/usr/include/c++/11/bits/stl_vector.h:821:16: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2195 into std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2046.
/usr/include/c++/11/bits/stl_vector.h:830:16: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2202.
/usr/include/c++/11/bits/stl_vector.h:830:16: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2202 into std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2052.
/usr/include/c++/11/bits/stl_vector.h:812:16: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2202.
/usr/include/c++/11/bits/stl_vector.h:812:16: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2202 into std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2050.
/usr/include/c++/11/bits/hashtable_policy.h:1834:40: note: Considering inline candidate _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_get() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2213.
/usr/include/c++/11/bits/hashtable_policy.h:1834:40: optimized:  Inlining _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_get() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2213 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056.
/usr/include/c++/11/bits/hashtable_policy.h:1838:41: note: Considering inline candidate const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2214.
/usr/include/c++/11/bits/hashtable_policy.h:1838:41: optimized:  Inlining const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2214 into const __node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() const [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2057.
/usr/include/c++/11/bits/hashtable.h:322:20: note: Considering inline candidate constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2219.
/usr/include/c++/11/bits/hashtable.h:322:20: optimized:  Inlining constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2219 into static constexpr typename std::conditional<std::is_lvalue_reference<_Ht>::value, const _Value&, _Value&&>::type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__fwd_value_for(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::value_type&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2220.
/usr/include/c++/11/bits/allocator.h:156:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2242.
/usr/include/c++/11/bits/allocator.h:156:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2242 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2087.
/usr/include/c++/11/bits/hashtable_policy.h:1127:63: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2087.
/usr/include/c++/11/bits/hashtable_policy.h:1127:63: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2087 into std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1891.
/usr/include/c++/11/bits/hashtable_policy.h:1823:7: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1891.
/usr/include/c++/11/bits/hashtable_policy.h:1823:7: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1891 into std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1485.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)/135.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)/135 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1491.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Hash_node_base::_Hash_node_base()/128.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Hash_node_base::_Hash_node_base()/128 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1491.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1485.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1485 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1491.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1479.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1479 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1491.
/usr/include/c++/11/bits/unordered_map.h:141:7: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1491.
/usr/include/c++/11/bits/unordered_map.h:141:7: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1491 into std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map() [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/1494.
ldap.hpp:8:7: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map() [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/1494.
ldap.hpp:8:7: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map() [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/1494 into LdapObject::LdapObject()/1500.
ldap.hpp:35:7: note: Considering inline candidate LdapObject::LdapObject()/1500.
ldap.hpp:35:7: optimized:  Inlining LdapObject::LdapObject()/1500 into LdapOperation::LdapOperation()/1529.
ldap.hpp:35:7: note: Considering inline candidate std::vector<_Tp, _Alloc>::vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1526.
ldap.hpp:35:7: optimized:  Inlining std::vector<_Tp, _Alloc>::vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1526 into LdapOperation::LdapOperation()/1529.
/usr/include/c++/11/bits/basic_string.tcc:232:15: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1957.
/usr/include/c++/11/bits/basic_string.tcc:232:15: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1957 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2096.
/usr/include/c++/11/bits/basic_string.tcc:225:25: note: Considering inline candidate static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2245.
/usr/include/c++/11/bits/basic_string.tcc:225:25: optimized:  Inlining static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2245 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2096.
/usr/include/c++/11/bits/basic_string.tcc:225:25: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936.
/usr/include/c++/11/bits/basic_string.tcc:225:25: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2096.
/usr/include/c++/11/bits/basic_string.tcc:220:17: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1955.
/usr/include/c++/11/bits/basic_string.tcc:220:17: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1955 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2096.
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1954.
/usr/include/c++/11/bits/basic_string.tcc:219:13: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1954 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2096.
/usr/include/c++/11/bits/basic_string.tcc:215:57: note: Considering inline candidate constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char*]/2095.
/usr/include/c++/11/bits/basic_string.tcc:215:57: optimized:  Inlining constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char*]/2095 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2096.
/usr/include/c++/11/bits/basic_string.tcc:211:34: note: Considering inline candidate bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = const char]/2244.
/usr/include/c++/11/bits/basic_string.tcc:211:34: optimized:  Inlining bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = const char]/2244 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2096.
/usr/include/c++/11/bits/basic_string.h:255:23: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2096.
/usr/include/c++/11/bits/basic_string.h:255:23: missed:   will not early inline: void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2140->void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2096, growth 24 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/basic_string.h:274:20: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2140.
/usr/include/c++/11/bits/basic_string.h:274:20: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2140 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1968.
/usr/include/c++/11/bits/alloc_traits.h:716:19: note: Considering inline candidate constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >&]/2274.
/usr/include/c++/11/bits/alloc_traits.h:716:19: optimized:  Inlining constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >&]/2274 into constexpr void std::__alloc_on_move(_Alloc&, _Alloc&) [with _Alloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2275.
/usr/include/c++/11/bits/allocator.h:160:34: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = LdapObject]/2278.
/usr/include/c++/11/bits/allocator.h:160:34: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = LdapObject]/2278 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = LdapObject]/2111.
/usr/include/c++/11/bits/stl_vector.h:137:22: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_impl_data::_Vector_impl_data() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2122.
/usr/include/c++/11/bits/stl_vector.h:137:22: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_impl_data::_Vector_impl_data() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2122 into std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2237.
/usr/include/c++/11/bits/stl_vector.h:137:22: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = LdapObject]/2111.
/usr/include/c++/11/bits/stl_vector.h:137:22: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = LdapObject]/2111 into std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2237.
/usr/include/c++/11/bits/allocator.h:160:34: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = char]/2283.
/usr/include/c++/11/bits/allocator.h:160:34: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = char]/2283 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/2133.
/usr/include/c++/11/bits/alloc_traits.h:563:16: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/2133.
/usr/include/c++/11/bits/alloc_traits.h:563:16: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/2133 into static std::allocator_traits<std::allocator<_Tp1> >::allocator_type std::allocator_traits<std::allocator<_Tp1> >::select_on_container_copy_construction(const allocator_type&) [with _Tp = char]/2189.
/usr/include/c++/11/ext/alloc_traits.h:98:67: note: Considering inline candidate static std::allocator_traits<std::allocator<_Tp1> >::allocator_type std::allocator_traits<std::allocator<_Tp1> >::select_on_container_copy_construction(const allocator_type&) [with _Tp = char]/2189.
/usr/include/c++/11/ext/alloc_traits.h:98:67: optimized:  Inlining static std::allocator_traits<std::allocator<_Tp1> >::allocator_type std::allocator_traits<std::allocator<_Tp1> >::select_on_container_copy_construction(const allocator_type&) [with _Tp = char]/2189 into static constexpr _Alloc __gnu_cxx::__alloc_traits<_Alloc, <template-parameter-1-2> >::_S_select_on_copy(const _Alloc&) [with _Alloc = std::allocator<char>; <template-parameter-1-2> = char]/2030.
/usr/include/c++/11/bits/basic_string.h:168:46: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/2133.
/usr/include/c++/11/bits/basic_string.h:168:46: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/2133 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1951.
/usr/include/c++/11/bits/basic_string.h:168:28: note: Considering inline candidate constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<char>&]/1949.
/usr/include/c++/11/bits/basic_string.h:168:28: optimized:  Inlining constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<char>&]/1949 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1951.
/usr/include/c++/11/bits/basic_string.h:491:7: note: Considering inline candidate std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1650.
/usr/include/c++/11/bits/basic_string.h:491:7: optimized:  Inlining std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1650 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2119.
/usr/include/c++/11/bits/basic_string.h:490:14: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1968.
/usr/include/c++/11/bits/basic_string.h:490:14: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1968 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2119.
/usr/include/c++/11/bits/basic_string.h:490:48: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_limit(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2280.
/usr/include/c++/11/bits/basic_string.h:490:48: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_limit(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2280 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2119.
/usr/include/c++/11/bits/basic_string.h:489:20: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2117.
/usr/include/c++/11/bits/basic_string.h:489:20: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2117 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2119.
/usr/include/c++/11/bits/basic_string.h:488:39: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936.
/usr/include/c++/11/bits/basic_string.h:488:39: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2119.
/usr/include/c++/11/bits/basic_string.h:486:9: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
/usr/include/c++/11/bits/basic_string.h:486:9: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2119.
/usr/include/c++/11/bits/basic_string.h:486:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1951.
/usr/include/c++/11/bits/basic_string.h:486:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1951 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2119.
/usr/include/c++/11/bits/basic_string.h:486:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1943.
/usr/include/c++/11/bits/basic_string.h:486:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1943 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2119.
/usr/include/c++/11/bits/basic_string.h:486:9: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644.
/usr/include/c++/11/bits/basic_string.h:486:9: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2119.
/usr/include/c++/11/bits/basic_string.h:2856:52: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2119.
/usr/include/c++/11/bits/basic_string.h:2856:52: missed:   will not early inline: std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1920->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2119, growth 13 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/basic_string.h:2856:52: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2117.
/usr/include/c++/11/bits/basic_string.h:2856:52: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2117 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1920.
/usr/include/c++/11/bits/basic_string.h:165:35: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/2133.
/usr/include/c++/11/bits/basic_string.h:165:35: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/2133 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1945.
/usr/include/c++/11/bits/basic_string.h:555:33: note: Considering inline candidate std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1650.
/usr/include/c++/11/bits/basic_string.h:555:33: optimized:  Inlining std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1650 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, _CharT, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1653.
/usr/include/c++/11/bits/basic_string.h:554:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1945.
/usr/include/c++/11/bits/basic_string.h:554:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1945 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, _CharT, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1653.
/usr/include/c++/11/bits/basic_string.h:554:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1943.
/usr/include/c++/11/bits/basic_string.h:554:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1943 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, _CharT, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1653.
/usr/include/c++/11/bits/basic_string.h:6690:3: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
/usr/include/c++/11/bits/basic_string.h:6690:3: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into std::string std::__cxx11::to_string(long unsigned int)/488.
/usr/include/c++/11/bits/basic_string.h:6693:33: note: Considering inline candidate void std::__detail::__to_chars_10_impl(char*, unsigned int, _Tp) [with _Tp = long unsigned int]/1666.
/usr/include/c++/11/bits/basic_string.h:6693:33: missed:   will not early inline: std::string std::__cxx11::to_string(long unsigned int)/488->void std::__detail::__to_chars_10_impl(char*, unsigned int, _Tp) [with _Tp = long unsigned int]/1666, call is cold and code would grow at least by 23
/usr/include/c++/11/bits/basic_string.h:6693:42: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::reference std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[](std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1658.
/usr/include/c++/11/bits/basic_string.h:6693:42: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::reference std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[](std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1658 into std::string std::__cxx11::to_string(long unsigned int)/488.
/usr/include/c++/11/bits/basic_string.h:6693:55: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664.
/usr/include/c++/11/bits/basic_string.h:6693:55: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664 into std::string std::__cxx11::to_string(long unsigned int)/488.
/usr/include/c++/11/bits/basic_string.h:6690:3: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
/usr/include/c++/11/bits/basic_string.h:6690:3: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into std::string std::__cxx11::to_string(long unsigned int)/488.
/usr/include/c++/11/bits/basic_string.h:6692:55: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, _CharT, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1653.
/usr/include/c++/11/bits/basic_string.h:6692:55: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, _CharT, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1653 into std::string std::__cxx11::to_string(long unsigned int)/488.
/usr/include/c++/11/bits/basic_string.h:6692:42: note: Considering inline candidate constexpr unsigned int std::__detail::__to_chars_len(_Tp, int) [with _Tp = long unsigned int]/487.
/usr/include/c++/11/bits/basic_string.h:6692:42: optimized:  Inlining constexpr unsigned int std::__detail::__to_chars_len(_Tp, int) [with _Tp = long unsigned int]/487 into std::string std::__cxx11::to_string(long unsigned int)/488.
/usr/include/c++/11/bits/basic_string.h:6692:55: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644.
/usr/include/c++/11/bits/basic_string.h:6692:55: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644 into std::string std::__cxx11::to_string(long unsigned int)/488.
/usr/include/c++/11/bits/basic_string.h:6660:3: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
/usr/include/c++/11/bits/basic_string.h:6660:3: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into std::string std::__cxx11::to_string(int)/483.
/usr/include/c++/11/bits/basic_string.h:6666:33: note: Considering inline candidate void std::__detail::__to_chars_10_impl(char*, unsigned int, _Tp) [with _Tp = unsigned int]/1660.
/usr/include/c++/11/bits/basic_string.h:6666:33: missed:   will not early inline: std::string std::__cxx11::to_string(int)/483->void std::__detail::__to_chars_10_impl(char*, unsigned int, _Tp) [with _Tp = unsigned int]/1660, call is cold and code would grow at least by 23
/usr/include/c++/11/bits/basic_string.h:6666:46: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::reference std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[](std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1658.
/usr/include/c++/11/bits/basic_string.h:6666:46: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::reference std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[](std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1658 into std::string std::__cxx11::to_string(int)/483.
/usr/include/c++/11/bits/basic_string.h:6660:3: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
/usr/include/c++/11/bits/basic_string.h:6660:3: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into std::string std::__cxx11::to_string(int)/483.
/usr/include/c++/11/bits/basic_string.h:6665:36: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, _CharT, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1653.
/usr/include/c++/11/bits/basic_string.h:6665:36: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, _CharT, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1653 into std::string std::__cxx11::to_string(int)/483.
/usr/include/c++/11/bits/basic_string.h:6665:36: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644.
/usr/include/c++/11/bits/basic_string.h:6665:36: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644 into std::string std::__cxx11::to_string(int)/483.
/usr/include/c++/11/bits/basic_string.h:6664:48: note: Considering inline candidate constexpr unsigned int std::__detail::__to_chars_len(_Tp, int) [with _Tp = unsigned int]/484.
/usr/include/c++/11/bits/basic_string.h:6664:48: optimized:  Inlining constexpr unsigned int std::__detail::__to_chars_len(_Tp, int) [with _Tp = unsigned int]/484 into std::string std::__cxx11::to_string(int)/483.
/usr/include/c++/11/bits/basic_string.h:540:7: note: Considering inline candidate std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1650.
/usr/include/c++/11/bits/basic_string.h:540:7: optimized:  Inlining std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1650 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900.
/usr/include/c++/11/bits/basic_string.h:539:14: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2096.
/usr/include/c++/11/bits/basic_string.h:539:14: missed:   will not early inline: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900->void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2096, growth 24 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/basic_string.h:536:55: note: Considering inline candidate static constexpr std::size_t std::char_traits<char>::length(const char_type*)/296.
/usr/include/c++/11/bits/basic_string.h:536:55: optimized:  Inlining static constexpr std::size_t std::char_traits<char>::length(const char_type*)/296 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900.
/usr/include/c++/11/bits/basic_string.h:534:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1945.
/usr/include/c++/11/bits/basic_string.h:534:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1945 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900.
/usr/include/c++/11/bits/basic_string.h:534:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1943.
/usr/include/c++/11/bits/basic_string.h:534:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1943 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = const char]/2286.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = const char]/2286 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = const char]/2287.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = const char]/2287.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = const char]/2287 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const char]/2288.
/usr/include/c++/11/bits/basic_string.h:211:55: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const char]/2288.
/usr/include/c++/11/bits/basic_string.h:211:55: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const char]/2288 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2136.
/usr/include/c++/11/bits/basic_string.h:230:42: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2136.
/usr/include/c++/11/bits/basic_string.h:230:42: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2136 into bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1953.
/usr/include/c++/11/bits/basic_string.h:230:23: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936.
/usr/include/c++/11/bits/basic_string.h:230:23: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936 into bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1953.
/usr/include/c++/11/bits/basic_string.h:584:21: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1957.
/usr/include/c++/11/bits/basic_string.h:584:21: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1957 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1662.
/usr/include/c++/11/bits/basic_string.h:583:15: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1954.
/usr/include/c++/11/bits/basic_string.h:583:15: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1954 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1662.
/usr/include/c++/11/bits/basic_string.h:583:15: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1943.
/usr/include/c++/11/bits/basic_string.h:583:15: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1943 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1662.
/usr/include/c++/11/bits/basic_string.h:582:11: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1956.
/usr/include/c++/11/bits/basic_string.h:582:11: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1956 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1662.
/usr/include/c++/11/bits/basic_string.h:582:11: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1751.
/usr/include/c++/11/bits/basic_string.h:582:11: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1751 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1662.
/usr/include/c++/11/bits/basic_string.h:576:17: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1955.
/usr/include/c++/11/bits/basic_string.h:576:17: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1955 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1662.
/usr/include/c++/11/bits/basic_string.h:575:13: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1954.
/usr/include/c++/11/bits/basic_string.h:575:13: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1954 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1662.
/usr/include/c++/11/bits/basic_string.h:575:13: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936.
/usr/include/c++/11/bits/basic_string.h:575:13: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1662.
/usr/include/c++/11/bits/basic_string.h:570:23: note: Considering inline candidate static std::char_traits<char>::char_type* std::char_traits<char>::copy(std::char_traits<char>::char_type*, const char_type*, std::size_t)/300.
/usr/include/c++/11/bits/basic_string.h:570:23: optimized:  Inlining static std::char_traits<char>::char_type* std::char_traits<char>::copy(std::char_traits<char>::char_type*, const char_type*, std::size_t)/300 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1662.
/usr/include/c++/11/bits/basic_string.h:568:23: note: Considering inline candidate bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1953.
/usr/include/c++/11/bits/basic_string.h:568:23: optimized:  Inlining bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1953 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1662.
/usr/include/c++/11/bits/basic_string.h:566:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1951.
/usr/include/c++/11/bits/basic_string.h:566:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1951 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1662.
/usr/include/c++/11/bits/basic_string.h:566:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1943.
/usr/include/c++/11/bits/basic_string.h:566:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1943 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1662.
/usr/include/c++/11/bits/basic_string.h:566:47: note: Considering inline candidate constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<char>&]/1949.
/usr/include/c++/11/bits/basic_string.h:566:47: optimized:  Inlining constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<char>&]/1949 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1662.
/usr/include/c++/11/bits/basic_string.h:566:70: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1948.
/usr/include/c++/11/bits/basic_string.h:566:70: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1948 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1662.
/usr/include/c++/11/bits/basic_string.h:6196:46: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1662.
/usr/include/c++/11/bits/basic_string.h:6196:46: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1662 into std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1869.
/usr/include/c++/11/bits/basic_string.h:6196:23: note: Considering inline candidate constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::__cxx11::basic_string<char>&]/1902.
/usr/include/c++/11/bits/basic_string.h:6196:23: optimized:  Inlining constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::__cxx11::basic_string<char>&]/1902 into std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1869.
/usr/include/c++/11/bits/basic_string.h:6196:23: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2074.
/usr/include/c++/11/bits/basic_string.h:6196:23: missed:   will not early inline: std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1869->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2074, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable_policy.h:1233:28: note: Considering inline candidate std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/133.
/usr/include/c++/11/bits/hashtable_policy.h:1233:28: optimized:  Inlining std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/133 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2321.
/usr/include/c++/11/bits/hashtable.h:795:49: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2321.
/usr/include/c++/11/bits/hashtable.h:795:49: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2321 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2167.
/usr/include/c++/11/ext/aligned_buffer.h:115:41: note: Considering inline candidate void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2326.
/usr/include/c++/11/ext/aligned_buffer.h:115:41: optimized:  Inlining void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2326 into _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2172.
/usr/include/c++/11/bits/hashtable_policy.h:238:33: note: Considering inline candidate _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2172.
/usr/include/c++/11/bits/hashtable_policy.h:238:33: optimized:  Inlining _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2172 into _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2006.
/usr/include/c++/11/bits/hashtable_policy.h:246:26: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2006.
/usr/include/c++/11/bits/hashtable_policy.h:246:26: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2006 into _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2019.
/usr/include/c++/11/bits/hashtable_policy.h:347:39: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2006.
/usr/include/c++/11/bits/hashtable_policy.h:347:39: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2006 into std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::pointer std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator->() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/2265.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__cxx11::basic_string<char>]/2334.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__cxx11::basic_string<char>]/2334 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__cxx11::basic_string<char>]/2188.
/usr/include/c++/11/bits/stl_vector.h:354:19: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__cxx11::basic_string<char>]/2188.
/usr/include/c++/11/bits/stl_vector.h:354:19: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__cxx11::basic_string<char>]/2188 into void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2029.
/usr/include/c++/11/bits/stl_vector.h:337:7: note: Considering inline candidate std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl::~_Vector_impl()/527.
/usr/include/c++/11/bits/stl_vector.h:337:7: optimized:  Inlining std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl::~_Vector_impl()/527 into std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1821.
/usr/include/c++/11/bits/stl_vector.h:335:15: note: Considering inline candidate void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2029.
/usr/include/c++/11/bits/stl_vector.h:335:15: optimized:  Inlining void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2029 into std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1821.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:141:29: note: Considering inline candidate constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = char*]/2336.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:141:29: optimized:  Inlining constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = char*]/2336 into constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = char*]/2337.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = LdapObject]/2339.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = LdapObject]/2339 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = LdapObject]/2193.
/usr/include/c++/11/bits/stl_vector.h:354:19: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = LdapObject]/2193.
/usr/include/c++/11/bits/stl_vector.h:354:19: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = LdapObject]/2193 into void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2043.
/usr/include/c++/11/bits/stl_vector.h:337:7: note: Considering inline candidate std::_Vector_base<LdapObject, std::allocator<LdapObject> >::_Vector_impl::~_Vector_impl()/1511.
/usr/include/c++/11/bits/stl_vector.h:337:7: optimized:  Inlining std::_Vector_base<LdapObject, std::allocator<LdapObject> >::_Vector_impl::~_Vector_impl()/1511 into std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1915.
/usr/include/c++/11/bits/stl_vector.h:335:15: note: Considering inline candidate void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2043.
/usr/include/c++/11/bits/stl_vector.h:335:15: optimized:  Inlining void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2043 into std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1915.
/usr/include/c++/11/bits/hashtable.h:426:37: note: Considering inline candidate bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_uses_single_bucket(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2355.
/usr/include/c++/11/bits/hashtable.h:426:37: optimized:  Inlining bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_uses_single_bucket(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2355 into bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_uses_single_bucket() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2273.
/usr/include/c++/11/bits/hashtable_policy.h:277:12: note: Considering inline candidate std::__detail::_Hash_node_base::_Hash_node_base()/128.
/usr/include/c++/11/bits/hashtable_policy.h:277:12: optimized:  Inlining std::__detail::_Hash_node_base::_Hash_node_base()/128 into std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>::_Hash_node()/2359.
/usr/include/c++/11/bits/hashtable_policy.h:1251:28: note: Considering inline candidate std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/133.
/usr/include/c++/11/bits/hashtable_policy.h:1251:28: optimized:  Inlining std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/133 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, true>&, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2362.
/usr/include/c++/11/bits/hashtable.h:791:49: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, true>&, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2362.
/usr/include/c++/11/bits/hashtable.h:791:49: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, true>&, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2362 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2225.
/usr/include/c++/11/bits/hashtable.h:410:30: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2225.
/usr/include/c++/11/bits/hashtable.h:410:30: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2225 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2276.
/usr/include/c++/11/bits/hashtable.h:410:40: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2059.
/usr/include/c++/11/bits/hashtable.h:410:40: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2059 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2276.
/usr/include/c++/11/bits/hashtable.h:409:14: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2059.
/usr/include/c++/11/bits/hashtable.h:409:14: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2059 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2276.
/usr/include/c++/11/bits/hashtable.h:417:18: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2276.
/usr/include/c++/11/bits/hashtable.h:417:18: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2276 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2224.
/usr/include/c++/11/tuple:200:37: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__cxx11::basic_string<char>]/2253.
/usr/include/c++/11/tuple:200:37: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__cxx11::basic_string<char>]/2253 into constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(_UHead&&) [with _UHead = std::__cxx11::basic_string<char>; long unsigned int _Idx = 0; _Head = std::__cxx11::basic_string<char>&&]/2369.
/usr/include/c++/11/tuple:441:38: note: Considering inline candidate constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(_UHead&&) [with _UHead = std::__cxx11::basic_string<char>; long unsigned int _Idx = 0; _Head = std::__cxx11::basic_string<char>&&]/2369.
/usr/include/c++/11/tuple:441:38: optimized:  Inlining constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(_UHead&&) [with _UHead = std::__cxx11::basic_string<char>; long unsigned int _Idx = 0; _Head = std::__cxx11::basic_string<char>&&]/2369 into constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(_UHead&&) [with _UHead = std::__cxx11::basic_string<char>; long unsigned int _Idx = 0; _Head = std::__cxx11::basic_string<char>&&]/2372.
/usr/include/c++/11/tuple:441:38: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__cxx11::basic_string<char>]/2253.
/usr/include/c++/11/tuple:441:38: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__cxx11::basic_string<char>]/2253 into constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(_UHead&&) [with _UHead = std::__cxx11::basic_string<char>; long unsigned int _Idx = 0; _Head = std::__cxx11::basic_string<char>&&]/2372.
/usr/include/c++/11/tuple:744:54: note: Considering inline candidate constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(_UHead&&) [with _UHead = std::__cxx11::basic_string<char>; long unsigned int _Idx = 0; _Head = std::__cxx11::basic_string<char>&&]/2372.
/usr/include/c++/11/tuple:744:54: optimized:  Inlining constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(_UHead&&) [with _UHead = std::__cxx11::basic_string<char>; long unsigned int _Idx = 0; _Head = std::__cxx11::basic_string<char>&&]/2372 into constexpr std::tuple<_Elements>::tuple(_UElements&& ...) [with _UElements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}; bool _Valid = true; typename std::enable_if<std::tuple<_Elements>::_TCC<_Valid>::__is_implicitly_constructible<_UElements ...>(), bool>::type <anonymous> = true; _Elements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}]/2375.
/usr/include/c++/11/tuple:744:54: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__cxx11::basic_string<char>]/2253.
/usr/include/c++/11/tuple:744:54: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__cxx11::basic_string<char>]/2253 into constexpr std::tuple<_Elements>::tuple(_UElements&& ...) [with _UElements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}; bool _Valid = true; typename std::enable_if<std::tuple<_Elements>::_TCC<_Valid>::__is_implicitly_constructible<_UElements ...>(), bool>::type <anonymous> = true; _Elements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}]/2375.
/usr/include/c++/11/tuple:1618:70: note: Considering inline candidate constexpr std::tuple<_Elements>::tuple(_UElements&& ...) [with _UElements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}; bool _Valid = true; typename std::enable_if<std::tuple<_Elements>::_TCC<_Valid>::__is_implicitly_constructible<_UElements ...>(), bool>::type <anonymous> = true; _Elements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}]/2375.
/usr/include/c++/11/tuple:1618:70: optimized:  Inlining constexpr std::tuple<_Elements>::tuple(_UElements&& ...) [with _UElements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}; bool _Valid = true; typename std::enable_if<std::tuple<_Elements>::_TCC<_Valid>::__is_implicitly_constructible<_UElements ...>(), bool>::type <anonymous> = true; _Elements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}]/2375 into constexpr std::tuple<_Elements&& ...> std::forward_as_tuple(_Elements&& ...) [with _Elements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}]/2254.
/usr/include/c++/11/tuple:1618:70: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__cxx11::basic_string<char>]/2253.
/usr/include/c++/11/tuple:1618:70: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__cxx11::basic_string<char>]/2253 into constexpr std::tuple<_Elements&& ...> std::forward_as_tuple(_Elements&& ...) [with _Elements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}]/2254.
/usr/include/c++/11/bits/hashtable.h:1908:32: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2225.
/usr/include/c++/11/bits/hashtable.h:1908:32: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2225 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2380.
/usr/include/c++/11/bits/hashtable.h:1908:49: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184.
/usr/include/c++/11/bits/hashtable.h:1908:49: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2380.
/usr/include/c++/11/bits/hashtable_policy.h:339:24: note: Considering inline candidate std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_Node_iterator_base(std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::__node_type*) [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2324.
/usr/include/c++/11/bits/hashtable_policy.h:339:24: optimized:  Inlining std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_Node_iterator_base(std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::__node_type*) [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2324 into std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/2382.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:206:21: note: Considering inline candidate constexpr void std::__advance(_RandomAccessIterator&, _Distance, std::random_access_iterator_tag) [with _RandomAccessIterator = const std::__cxx11::basic_string<char>*; _Distance = long int]/2389.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:206:21: optimized:  Inlining constexpr void std::__advance(_RandomAccessIterator&, _Distance, std::random_access_iterator_tag) [with _RandomAccessIterator = const std::__cxx11::basic_string<char>*; _Distance = long int]/2389 into constexpr void std::advance(_InputIterator&, _Distance) [with _InputIterator = const std::__cxx11::basic_string<char>*; _Distance = long unsigned int]/2271.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:206:56: note: Considering inline candidate constexpr typename std::iterator_traits< <template-parameter-1-1> >::iterator_category std::__iterator_category(const _Iter&) [with _Iter = const std::__cxx11::basic_string<char>*]/2104.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:206:56: optimized:  Inlining constexpr typename std::iterator_traits< <template-parameter-1-1> >::iterator_category std::__iterator_category(const _Iter&) [with _Iter = const std::__cxx11::basic_string<char>*]/2104 into constexpr void std::advance(_InputIterator&, _Distance) [with _InputIterator = const std::__cxx11::basic_string<char>*; _Distance = long unsigned int]/2271.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = char]/2391.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = char]/2391 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = char]/2285.
/usr/include/c++/11/bits/basic_string.h:245:34: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = char]/2285.
/usr/include/c++/11/bits/basic_string.h:245:34: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = char]/2285 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2135.
/usr/include/c++/11/bits/basic_string.h:245:51: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1948.
/usr/include/c++/11/bits/basic_string.h:245:51: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1948 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2135.
/usr/include/c++/11/bits/basic_string.h:245:34: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936.
/usr/include/c++/11/bits/basic_string.h:245:34: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2135.
/usr/include/c++/11/bits/basic_string.h:240:14: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2135.
/usr/include/c++/11/bits/basic_string.h:240:14: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2135 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1947.
/usr/include/c++/11/bits/basic_string.h:239:18: note: Considering inline candidate bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1953.
/usr/include/c++/11/bits/basic_string.h:239:18: optimized:  Inlining bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1953 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1947.
/usr/include/c++/11/bits/basic_string.h:672:23: note: Considering inline candidate std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1650.
/usr/include/c++/11/bits/basic_string.h:672:23: optimized:  Inlining std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1650 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
/usr/include/c++/11/bits/basic_string.h:672:19: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1947.
/usr/include/c++/11/bits/basic_string.h:672:19: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1947 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
/usr/include/c++/11/bits/hashtable_policy.h:1276:51: note: Considering inline candidate const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 1; _Tp = std::hash<std::__cxx11::basic_string<char> >]/2425.
/usr/include/c++/11/bits/hashtable_policy.h:1276:51: optimized:  Inlining const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 1; _Tp = std::hash<std::__cxx11::basic_string<char> >]/2425 into const _Hash& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2320.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: note: Considering inline candidate std::size_t std::hash<std::__cxx11::basic_string<char> >::operator()(const string&) const/512.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: optimized:  Inlining std::size_t std::hash<std::__cxx11::basic_string<char> >::operator()(const string&) const/512 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2166.
/usr/include/c++/11/bits/hashtable_policy.h:1219:16: note: Considering inline candidate const _Hash& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2320.
/usr/include/c++/11/bits/hashtable_policy.h:1219:16: optimized:  Inlining const _Hash& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2320 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2166.
/usr/include/c++/11/bits/allocator.h:160:34: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = std::__cxx11::basic_string<char>]/2428.
/usr/include/c++/11/bits/allocator.h:160:34: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = std::__cxx11::basic_string<char>]/2428 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__cxx11::basic_string<char>]/2328.
/usr/include/c++/11/bits/alloc_traits.h:563:16: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__cxx11::basic_string<char>]/2328.
/usr/include/c++/11/bits/alloc_traits.h:563:16: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__cxx11::basic_string<char>]/2328 into static std::allocator_traits<std::allocator<_Tp1> >::allocator_type std::allocator_traits<std::allocator<_Tp1> >::select_on_container_copy_construction(const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>]/2173.
/usr/include/c++/11/ext/alloc_traits.h:98:67: note: Considering inline candidate static std::allocator_traits<std::allocator<_Tp1> >::allocator_type std::allocator_traits<std::allocator<_Tp1> >::select_on_container_copy_construction(const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>]/2173.
/usr/include/c++/11/ext/alloc_traits.h:98:67: optimized:  Inlining static std::allocator_traits<std::allocator<_Tp1> >::allocator_type std::allocator_traits<std::allocator<_Tp1> >::select_on_container_copy_construction(const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>]/2173 into static constexpr _Alloc __gnu_cxx::__alloc_traits<_Alloc, <template-parameter-1-2> >::_S_select_on_copy(const _Alloc&) [with _Alloc = std::allocator<std::__cxx11::basic_string<char> >; <template-parameter-1-2> = std::__cxx11::basic_string<char>]/2007.
/usr/include/c++/11/bits/stl_vector.h:137:22: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_impl_data::_Vector_impl_data() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2024.
/usr/include/c++/11/bits/stl_vector.h:137:22: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_impl_data::_Vector_impl_data() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2024 into std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2175.
/usr/include/c++/11/bits/stl_vector.h:137:22: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__cxx11::basic_string<char>]/2328.
/usr/include/c++/11/bits/stl_vector.h:137:22: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__cxx11::basic_string<char>]/2328 into std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2175.
/usr/include/c++/11/bits/stl_construct.h:151:22: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
/usr/include/c++/11/bits/stl_construct.h:151:22: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into constexpr void std::_Destroy(_Tp*) [with _Tp = std::__cxx11::basic_string<char>]/2436.
/usr/include/c++/11/bits/stl_construct.h:163:19: note: Considering inline candidate constexpr void std::_Destroy(_Tp*) [with _Tp = std::__cxx11::basic_string<char>]/2436.
/usr/include/c++/11/bits/stl_construct.h:163:19: optimized:  Inlining constexpr void std::_Destroy(_Tp*) [with _Tp = std::__cxx11::basic_string<char>]/2436 into static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/2333.
/usr/include/c++/11/bits/stl_construct.h:163:19: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__cxx11::basic_string<char>]/2332.
/usr/include/c++/11/bits/stl_construct.h:163:19: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__cxx11::basic_string<char>]/2332 into static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/2333.
/usr/include/c++/11/bits/stl_construct.h:196:11: note: Considering inline candidate static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/2333.
/usr/include/c++/11/bits/stl_construct.h:196:11: missed:   will not early inline: void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*]/2183->static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/2333, growth 8 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/alloc_traits.h:848:15: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*]/2183.
/usr/include/c++/11/bits/alloc_traits.h:848:15: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*]/2183 into void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/2016.
/usr/include/c++/11/bits/stl_vector.h:1796:19: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/2016.
/usr/include/c++/11/bits/stl_vector.h:1796:19: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/2016 into void std::vector<_Tp, _Alloc>::_M_erase_at_end(std::vector<_Tp, _Alloc>::pointer) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2269.
/usr/include/c++/11/bits/stl_vector.h:1797:25: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2014.
/usr/include/c++/11/bits/stl_vector.h:1797:25: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2014 into void std::vector<_Tp, _Alloc>::_M_erase_at_end(std::vector<_Tp, _Alloc>::pointer) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2269.
/usr/include/c++/11/bits/stl_vector.h:683:7: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1821.
/usr/include/c++/11/bits/stl_vector.h:683:7: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1821 into std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1808.
/usr/include/c++/11/bits/stl_vector.h:680:15: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/2016.
/usr/include/c++/11/bits/stl_vector.h:680:15: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/2016 into std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1808.
/usr/include/c++/11/bits/stl_vector.h:681:28: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2014.
/usr/include/c++/11/bits/stl_vector.h:681:28: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2014 into std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1808.
/usr/include/c++/11/bits/basic_string.tcc:232:15: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1957.
/usr/include/c++/11/bits/basic_string.tcc:232:15: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1957 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2338.
/usr/include/c++/11/bits/basic_string.tcc:225:25: note: Considering inline candidate static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, _CharT*, _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2438.
/usr/include/c++/11/bits/basic_string.tcc:225:25: optimized:  Inlining static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, _CharT*, _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2438 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2338.
/usr/include/c++/11/bits/basic_string.tcc:225:25: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936.
/usr/include/c++/11/bits/basic_string.tcc:225:25: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2338.
/usr/include/c++/11/bits/basic_string.tcc:220:17: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1955.
/usr/include/c++/11/bits/basic_string.tcc:220:17: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1955 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2338.
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1954.
/usr/include/c++/11/bits/basic_string.tcc:219:13: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1954 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2338.
/usr/include/c++/11/bits/basic_string.tcc:215:57: note: Considering inline candidate constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = char*]/2337.
/usr/include/c++/11/bits/basic_string.tcc:215:57: optimized:  Inlining constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = char*]/2337 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2338.
/usr/include/c++/11/bits/basic_string.tcc:211:34: note: Considering inline candidate bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = char]/2437.
/usr/include/c++/11/bits/basic_string.tcc:211:34: optimized:  Inlining bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = char]/2437 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2338.
/usr/include/c++/11/bits/basic_string.h:255:23: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2338.
/usr/include/c++/11/bits/basic_string.h:255:23: missed:   will not early inline: void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2190->void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2338, growth 24 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/basic_string.h:274:20: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2190.
/usr/include/c++/11/bits/basic_string.h:274:20: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2190 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2032.
/usr/include/c++/11/bits/basic_string.h:459:74: note: Considering inline candidate std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1650.
/usr/include/c++/11/bits/basic_string.h:459:74: optimized:  Inlining std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1650 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1824.
/usr/include/c++/11/bits/basic_string.h:459:21: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2032.
/usr/include/c++/11/bits/basic_string.h:459:21: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2032 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1824.
/usr/include/c++/11/bits/basic_string.h:459:21: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936.
/usr/include/c++/11/bits/basic_string.h:459:21: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1824.
/usr/include/c++/11/bits/basic_string.h:459:69: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1751.
/usr/include/c++/11/bits/basic_string.h:459:69: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1751 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1824.
/usr/include/c++/11/bits/basic_string.h:459:52: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936.
/usr/include/c++/11/bits/basic_string.h:459:52: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1936 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1824.
/usr/include/c++/11/bits/basic_string.h:457:9: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
/usr/include/c++/11/bits/basic_string.h:457:9: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1824.
/usr/include/c++/11/bits/basic_string.h:457:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1951.
/usr/include/c++/11/bits/basic_string.h:457:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1951 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1824.
/usr/include/c++/11/bits/basic_string.h:457:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1943.
/usr/include/c++/11/bits/basic_string.h:457:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1943 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1824.
/usr/include/c++/11/bits/basic_string.h:457:9: note: Considering inline candidate static constexpr _Alloc __gnu_cxx::__alloc_traits<_Alloc, <template-parameter-1-2> >::_S_select_on_copy(const _Alloc&) [with _Alloc = std::allocator<char>; <template-parameter-1-2> = char]/2030.
/usr/include/c++/11/bits/basic_string.h:457:9: optimized:  Inlining static constexpr _Alloc __gnu_cxx::__alloc_traits<_Alloc, <template-parameter-1-2> >::_S_select_on_copy(const _Alloc&) [with _Alloc = std::allocator<char>; <template-parameter-1-2> = char]/2030 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1824.
/usr/include/c++/11/bits/basic_string.h:458:62: note: Considering inline candidate const allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2031.
/usr/include/c++/11/bits/basic_string.h:458:62: optimized:  Inlining const allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2031 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1824.
/usr/include/c++/11/bits/stl_construct.h:119:7: note: Considering inline candidate void operator delete(void*, void*)/76.
/usr/include/c++/11/bits/stl_construct.h:119:7: optimized:  Inlining void operator delete(void*, void*)/76 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]/2435.
/usr/include/c++/11/bits/stl_construct.h:119:7: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1824.
/usr/include/c++/11/bits/stl_construct.h:119:7: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1824 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]/2435.
/usr/include/c++/11/bits/stl_construct.h:119:7: note: Considering inline candidate void* operator new(std::size_t, void*)/74.
/usr/include/c++/11/bits/stl_construct.h:119:7: optimized:  Inlining void* operator new(std::size_t, void*)/74 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]/2435.
/usr/include/c++/11/bits/stl_construct.h:119:48: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/2434.
/usr/include/c++/11/bits/stl_construct.h:119:48: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/2434 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]/2435.
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = LdapObject]/2439.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = LdapObject]/2439 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = LdapObject]/2440.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = LdapObject]/2440.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = LdapObject]/2340->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = LdapObject]/2440, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_vector.h:346:33: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = LdapObject]/2340.
/usr/include/c++/11/bits/stl_vector.h:346:33: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = LdapObject]/2340 into std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2197.
/usr/include/c++/11/bits/stl_vector.h:361:44: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2197.
/usr/include/c++/11/bits/stl_vector.h:361:44: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2197 into void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2239.
/usr/include/c++/11/bits/stl_vector.h:305:33: note: Considering inline candidate std::_Vector_base<LdapObject, std::allocator<LdapObject> >::_Vector_impl::~_Vector_impl()/1511.
/usr/include/c++/11/bits/stl_vector.h:305:33: optimized:  Inlining std::_Vector_base<LdapObject, std::allocator<LdapObject> >::_Vector_impl::~_Vector_impl()/1511 into std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2083.
/usr/include/c++/11/bits/stl_vector.h:305:26: note: Considering inline candidate void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2239.
/usr/include/c++/11/bits/stl_vector.h:305:26: missed:   will not early inline: std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2083->void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2239, growth 8 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_vector.h:304:9: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2237.
/usr/include/c++/11/bits/stl_vector.h:304:9: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2237 into std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2083.
/usr/include/c++/11/bits/stl_iterator.h:1293:23: note: Considering inline candidate const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2443.
/usr/include/c++/11/bits/stl_iterator.h:1293:23: optimized:  Inlining const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2443 into _Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2344.
/usr/include/c++/11/bits/stl_iterator.h:1293:23: note: Considering inline candidate const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2444.
/usr/include/c++/11/bits/stl_iterator.h:1293:23: optimized:  Inlining const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2444 into _Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2345.
/usr/include/c++/11/bits/stl_iterator.h:1091:16: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2202.
/usr/include/c++/11/bits/stl_iterator.h:1091:16: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2202 into __gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type) const [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2446.
/usr/include/c++/11/bits/stl_algobase.h:329:21: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type) const [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2446.
/usr/include/c++/11/bits/stl_algobase.h:329:21: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type) const [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2446 into _From std::__niter_wrap(_From, _To) [with _From = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >; _To = LdapObject*]/2347.
/usr/include/c++/11/bits/stl_algobase.h:329:49: note: Considering inline candidate _Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2345.
/usr/include/c++/11/bits/stl_algobase.h:329:49: optimized:  Inlining _Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2345 into _From std::__niter_wrap(_From, _To) [with _From = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >; _To = LdapObject*]/2347.
/usr/include/c++/11/bits/stl_iterator.h:1182:40: note: Considering inline candidate const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2444.
/usr/include/c++/11/bits/stl_iterator.h:1182:40: optimized:  Inlining const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2444 into bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2447.
/usr/include/c++/11/bits/stl_iterator.h:1182:24: note: Considering inline candidate const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2444.
/usr/include/c++/11/bits/stl_iterator.h:1182:24: optimized:  Inlining const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2444 into bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2447.
/usr/include/c++/11/bits/stl_pair.h:211:12: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
/usr/include/c++/11/bits/stl_pair.h:211:12: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/2460.
/usr/include/c++/11/bits/stl_pair.h:211:12: note: Considering inline candidate std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1808.
/usr/include/c++/11/bits/stl_pair.h:211:12: missed:   will not early inline: std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/2460->std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1808, growth 9 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/ext/new_allocator.h:168:13: note: Considering inline candidate std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/2460.
/usr/include/c++/11/ext/new_allocator.h:168:13: missed:   will not early inline: void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2462->std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/2460, growth 7 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/alloc_traits.h:535:15: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2462.
/usr/include/c++/11/bits/alloc_traits.h:535:15: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2462 into static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2353.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2463.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2463 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2464.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2464.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2464 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2465.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/2467.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/2467 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/2468.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/2468.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/2468 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/2469.
/usr/include/c++/11/ext/new_allocator.h:155:27: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = LdapObject]/2439.
/usr/include/c++/11/ext/new_allocator.h:155:27: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = LdapObject]/2439 into __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = LdapObject]/2483.
/usr/include/c++/11/bits/alloc_traits.h:550:21: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = LdapObject]/2483.
/usr/include/c++/11/bits/alloc_traits.h:550:21: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = LdapObject]/2483 into static std::allocator_traits<std::allocator<_Tp1> >::size_type std::allocator_traits<std::allocator<_Tp1> >::max_size(const allocator_type&) [with _Tp = LdapObject]/2365.
/usr/include/c++/11/bits/stl_vector.h:1784:19: note: Considering inline candidate constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = long unsigned int]/148.
/usr/include/c++/11/bits/stl_vector.h:1784:19: optimized:  Inlining constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = long unsigned int]/148 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2235.
/usr/include/c++/11/bits/stl_vector.h:1783:51: note: Considering inline candidate static std::allocator_traits<std::allocator<_Tp1> >::size_type std::allocator_traits<std::allocator<_Tp1> >::max_size(const allocator_type&) [with _Tp = LdapObject]/2365.
/usr/include/c++/11/bits/stl_vector.h:1783:51: optimized:  Inlining static std::allocator_traits<std::allocator<_Tp1> >::size_type std::allocator_traits<std::allocator<_Tp1> >::max_size(const allocator_type&) [with _Tp = LdapObject]/2365 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2235.
/usr/include/c++/11/bits/stl_vector.h:1769:24: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = LdapObject]/1876.
/usr/include/c++/11/bits/stl_vector.h:1769:24: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = LdapObject]/1876 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2081.
/usr/include/c++/11/bits/stl_vector.h:1769:23: note: Considering inline candidate static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2235.
/usr/include/c++/11/bits/stl_vector.h:1769:23: optimized:  Inlining static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2235 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2081.
/usr/include/c++/11/bits/stl_vector.h:1769:24: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = LdapObject]/2111.
/usr/include/c++/11/bits/stl_vector.h:1769:24: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = LdapObject]/2111 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2081.
/usr/include/c++/11/bits/stl_uninitialized.h:97:21: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*]/2183.
/usr/include/c++/11/bits/stl_uninitialized.h:97:21: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*]/2183 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2492.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: note: Considering inline candidate void std::_Construct(_Tp*, _Args&& ...) [with _Tp = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]/2435.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: optimized:  Inlining void std::_Construct(_Tp*, _Args&& ...) [with _Tp = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]/2435 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2492.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__cxx11::basic_string<char>]/2332.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__cxx11::basic_string<char>]/2332 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2492.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: note: Considering inline candidate static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2492.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: missed:   will not early inline: _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*]/2390->static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2492, call is cold and code would grow at least by 27
/usr/include/c++/11/bits/stl_uninitialized.h:333:37: note: Considering inline candidate _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*]/2390.
/usr/include/c++/11/bits/stl_uninitialized.h:333:37: optimized:  Inlining _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*]/2390 into _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/2272.
/usr/include/c++/11/utility:234:43: note: Considering inline candidate static constexpr const _Tp1& std::__pair_get<0>::__const_get(const std::pair<_T1, _T2>&) [with _Tp1 = const std::__cxx11::basic_string<char>; _Tp2 = std::vector<std::__cxx11::basic_string<char> >]/2508.
/usr/include/c++/11/utility:234:43: optimized:  Inlining static constexpr const _Tp1& std::__pair_get<0>::__const_get(const std::pair<_T1, _T2>&) [with _Tp1 = const std::__cxx11::basic_string<char>; _Tp2 = std::vector<std::__cxx11::basic_string<char> >]/2508 into constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&) [with long unsigned int _Int = 0; _Tp1 = const std::__cxx11::basic_string<char>; _Tp2 = std::vector<std::__cxx11::basic_string<char> >]/2509.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: note: Considering inline candidate constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&) [with long unsigned int _Int = 0; _Tp1 = const std::__cxx11::basic_string<char>; _Tp2 = std::vector<std::__cxx11::basic_string<char> >]/2509.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: optimized:  Inlining constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&) [with long unsigned int _Int = 0; _Tp1 = const std::__cxx11::basic_string<char>; _Tp2 = std::vector<std::__cxx11::basic_string<char> >]/2509 into decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2510.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2221.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2221 into decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2510.
/usr/include/c++/11/bits/stl_function.h:370:20: note: Considering inline candidate typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]/1813.
/usr/include/c++/11/bits/stl_function.h:370:20: missed:   will not early inline: constexpr bool std::equal_to<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = std::__cxx11::basic_string<char>]/2511->typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]/1813, growth 9 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__cxx11::basic_string<char>]/2512.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__cxx11::basic_string<char>]/2512 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__cxx11::basic_string<char>]/2513.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__cxx11::basic_string<char>]/2513.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__cxx11::basic_string<char>]/2430->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__cxx11::basic_string<char>]/2513, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_vector.h:346:33: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__cxx11::basic_string<char>]/2430.
/usr/include/c++/11/bits/stl_vector.h:346:33: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__cxx11::basic_string<char>]/2430 into std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2330.
/usr/include/c++/11/bits/stl_vector.h:1520:21: note: Considering inline candidate void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2029.
/usr/include/c++/11/bits/stl_vector.h:1520:21: optimized:  Inlining void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2029 into std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_M_allocate_and_copy(std::vector<_Tp, _Alloc>::size_type, _ForwardIterator, _ForwardIterator) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2268.
/usr/include/c++/11/bits/stl_vector.h:1514:35: note: Considering inline candidate _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/2272.
/usr/include/c++/11/bits/stl_vector.h:1514:35: optimized:  Inlining _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/2272 into std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_M_allocate_and_copy(std::vector<_Tp, _Alloc>::size_type, _ForwardIterator, _ForwardIterator) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2268.
/usr/include/c++/11/bits/stl_vector.h:1515:27: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2014.
/usr/include/c++/11/bits/stl_vector.h:1515:27: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2014 into std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_M_allocate_and_copy(std::vector<_Tp, _Alloc>::size_type, _ForwardIterator, _ForwardIterator) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2268.
/usr/include/c++/11/bits/stl_vector.h:1511:40: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2330.
/usr/include/c++/11/bits/stl_vector.h:1511:40: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2330 into std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_M_allocate_and_copy(std::vector<_Tp, _Alloc>::size_type, _ForwardIterator, _ForwardIterator) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2268.
/usr/include/c++/11/bits/stl_vector.h:361:44: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2330.
/usr/include/c++/11/bits/stl_vector.h:361:44: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2330 into void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2177.
/usr/include/c++/11/bits/stl_vector.h:305:33: note: Considering inline candidate std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl::~_Vector_impl()/527.
/usr/include/c++/11/bits/stl_vector.h:305:33: optimized:  Inlining std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl::~_Vector_impl()/527 into std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2010.
/usr/include/c++/11/bits/stl_vector.h:305:26: note: Considering inline candidate void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2177.
/usr/include/c++/11/bits/stl_vector.h:305:26: missed:   will not early inline: std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2010->void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2177, growth 8 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_vector.h:304:9: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2175.
/usr/include/c++/11/bits/stl_vector.h:304:9: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2175 into std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2010.
/usr/include/c++/11/bits/stl_iterator.h:1182:40: note: Considering inline candidate const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2514.
/usr/include/c++/11/bits/stl_iterator.h:1182:40: optimized:  Inlining const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2514 into bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2431.
/usr/include/c++/11/bits/stl_iterator.h:1182:24: note: Considering inline candidate const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2514.
/usr/include/c++/11/bits/stl_iterator.h:1182:24: optimized:  Inlining const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2514 into bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2431.
/usr/include/c++/11/bits/stl_uninitialized.h:97:21: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*]/2183.
/usr/include/c++/11/bits/stl_uninitialized.h:97:21: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*]/2183 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2331.
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: Considering inline candidate bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2431.
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: optimized:  Inlining bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2431 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2331.
/usr/include/c++/11/bits/stl_uninitialized.h:91:34: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2432.
/usr/include/c++/11/bits/stl_uninitialized.h:91:34: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2432 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2331.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: note: Considering inline candidate void std::_Construct(_Tp*, _Args&& ...) [with _Tp = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]/2435.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: optimized:  Inlining void std::_Construct(_Tp*, _Args&& ...) [with _Tp = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]/2435 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2331.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__cxx11::basic_string<char>]/2332.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__cxx11::basic_string<char>]/2332 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2331.
/usr/include/c++/11/bits/stl_uninitialized.h:92:45: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2433.
/usr/include/c++/11/bits/stl_uninitialized.h:92:45: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/2433 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2331.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: note: Considering inline candidate static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2331.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: missed:   will not early inline: _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*]/2182->static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2331, call is cold and code would grow at least by 27
/usr/include/c++/11/bits/stl_uninitialized.h:333:37: note: Considering inline candidate _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*]/2182.
/usr/include/c++/11/bits/stl_uninitialized.h:333:37: optimized:  Inlining _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*]/2182 into _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/2015.
/usr/include/c++/11/bits/stl_vector.h:561:7: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1821.
/usr/include/c++/11/bits/stl_vector.h:561:7: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1821 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1805.
/usr/include/c++/11/bits/stl_vector.h:555:61: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/1818.
/usr/include/c++/11/bits/stl_vector.h:555:61: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/1818 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1805.
/usr/include/c++/11/bits/stl_vector.h:558:31: note: Considering inline candidate _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/2015.
/usr/include/c++/11/bits/stl_vector.h:558:31: optimized:  Inlining _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/2015 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1805.
/usr/include/c++/11/bits/stl_vector.h:558:31: note: Considering inline candidate std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2012.
/usr/include/c++/11/bits/stl_vector.h:558:31: optimized:  Inlining std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2012 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1805.
/usr/include/c++/11/bits/stl_vector.h:558:31: note: Considering inline candidate std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2013.
/usr/include/c++/11/bits/stl_vector.h:558:31: optimized:  Inlining std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2013 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1805.
/usr/include/c++/11/bits/stl_vector.h:560:30: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2014.
/usr/include/c++/11/bits/stl_vector.h:560:30: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2014 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1805.
/usr/include/c++/11/bits/stl_vector.h:555:61: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/1818.
/usr/include/c++/11/bits/stl_vector.h:555:61: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/1818 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1805.
/usr/include/c++/11/bits/stl_vector.h:555:61: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2010.
/usr/include/c++/11/bits/stl_vector.h:555:61: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2010 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1805.
/usr/include/c++/11/bits/stl_vector.h:555:61: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1931.
/usr/include/c++/11/bits/stl_vector.h:555:61: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1931 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1805.
/usr/include/c++/11/bits/stl_vector.h:555:61: note: Considering inline candidate static constexpr _Alloc __gnu_cxx::__alloc_traits<_Alloc, <template-parameter-1-2> >::_S_select_on_copy(const _Alloc&) [with _Alloc = std::allocator<std::__cxx11::basic_string<char> >; <template-parameter-1-2> = std::__cxx11::basic_string<char>]/2007.
/usr/include/c++/11/bits/stl_vector.h:555:61: optimized:  Inlining static constexpr _Alloc __gnu_cxx::__alloc_traits<_Alloc, <template-parameter-1-2> >::_S_select_on_copy(const _Alloc&) [with _Alloc = std::allocator<std::__cxx11::basic_string<char> >; <template-parameter-1-2> = std::__cxx11::basic_string<char>]/2007 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1805.
/usr/include/c++/11/bits/stl_vector.h:555:58: note: Considering inline candidate const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2008.
/usr/include/c++/11/bits/stl_vector.h:555:58: optimized:  Inlining const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2008 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1805.
/usr/include/c++/11/bits/stl_iterator.h:1182:40: note: Considering inline candidate const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2443.
/usr/include/c++/11/bits/stl_iterator.h:1182:40: optimized:  Inlining const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2443 into bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2515.
/usr/include/c++/11/bits/stl_iterator.h:1182:24: note: Considering inline candidate const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2443.
/usr/include/c++/11/bits/stl_iterator.h:1182:24: optimized:  Inlining const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2443 into bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2515.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2525.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2525 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2466.
/usr/include/c++/11/bits/hashtable_policy.h:1905:38: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2466.
/usr/include/c++/11/bits/hashtable_policy.h:1905:38: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2466 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2354.
/usr/include/c++/11/bits/hashtable_policy.h:1905:56: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056.
/usr/include/c++/11/bits/hashtable_policy.h:1905:56: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2354.
/usr/include/c++/11/bits/hashtable_policy.h:1903:57: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2465.
/usr/include/c++/11/bits/hashtable_policy.h:1903:57: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2465 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2354.
/usr/include/c++/11/bits/hashtable_policy.h:1895:29: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2354.
/usr/include/c++/11/bits/hashtable_policy.h:1895:29: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2354 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2216.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2353.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2353 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2216.
/usr/include/c++/11/bits/hashtable_policy.h:1894:53: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056.
/usr/include/c++/11/bits/hashtable_policy.h:1894:53: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2216.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2006.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2006 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2216.
/usr/include/c++/11/bits/hashtable.h:308:57: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2216.
/usr/include/c++/11/bits/hashtable.h:308:57: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2216 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2262.
/usr/include/c++/11/bits/hashtable_policy.h:1916:22: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2216.
/usr/include/c++/11/bits/hashtable_policy.h:1916:22: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2216 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2060.
/usr/include/c++/11/bits/hashtable_policy.h:1915:22: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184.
/usr/include/c++/11/bits/hashtable_policy.h:1915:22: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2060.
/usr/include/c++/11/bits/hashtable.h:2320:32: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2060.
/usr/include/c++/11/bits/hashtable.h:2320:32: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2092->void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2060, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable.h:2320:32: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2059.
/usr/include/c++/11/bits/hashtable.h:2320:32: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2059 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2092.
/usr/include/c++/11/bits/hashtable_policy.h:119:33: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2060.
/usr/include/c++/11/bits/hashtable_policy.h:119:33: missed:   will not early inline: std::__detail::_ReuseOrAllocNode<_NodeAlloc>::~_ReuseOrAllocNode() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2230->void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2060, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/allocator.h:169:53: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/2527.
/usr/include/c++/11/bits/allocator.h:169:53: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/2527 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>; _Tp = std::__detail::_Hash_node_base*]/2471.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/2530.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/2530 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/2474.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node_base*]/2532.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node_base*]/2532 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/2476.
/usr/include/c++/11/bits/hashtable_policy.h:1943:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/2474.
/usr/include/c++/11/bits/hashtable_policy.h:1943:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/2474 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2356.
/usr/include/c++/11/bits/hashtable_policy.h:1942:41: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/2476.
/usr/include/c++/11/bits/hashtable_policy.h:1942:41: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/2476 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2356.
/usr/include/c++/11/bits/hashtable_policy.h:1941:28: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>; _Tp = std::__detail::_Hash_node_base*]/2471.
/usr/include/c++/11/bits/hashtable_policy.h:1941:28: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>; _Tp = std::__detail::_Hash_node_base*]/2471 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2356.
/usr/include/c++/11/bits/hashtable_policy.h:1941:53: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056.
/usr/include/c++/11/bits/hashtable_policy.h:1941:53: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2356.
/usr/include/c++/11/bits/hashtable_policy.h:1940:57: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/2469.
/usr/include/c++/11/bits/hashtable_policy.h:1940:57: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/2469 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2356.
/usr/include/c++/11/bits/hashtable.h:449:42: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2356.
/usr/include/c++/11/bits/hashtable.h:449:42: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2356 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2217.
/usr/include/c++/11/bits/hashtable.h:446:27: note: Considering inline candidate bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_uses_single_bucket(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2355.
/usr/include/c++/11/bits/hashtable.h:446:27: optimized:  Inlining bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_uses_single_bucket(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2355 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2217.
/usr/include/c++/11/bits/hashtable.h:454:30: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2217.
/usr/include/c++/11/bits/hashtable.h:454:30: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2217 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2061.
/usr/include/c++/11/bits/hashtable.h:1380:20: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_reset() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2067.
/usr/include/c++/11/bits/hashtable.h:1380:20: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_reset() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2067 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_move_assign(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&&, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2109.
/usr/include/c++/11/bits/hashtable.h:1379:23: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2276.
/usr/include/c++/11/bits/hashtable.h:1379:23: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2276 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_move_assign(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&&, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2109.
/usr/include/c++/11/bits/hashtable.h:1376:27: note: Considering inline candidate constexpr void std::__alloc_on_move(_Alloc&, _Alloc&) [with _Alloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2275.
/usr/include/c++/11/bits/hashtable.h:1376:27: optimized:  Inlining constexpr void std::__alloc_on_move(_Alloc&, _Alloc&) [with _Alloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2275 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_move_assign(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&&, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2109.
/usr/include/c++/11/bits/hashtable.h:1376:51: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056.
/usr/include/c++/11/bits/hashtable.h:1376:51: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_move_assign(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&&, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2109.
/usr/include/c++/11/bits/hashtable.h:1376:77: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056.
/usr/include/c++/11/bits/hashtable.h:1376:77: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_move_assign(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&&, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2109.
/usr/include/c++/11/bits/hashtable.h:1365:38: note: Considering inline candidate bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_uses_single_bucket() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2273.
/usr/include/c++/11/bits/hashtable.h:1365:38: optimized:  Inlining bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_uses_single_bucket() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2273 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_move_assign(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&&, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2109.
/usr/include/c++/11/bits/hashtable.h:1363:44: note: Considering inline candidate constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&]/1908.
/usr/include/c++/11/bits/hashtable.h:1363:44: optimized:  Inlining constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&]/1908 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_move_assign(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&&, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2109.
/usr/include/c++/11/bits/hashtable.h:1362:28: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2061.
/usr/include/c++/11/bits/hashtable.h:1362:28: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2061 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_move_assign(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&&, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2109.
/usr/include/c++/11/bits/hashtable.h:1361:32: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2060.
/usr/include/c++/11/bits/hashtable.h:1361:32: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_move_assign(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&&, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2109->void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2060, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable.h:1361:32: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2059.
/usr/include/c++/11/bits/hashtable.h:1361:32: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2059 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_move_assign(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&&, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2109.
/usr/include/c++/11/bits/hashtable.h:1358:44: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >]/2108.
/usr/include/c++/11/bits/hashtable.h:1358:44: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >]/2108 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_move_assign(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&&, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2109.
/usr/include/c++/11/bits/hashtable.h:590:16: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_move_assign(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&&, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2109.
/usr/include/c++/11/bits/hashtable.h:590:16: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>& std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::operator=(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1909->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_move_assign(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&&, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2109, call is cold and code would grow at least by 25
/usr/include/c++/11/bits/hashtable.h:590:26: note: Considering inline candidate constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&]/1908.
/usr/include/c++/11/bits/hashtable.h:590:26: optimized:  Inlining constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&]/1908 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>& std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::operator=(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1909.
/usr/include/c++/11/bits/unordered_map.h:276:7: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>& std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::operator=(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1909.
/usr/include/c++/11/bits/unordered_map.h:276:7: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>& std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::operator=(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1909 into std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator=(std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&&) [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/1508.
ldap.hpp:8:7: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator=(std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&&) [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/1508.
ldap.hpp:8:7: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator=(std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&&) [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/1508 into LdapObject& LdapObject::operator=(LdapObject&&)/1509.
/usr/include/c++/11/bits/hashtable.h:1534:5: note: Considering inline candidate std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >::~_Hashtable_alloc()/1488.
/usr/include/c++/11/bits/hashtable.h:1534:5: optimized:  Inlining std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >::~_Hashtable_alloc()/1488 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1897.
/usr/include/c++/11/bits/hashtable.h:1533:28: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2061.
/usr/include/c++/11/bits/hashtable.h:1533:28: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2061 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1897.
/usr/include/c++/11/bits/hashtable.h:1532:12: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2092.
/usr/include/c++/11/bits/hashtable.h:1532:12: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1897->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2092, growth 9 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/unordered_map.h:102:11: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1897.
/usr/include/c++/11/bits/unordered_map.h:102:11: missed:   will not early inline: std::unordered_map<std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~unordered_map()/1497->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1897, growth 7 exceeds --param early-inlining-insns divided by number of calls
ldap.hpp:8:7: note: Considering inline candidate std::unordered_map<std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~unordered_map()/1497.
ldap.hpp:8:7: optimized:  Inlining std::unordered_map<std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~unordered_map()/1497 into LdapObject::~LdapObject()/1503.
/usr/include/c++/11/bits/stl_construct.h:151:22: note: Considering inline candidate LdapObject::~LdapObject()/1503.
/usr/include/c++/11/bits/stl_construct.h:151:22: optimized:  Inlining LdapObject::~LdapObject()/1503 into constexpr void std::_Destroy(_Tp*) [with _Tp = LdapObject]/2442.
/usr/include/c++/11/bits/stl_construct.h:163:19: note: Considering inline candidate constexpr void std::_Destroy(_Tp*) [with _Tp = LdapObject]/2442.
/usr/include/c++/11/bits/stl_construct.h:163:19: optimized:  Inlining constexpr void std::_Destroy(_Tp*) [with _Tp = LdapObject]/2442 into static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = LdapObject*; bool <anonymous> = false]/2343.
/usr/include/c++/11/bits/stl_construct.h:163:19: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = LdapObject]/2342.
/usr/include/c++/11/bits/stl_construct.h:163:19: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = LdapObject]/2342 into static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = LdapObject*; bool <anonymous> = false]/2343.
/usr/include/c++/11/bits/stl_construct.h:196:11: note: Considering inline candidate static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = LdapObject*; bool <anonymous> = false]/2343.
/usr/include/c++/11/bits/stl_construct.h:196:11: optimized:  Inlining static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = LdapObject*; bool <anonymous> = false]/2343 into void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = LdapObject*]/2200.
/usr/include/c++/11/bits/alloc_traits.h:848:15: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = LdapObject*]/2200.
/usr/include/c++/11/bits/alloc_traits.h:848:15: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = LdapObject*]/2200 into void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = LdapObject*; _Tp = LdapObject]/2049.
/usr/include/c++/11/bits/stl_vector.h:683:7: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1915.
/usr/include/c++/11/bits/stl_vector.h:683:7: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1915 into std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1882.
/usr/include/c++/11/bits/stl_vector.h:680:15: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = LdapObject*; _Tp = LdapObject]/2049.
/usr/include/c++/11/bits/stl_vector.h:680:15: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = LdapObject*; _Tp = LdapObject]/2049 into std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1882.
/usr/include/c++/11/bits/stl_vector.h:681:28: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2039.
/usr/include/c++/11/bits/stl_vector.h:681:28: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2039 into std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1882.
/usr/include/c++/11/bits/stl_construct.h:162:19: note: Considering inline candidate bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2447.
/usr/include/c++/11/bits/stl_construct.h:162:19: optimized:  Inlining bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2447 into static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >; bool <anonymous> = false]/2348.
/usr/include/c++/11/bits/stl_construct.h:162:30: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2448.
/usr/include/c++/11/bits/stl_construct.h:162:30: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2448 into static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >; bool <anonymous> = false]/2348.
/usr/include/c++/11/bits/stl_construct.h:163:19: note: Considering inline candidate constexpr void std::_Destroy(_Tp*) [with _Tp = LdapObject]/2442.
/usr/include/c++/11/bits/stl_construct.h:163:19: optimized:  Inlining constexpr void std::_Destroy(_Tp*) [with _Tp = LdapObject]/2442 into static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >; bool <anonymous> = false]/2348.
/usr/include/c++/11/bits/stl_construct.h:163:19: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = LdapObject]/2342.
/usr/include/c++/11/bits/stl_construct.h:163:19: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = LdapObject]/2342 into static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >; bool <anonymous> = false]/2348.
/usr/include/c++/11/bits/stl_construct.h:163:37: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2449.
/usr/include/c++/11/bits/stl_construct.h:163:37: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2449 into static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >; bool <anonymous> = false]/2348.
/usr/include/c++/11/bits/stl_construct.h:196:11: note: Considering inline candidate static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >; bool <anonymous> = false]/2348.
/usr/include/c++/11/bits/stl_construct.h:196:11: optimized:  Inlining static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >; bool <anonymous> = false]/2348 into void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >]/2208.
/usr/include/c++/11/bits/alloc_traits.h:848:15: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >]/2208.
/usr/include/c++/11/bits/alloc_traits.h:848:15: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >]/2208 into void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >; _Tp = LdapObject]/2053.
ldap.hpp:35:7: note: Considering inline candidate std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1882.
ldap.hpp:35:7: missed:   will not early inline: LdapOperation::~LdapOperation()/1532->std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1882, growth 11 exceeds --param early-inlining-insns divided by number of calls
ldap.hpp:35:7: note: Considering inline candidate LdapObject::~LdapObject()/1503.
ldap.hpp:35:7: optimized:  Inlining LdapObject::~LdapObject()/1503 into LdapOperation::~LdapOperation()/1532.
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node_base*]/2533.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node_base*]/2533 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/2534.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/2534.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/2477->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/2534, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/2474.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/2474 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2357.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/2474.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/2474 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2357.
/usr/include/c++/11/bits/hashtable_policy.h:1928:44: note: Considering inline candidate constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node_base*]/2478.
/usr/include/c++/11/bits/hashtable_policy.h:1928:44: optimized:  Inlining constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node_base*]/2478 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2357.
/usr/include/c++/11/bits/hashtable_policy.h:1927:52: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/2477.
/usr/include/c++/11/bits/hashtable_policy.h:1927:52: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/2477 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2357.
/usr/include/c++/11/bits/hashtable_policy.h:1925:28: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>; _Tp = std::__detail::_Hash_node_base*]/2471.
/usr/include/c++/11/bits/hashtable_policy.h:1925:28: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>; _Tp = std::__detail::_Hash_node_base*]/2471 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2357.
/usr/include/c++/11/bits/hashtable_policy.h:1925:53: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056.
/usr/include/c++/11/bits/hashtable_policy.h:1925:53: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2357.
/usr/include/c++/11/bits/hashtable.h:440:47: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2357.
/usr/include/c++/11/bits/hashtable.h:440:47: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2218->std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2357, growth 6 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable.h:2409:28: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2061.
/usr/include/c++/11/bits/hashtable.h:2409:28: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2061 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2486.
/usr/include/c++/11/bits/hashtable.h:2390:41: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, true>&, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2362.
/usr/include/c++/11/bits/hashtable.h:2390:41: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, true>&, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2362 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2486.
/usr/include/c++/11/bits/hashtable.h:2388:36: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184.
/usr/include/c++/11/bits/hashtable.h:2388:36: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2486.
/usr/include/c++/11/bits/hashtable.h:2383:32: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2059.
/usr/include/c++/11/bits/hashtable.h:2383:32: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2059 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2486.
/usr/include/c++/11/bits/hashtable.h:2382:56: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2218.
/usr/include/c++/11/bits/hashtable.h:2382:56: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2218 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2486.
/usr/include/c++/11/bits/hashtable.h:2367:29: note: Considering inline candidate void std::__detail::_Prime_rehash_policy::_M_reset(std::__detail::_Prime_rehash_policy::_State)/141.
/usr/include/c++/11/bits/hashtable.h:2367:29: optimized:  Inlining void std::__detail::_Prime_rehash_policy::_M_reset(std::__detail::_Prime_rehash_policy::_State)/141 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2378.
/usr/include/c++/11/bits/hashtable.h:2361:17: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2486.
/usr/include/c++/11/bits/hashtable.h:2361:17: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2378->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2486, call is cold and code would grow at least by 33
/usr/include/c++/11/bits/hashtable.h:2030:14: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/2382.
/usr/include/c++/11/bits/hashtable.h:2030:14: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/2382 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2264.
/usr/include/c++/11/bits/hashtable.h:2028:29: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2380.
/usr/include/c++/11/bits/hashtable.h:2028:29: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2264->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2380, growth 16 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/hashtable.h:2025:26: note: Considering inline candidate void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_store_code(std::__detail::_Hash_node_code_cache<true>&, std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2379.
/usr/include/c++/11/bits/hashtable.h:2025:26: optimized:  Inlining void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_store_code(std::__detail::_Hash_node_code_cache<true>&, std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2379 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2264.
/usr/include/c++/11/bits/hashtable.h:2022:27: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2167.
/usr/include/c++/11/bits/hashtable.h:2022:27: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2167 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2264.
/usr/include/c++/11/bits/hashtable.h:2021:13: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2378.
/usr/include/c++/11/bits/hashtable.h:2021:13: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2264->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2378, call is cold and code would grow at least by 17
/usr/include/c++/11/bits/hashtable.h:2014:70: note: Considering inline candidate std::__detail::_Prime_rehash_policy::_State std::__detail::_Prime_rehash_policy::_M_state() const/139.
/usr/include/c++/11/bits/hashtable.h:2014:70: optimized:  Inlining std::__detail::_Prime_rehash_policy::_State std::__detail::_Prime_rehash_policy::_M_state() const/139 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2264.
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2535.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2535 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2536.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2536.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2479->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2536, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_pair.h:314:17: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
/usr/include/c++/11/bits/stl_pair.h:314:17: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/2538.
/usr/include/c++/11/bits/stl_pair.h:314:17: note: Considering inline candidate std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1805.
/usr/include/c++/11/bits/stl_pair.h:314:17: missed:   will not early inline: std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/2538->std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1805, call is cold and code would grow at least by 20
/usr/include/c++/11/bits/stl_pair.h:314:17: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1824.
/usr/include/c++/11/bits/stl_pair.h:314:17: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1824 into std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/2538.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate void operator delete(void*, void*)/76.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining void operator delete(void*, void*)/76 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2540.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/2538.
/usr/include/c++/11/ext/new_allocator.h:162:4: missed:   will not early inline: void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2540->std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/2538, call is cold and code would grow at least by 17
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate void* operator new(std::size_t, void*)/74.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining void* operator new(std::size_t, void*)/74 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2540.
/usr/include/c++/11/ext/new_allocator.h:162:46: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2221.
/usr/include/c++/11/ext/new_allocator.h:162:46: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2221 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2540.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2540.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2540 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2481.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2221.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2221 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2481.
/usr/include/c++/11/bits/hashtable_policy.h:1885:37: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2466.
/usr/include/c++/11/bits/hashtable_policy.h:1885:37: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2466 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2361.
/usr/include/c++/11/bits/hashtable_policy.h:1885:55: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056.
/usr/include/c++/11/bits/hashtable_policy.h:1885:55: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2361.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2481.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2481 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2361.
/usr/include/c++/11/bits/hashtable_policy.h:1878:54: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056.
/usr/include/c++/11/bits/hashtable_policy.h:1878:54: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2361.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2006.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2006 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2361.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2221.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2221 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2361.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: note: Considering inline candidate std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>::_Hash_node()/2359.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: optimized:  Inlining std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>::_Hash_node()/2359 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2361.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: note: Considering inline candidate void* operator new(std::size_t, void*)/74.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: optimized:  Inlining void* operator new(std::size_t, void*)/74 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2361.
/usr/include/c++/11/bits/hashtable_policy.h:1874:36: note: Considering inline candidate constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2480.
/usr/include/c++/11/bits/hashtable_policy.h:1874:36: optimized:  Inlining constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2480 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2361.
/usr/include/c++/11/bits/hashtable_policy.h:1873:45: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2479.
/usr/include/c++/11/bits/hashtable_policy.h:1873:45: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2479 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2361.
/usr/include/c++/11/bits/hashtable_policy.h:1873:63: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056.
/usr/include/c++/11/bits/hashtable_policy.h:1873:63: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2361.
/usr/include/c++/11/bits/hashtable_policy.h:168:32: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2361.
/usr/include/c++/11/bits/hashtable_policy.h:168:32: missed:   will not early inline: std::__detail::_AllocNode<_NodeAlloc>::__node_type* std::__detail::_AllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2222->std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2361, call is cold and code would grow at least by 24
/usr/include/c++/11/bits/hashtable_policy.h:168:32: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2221.
/usr/include/c++/11/bits/hashtable_policy.h:168:32: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2221 into std::__detail::_AllocNode<_NodeAlloc>::__node_type* std::__detail::_AllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2222.
/usr/include/c++/11/bits/hashtable.h:1327:29: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2061.
/usr/include/c++/11/bits/hashtable.h:1327:29: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2061 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2066.
/usr/include/c++/11/bits/hashtable.h:1325:11: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2092.
/usr/include/c++/11/bits/hashtable.h:1325:11: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2066->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2092, growth 9 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable.h:1312:71: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184.
/usr/include/c++/11/bits/hashtable.h:1312:71: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2066.
/usr/include/c++/11/bits/hashtable.h:1317:36: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2225.
/usr/include/c++/11/bits/hashtable.h:1317:36: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2225 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2066.
/usr/include/c++/11/bits/hashtable.h:1316:21: note: Considering inline candidate void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_copy_code(std::__detail::_Hash_node_code_cache<true>&, const std::__detail::_Hash_node_code_cache<true>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2223.
/usr/include/c++/11/bits/hashtable.h:1316:21: optimized:  Inlining void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_copy_code(std::__detail::_Hash_node_code_cache<true>&, const std::__detail::_Hash_node_code_cache<true>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2223 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2066.
/usr/include/c++/11/bits/hashtable.h:1314:24: note: Considering inline candidate std::__detail::_AllocNode<_NodeAlloc>::__node_type* std::__detail::_AllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2222.
/usr/include/c++/11/bits/hashtable.h:1314:24: optimized:  Inlining std::__detail::_AllocNode<_NodeAlloc>::__node_type* std::__detail::_AllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2222 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2066.
/usr/include/c++/11/bits/hashtable.h:1314:45: note: Considering inline candidate static constexpr typename std::conditional<std::is_lvalue_reference<_Ht>::value, const _Value&, _Value&&>::type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__fwd_value_for(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::value_type&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2220.
/usr/include/c++/11/bits/hashtable.h:1314:45: optimized:  Inlining static constexpr typename std::conditional<std::is_lvalue_reference<_Ht>::value, const _Value&, _Value&&>::type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__fwd_value_for(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::value_type&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2220 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2066.
/usr/include/c++/11/bits/hashtable.h:1314:58: note: Considering inline candidate _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2019.
/usr/include/c++/11/bits/hashtable.h:1314:58: optimized:  Inlining _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2019 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2066.
/usr/include/c++/11/bits/hashtable.h:1312:35: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184.
/usr/include/c++/11/bits/hashtable.h:1312:35: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2066.
/usr/include/c++/11/bits/hashtable.h:1308:22: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2224.
/usr/include/c++/11/bits/hashtable.h:1308:22: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2224 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2066.
/usr/include/c++/11/bits/hashtable.h:1307:24: note: Considering inline candidate void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_copy_code(std::__detail::_Hash_node_code_cache<true>&, const std::__detail::_Hash_node_code_cache<true>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2223.
/usr/include/c++/11/bits/hashtable.h:1307:24: optimized:  Inlining void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_copy_code(std::__detail::_Hash_node_code_cache<true>&, const std::__detail::_Hash_node_code_cache<true>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2223 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2066.
/usr/include/c++/11/bits/hashtable.h:1306:20: note: Considering inline candidate std::__detail::_AllocNode<_NodeAlloc>::__node_type* std::__detail::_AllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2222.
/usr/include/c++/11/bits/hashtable.h:1306:20: optimized:  Inlining std::__detail::_AllocNode<_NodeAlloc>::__node_type* std::__detail::_AllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2222 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2066.
/usr/include/c++/11/bits/hashtable.h:1306:41: note: Considering inline candidate static constexpr typename std::conditional<std::is_lvalue_reference<_Ht>::value, const _Value&, _Value&&>::type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__fwd_value_for(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::value_type&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2220.
/usr/include/c++/11/bits/hashtable.h:1306:41: optimized:  Inlining static constexpr typename std::conditional<std::is_lvalue_reference<_Ht>::value, const _Value&, _Value&&>::type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__fwd_value_for(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::value_type&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2220 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2066.
/usr/include/c++/11/bits/hashtable.h:1306:54: note: Considering inline candidate _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2019.
/usr/include/c++/11/bits/hashtable.h:1306:54: optimized:  Inlining _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2019 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2066.
/usr/include/c++/11/bits/hashtable.h:1304:39: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2059.
/usr/include/c++/11/bits/hashtable.h:1304:39: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2059 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2066.
/usr/include/c++/11/bits/hashtable.h:1295:48: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2218.
/usr/include/c++/11/bits/hashtable.h:1295:48: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2218 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2066.
/usr/include/c++/11/bits/hashtable_policy.h:139:32: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2354.
/usr/include/c++/11/bits/hashtable_policy.h:139:32: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2354 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363.
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2361.
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed:   will not early inline: std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363->std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2361, call is cold and code would grow at least by 24
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2221.
/usr/include/c++/11/bits/hashtable_policy.h:144:32: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2221 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363.
/usr/include/c++/11/bits/hashtable_policy.h:134:35: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2481.
/usr/include/c++/11/bits/hashtable_policy.h:134:35: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2481 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363.
/usr/include/c++/11/bits/hashtable_policy.h:134:35: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2006.
/usr/include/c++/11/bits/hashtable_policy.h:134:35: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2006 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363.
/usr/include/c++/11/bits/hashtable_policy.h:134:35: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2221.
/usr/include/c++/11/bits/hashtable_policy.h:134:35: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2221 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363.
/usr/include/c++/11/bits/hashtable_policy.h:131:36: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2353.
/usr/include/c++/11/bits/hashtable_policy.h:131:36: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2353 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363.
/usr/include/c++/11/bits/hashtable_policy.h:131:36: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2006.
/usr/include/c++/11/bits/hashtable_policy.h:131:36: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2006 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363.
/usr/include/c++/11/bits/hashtable_policy.h:130:42: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056.
/usr/include/c++/11/bits/hashtable_policy.h:130:42: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363.
/usr/include/c++/11/bits/hashtable_policy.h:128:36: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184.
/usr/include/c++/11/bits/hashtable_policy.h:128:36: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363.
/usr/include/c++/11/bits/hashtable.h:1327:29: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2061.
/usr/include/c++/11/bits/hashtable.h:1327:29: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2061 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232.
/usr/include/c++/11/bits/hashtable.h:1325:11: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2092.
/usr/include/c++/11/bits/hashtable.h:1325:11: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2092, growth 9 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable.h:1312:71: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184.
/usr/include/c++/11/bits/hashtable.h:1312:71: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232.
/usr/include/c++/11/bits/hashtable.h:1317:36: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2225.
/usr/include/c++/11/bits/hashtable.h:1317:36: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2225 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232.
/usr/include/c++/11/bits/hashtable.h:1316:21: note: Considering inline candidate void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_copy_code(std::__detail::_Hash_node_code_cache<true>&, const std::__detail::_Hash_node_code_cache<true>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2223.
/usr/include/c++/11/bits/hashtable.h:1316:21: optimized:  Inlining void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_copy_code(std::__detail::_Hash_node_code_cache<true>&, const std::__detail::_Hash_node_code_cache<true>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2223 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232.
/usr/include/c++/11/bits/hashtable.h:1314:24: note: Considering inline candidate std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363.
/usr/include/c++/11/bits/hashtable.h:1314:24: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232->std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363, growth 30 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/hashtable.h:1314:45: note: Considering inline candidate static constexpr typename std::conditional<std::is_lvalue_reference<_Ht>::value, const _Value&, _Value&&>::type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__fwd_value_for(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::value_type&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2220.
/usr/include/c++/11/bits/hashtable.h:1314:45: optimized:  Inlining static constexpr typename std::conditional<std::is_lvalue_reference<_Ht>::value, const _Value&, _Value&&>::type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__fwd_value_for(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::value_type&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2220 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232.
/usr/include/c++/11/bits/hashtable.h:1314:58: note: Considering inline candidate _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2019.
/usr/include/c++/11/bits/hashtable.h:1314:58: optimized:  Inlining _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2019 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232.
/usr/include/c++/11/bits/hashtable.h:1312:35: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184.
/usr/include/c++/11/bits/hashtable.h:1312:35: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232.
/usr/include/c++/11/bits/hashtable.h:1308:22: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2224.
/usr/include/c++/11/bits/hashtable.h:1308:22: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2224 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232.
/usr/include/c++/11/bits/hashtable.h:1307:24: note: Considering inline candidate void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_copy_code(std::__detail::_Hash_node_code_cache<true>&, const std::__detail::_Hash_node_code_cache<true>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2223.
/usr/include/c++/11/bits/hashtable.h:1307:24: optimized:  Inlining void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_copy_code(std::__detail::_Hash_node_code_cache<true>&, const std::__detail::_Hash_node_code_cache<true>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2223 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232.
/usr/include/c++/11/bits/hashtable.h:1306:20: note: Considering inline candidate std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363.
/usr/include/c++/11/bits/hashtable.h:1306:20: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232->std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363, growth 30 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/hashtable.h:1306:41: note: Considering inline candidate static constexpr typename std::conditional<std::is_lvalue_reference<_Ht>::value, const _Value&, _Value&&>::type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__fwd_value_for(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::value_type&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2220.
/usr/include/c++/11/bits/hashtable.h:1306:41: optimized:  Inlining static constexpr typename std::conditional<std::is_lvalue_reference<_Ht>::value, const _Value&, _Value&&>::type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__fwd_value_for(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::value_type&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2220 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232.
/usr/include/c++/11/bits/hashtable.h:1306:54: note: Considering inline candidate _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2019.
/usr/include/c++/11/bits/hashtable.h:1306:54: optimized:  Inlining _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2019 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232.
/usr/include/c++/11/bits/hashtable.h:1304:39: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2059.
/usr/include/c++/11/bits/hashtable.h:1304:39: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2059 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232.
/usr/include/c++/11/bits/hashtable.h:1295:48: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2218.
/usr/include/c++/11/bits/hashtable.h:1295:48: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2218 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232.
/usr/include/c++/11/bits/hashtable.h:1273:28: note: Considering inline candidate void std::__detail::_Prime_rehash_policy::_M_reset(std::__detail::_Prime_rehash_policy::_State)/141.
/usr/include/c++/11/bits/hashtable.h:1273:28: optimized:  Inlining void std::__detail::_Prime_rehash_policy::_M_reset(std::__detail::_Prime_rehash_policy::_State)/141 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069.
/usr/include/c++/11/bits/hashtable.h:1272:24: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2061.
/usr/include/c++/11/bits/hashtable.h:1272:24: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2061 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069.
/usr/include/c++/11/bits/hashtable.h:1266:4: note: Considering inline candidate std::__detail::_ReuseOrAllocNode<_NodeAlloc>::~_ReuseOrAllocNode() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2230.
/usr/include/c++/11/bits/hashtable.h:1266:4: optimized:  Inlining std::__detail::_ReuseOrAllocNode<_NodeAlloc>::~_ReuseOrAllocNode() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2230 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069.
/usr/include/c++/11/bits/hashtable.h:1266:4: note: Considering inline candidate std::__detail::_ReuseOrAllocNode<_NodeAlloc>::~_ReuseOrAllocNode() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2230.
/usr/include/c++/11/bits/hashtable.h:1266:4: optimized:  Inlining std::__detail::_ReuseOrAllocNode<_NodeAlloc>::~_ReuseOrAllocNode() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2230 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069.
/usr/include/c++/11/bits/hashtable.h:1265:29: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2217.
/usr/include/c++/11/bits/hashtable.h:1265:29: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2217 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069.
/usr/include/c++/11/bits/hashtable.h:1263:15: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232.
/usr/include/c++/11/bits/hashtable.h:1263:15: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232, call is cold and code would grow at least by 56
/usr/include/c++/11/bits/hashtable.h:1263:15: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&]/2068.
/usr/include/c++/11/bits/hashtable.h:1263:15: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&]/2068 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069.
/usr/include/c++/11/bits/hashtable.h:1261:34: note: Considering inline candidate std::__detail::_ReuseOrAllocNode<_NodeAlloc>::_ReuseOrAllocNode(std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type*, std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__hashtable_alloc&) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2227.
/usr/include/c++/11/bits/hashtable.h:1261:34: optimized:  Inlining std::__detail::_ReuseOrAllocNode<_NodeAlloc>::_ReuseOrAllocNode(std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type*, std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__hashtable_alloc&) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2227 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069.
/usr/include/c++/11/bits/hashtable.h:1261:34: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2059.
/usr/include/c++/11/bits/hashtable.h:1261:34: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2059 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069.
/usr/include/c++/11/bits/hashtable.h:1258:51: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&]/2068.
/usr/include/c++/11/bits/hashtable.h:1258:51: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&]/2068 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069.
/usr/include/c++/11/bits/hashtable.h:1249:38: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2218.
/usr/include/c++/11/bits/hashtable.h:1249:38: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2218 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069.
/usr/include/c++/11/bits/hashtable.h:1244:66: note: Considering inline candidate std::__detail::_Prime_rehash_policy::_State std::__detail::_Prime_rehash_policy::_M_state() const/139.
/usr/include/c++/11/bits/hashtable.h:1244:66: optimized:  Inlining std::__detail::_Prime_rehash_policy::_State std::__detail::_Prime_rehash_policy::_M_state() const/139 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069.
/usr/include/c++/11/bits/hashtable.h:1228:25: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069.
/usr/include/c++/11/bits/hashtable.h:1228:25: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>& std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::operator=(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1835->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069, call is cold and code would grow at least by 68
/usr/include/c++/11/bits/unordered_map.h:272:7: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>& std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::operator=(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1835.
/usr/include/c++/11/bits/unordered_map.h:272:7: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>& std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::operator=(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1835 into std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator=(const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&) [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/543.
ldap.hpp:8:7: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator=(const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&) [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/543.
ldap.hpp:8:7: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator=(const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&) [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/543 into LdapObject& LdapObject::operator=(const LdapObject&)/544.
/usr/include/c++/11/bits/stl_algobase.h:385:18: note: Considering inline candidate LdapObject& LdapObject::operator=(const LdapObject&)/544.
/usr/include/c++/11/bits/stl_algobase.h:385:18: optimized:  Inlining LdapObject& LdapObject::operator=(const LdapObject&)/544 into static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = const LdapObject*; _OI = LdapObject*]/2520.
/usr/include/c++/11/bits/stl_algobase.h:495:30: note: Considering inline candidate static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = const LdapObject*; _OI = LdapObject*]/2520.
/usr/include/c++/11/bits/stl_algobase.h:495:30: optimized:  Inlining static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = const LdapObject*; _OI = LdapObject*]/2520 into _OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const LdapObject*; _OI = LdapObject*]/2445.
/usr/include/c++/11/bits/stl_algobase.h:522:42: note: Considering inline candidate _OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const LdapObject*; _OI = LdapObject*]/2445.
/usr/include/c++/11/bits/stl_algobase.h:522:42: optimized:  Inlining _OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const LdapObject*; _OI = LdapObject*]/2445 into _OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const LdapObject*; _OI = LdapObject*]/2346.
/usr/include/c++/11/bits/stl_algobase.h:529:31: note: Considering inline candidate _From std::__niter_wrap(_From, _To) [with _From = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >; _To = LdapObject*]/2347.
/usr/include/c++/11/bits/stl_algobase.h:529:31: optimized:  Inlining _From std::__niter_wrap(_From, _To) [with _From = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >; _To = LdapObject*]/2347 into _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _OI = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >]/2207.
/usr/include/c++/11/bits/stl_algobase.h:529:31: note: Considering inline candidate _OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const LdapObject*; _OI = LdapObject*]/2346.
/usr/include/c++/11/bits/stl_algobase.h:529:31: optimized:  Inlining _OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const LdapObject*; _OI = LdapObject*]/2346 into _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _OI = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >]/2207.
/usr/include/c++/11/bits/stl_algobase.h:529:31: note: Considering inline candidate _Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2344.
/usr/include/c++/11/bits/stl_algobase.h:529:31: optimized:  Inlining _Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2344 into _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _OI = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >]/2207.
/usr/include/c++/11/bits/stl_algobase.h:529:31: note: Considering inline candidate _Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2344.
/usr/include/c++/11/bits/stl_algobase.h:529:31: optimized:  Inlining _Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2344 into _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _OI = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >]/2207.
/usr/include/c++/11/bits/stl_algobase.h:529:31: note: Considering inline candidate _Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2345.
/usr/include/c++/11/bits/stl_algobase.h:529:31: optimized:  Inlining _Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = LdapObject*; _Container = std::vector<LdapObject>]/2345 into _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _OI = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >]/2207.
/usr/include/c++/11/bits/stl_algobase.h:620:7: note: Considering inline candidate _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _OI = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >]/2207.
/usr/include/c++/11/bits/stl_algobase.h:620:7: missed:   will not early inline: _OI std::copy(_II, _II, _OI) [with _II = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _OI = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >]/2051->_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _OI = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >]/2207, growth 8 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_algobase.h:620:7: note: Considering inline candidate _Iterator std::__miter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >]/2204.
/usr/include/c++/11/bits/stl_algobase.h:620:7: optimized:  Inlining _Iterator std::__miter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >]/2204 into _OI std::copy(_II, _II, _OI) [with _II = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _OI = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >]/2051.
/usr/include/c++/11/bits/stl_algobase.h:620:7: note: Considering inline candidate _Iterator std::__miter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >]/2204.
/usr/include/c++/11/bits/stl_algobase.h:620:7: optimized:  Inlining _Iterator std::__miter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >]/2204 into _OI std::copy(_II, _II, _OI) [with _II = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _OI = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >]/2051.
/usr/include/c++/11/bits/stl_algobase.h:385:18: note: Considering inline candidate LdapObject& LdapObject::operator=(const LdapObject&)/544.
/usr/include/c++/11/bits/stl_algobase.h:385:18: optimized:  Inlining LdapObject& LdapObject::operator=(const LdapObject&)/544 into static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = LdapObject*; _OI = LdapObject*]/2521.
/usr/include/c++/11/bits/stl_algobase.h:495:30: note: Considering inline candidate static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = LdapObject*; _OI = LdapObject*]/2521.
/usr/include/c++/11/bits/stl_algobase.h:495:30: optimized:  Inlining static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = LdapObject*; _OI = LdapObject*]/2521 into _OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = LdapObject*; _OI = LdapObject*]/2450.
/usr/include/c++/11/bits/stl_algobase.h:522:42: note: Considering inline candidate _OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = LdapObject*; _OI = LdapObject*]/2450.
/usr/include/c++/11/bits/stl_algobase.h:522:42: optimized:  Inlining _OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = LdapObject*; _OI = LdapObject*]/2450 into _OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = LdapObject*; _OI = LdapObject*]/2350.
/usr/include/c++/11/bits/stl_algobase.h:529:31: note: Considering inline candidate _Iterator std::__niter_wrap(const _Iterator&, _Iterator) [with _Iterator = LdapObject*]/2351.
/usr/include/c++/11/bits/stl_algobase.h:529:31: optimized:  Inlining _Iterator std::__niter_wrap(const _Iterator&, _Iterator) [with _Iterator = LdapObject*]/2351 into _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = LdapObject*; _OI = LdapObject*]/2210.
/usr/include/c++/11/bits/stl_algobase.h:529:31: note: Considering inline candidate _OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = LdapObject*; _OI = LdapObject*]/2350.
/usr/include/c++/11/bits/stl_algobase.h:529:31: optimized:  Inlining _OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = LdapObject*; _OI = LdapObject*]/2350 into _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = LdapObject*; _OI = LdapObject*]/2210.
/usr/include/c++/11/bits/stl_algobase.h:529:31: note: Considering inline candidate _Iterator std::__niter_base(_Iterator) [with _Iterator = LdapObject*]/2349.
/usr/include/c++/11/bits/stl_algobase.h:529:31: optimized:  Inlining _Iterator std::__niter_base(_Iterator) [with _Iterator = LdapObject*]/2349 into _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = LdapObject*; _OI = LdapObject*]/2210.
/usr/include/c++/11/bits/stl_algobase.h:529:31: note: Considering inline candidate _Iterator std::__niter_base(_Iterator) [with _Iterator = LdapObject*]/2349.
/usr/include/c++/11/bits/stl_algobase.h:529:31: optimized:  Inlining _Iterator std::__niter_base(_Iterator) [with _Iterator = LdapObject*]/2349 into _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = LdapObject*; _OI = LdapObject*]/2210.
/usr/include/c++/11/bits/stl_algobase.h:529:31: note: Considering inline candidate _Iterator std::__niter_base(_Iterator) [with _Iterator = LdapObject*]/2349.
/usr/include/c++/11/bits/stl_algobase.h:529:31: optimized:  Inlining _Iterator std::__niter_base(_Iterator) [with _Iterator = LdapObject*]/2349 into _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = LdapObject*; _OI = LdapObject*]/2210.
/usr/include/c++/11/bits/stl_algobase.h:620:7: note: Considering inline candidate _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = LdapObject*; _OI = LdapObject*]/2210.
/usr/include/c++/11/bits/stl_algobase.h:620:7: optimized:  Inlining _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = LdapObject*; _OI = LdapObject*]/2210 into _OI std::copy(_II, _II, _OI) [with _II = LdapObject*; _OI = LdapObject*]/2054.
/usr/include/c++/11/bits/stl_algobase.h:620:7: note: Considering inline candidate _Iterator std::__miter_base(_Iterator) [with _Iterator = LdapObject*]/2209.
/usr/include/c++/11/bits/stl_algobase.h:620:7: optimized:  Inlining _Iterator std::__miter_base(_Iterator) [with _Iterator = LdapObject*]/2209 into _OI std::copy(_II, _II, _OI) [with _II = LdapObject*; _OI = LdapObject*]/2054.
/usr/include/c++/11/bits/stl_algobase.h:620:7: note: Considering inline candidate _Iterator std::__miter_base(_Iterator) [with _Iterator = LdapObject*]/2209.
/usr/include/c++/11/bits/stl_algobase.h:620:7: optimized:  Inlining _Iterator std::__miter_base(_Iterator) [with _Iterator = LdapObject*]/2209 into _OI std::copy(_II, _II, _OI) [with _II = LdapObject*; _OI = LdapObject*]/2054.
/usr/include/c++/11/bits/stl_construct.h:109:5: note: Considering inline candidate LdapObject::LdapObject()/1500.
/usr/include/c++/11/bits/stl_construct.h:109:5: optimized:  Inlining LdapObject::LdapObject()/1500 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = LdapObject; _Args = {}]/2543.
/usr/include/c++/11/bits/stl_construct.h:119:7: note: Considering inline candidate void* operator new(std::size_t, void*)/74.
/usr/include/c++/11/bits/stl_construct.h:119:7: optimized:  Inlining void* operator new(std::size_t, void*)/74 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = LdapObject; _Args = {}]/2543.
/usr/include/c++/11/bits/stl_uninitialized.h:579:18: note: Considering inline candidate void std::_Construct(_Tp*, _Args&& ...) [with _Tp = LdapObject; _Args = {}]/2543.
/usr/include/c++/11/bits/stl_uninitialized.h:579:18: optimized:  Inlining void std::_Construct(_Tp*, _Args&& ...) [with _Tp = LdapObject; _Args = {}]/2543 into static _ForwardIterator std::__uninitialized_default_n_1<_TrivialValueType>::__uninit_default_n(_ForwardIterator, _Size) [with _ForwardIterator = LdapObject*; _Size = long unsigned int; bool _TrivialValueType = false]/2484.
/usr/include/c++/11/bits/stl_uninitialized.h:579:18: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = LdapObject]/2342.
/usr/include/c++/11/bits/stl_uninitialized.h:579:18: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = LdapObject]/2342 into static _ForwardIterator std::__uninitialized_default_n_1<_TrivialValueType>::__uninit_default_n(_ForwardIterator, _Size) [with _ForwardIterator = LdapObject*; _Size = long unsigned int; bool _TrivialValueType = false]/2484.
/usr/include/c++/11/bits/stl_uninitialized.h:640:20: note: Considering inline candidate static _ForwardIterator std::__uninitialized_default_n_1<_TrivialValueType>::__uninit_default_n(_ForwardIterator, _Size) [with _ForwardIterator = LdapObject*; _Size = long unsigned int; bool _TrivialValueType = false]/2484.
/usr/include/c++/11/bits/stl_uninitialized.h:640:20: optimized:  Inlining static _ForwardIterator std::__uninitialized_default_n_1<_TrivialValueType>::__uninit_default_n(_ForwardIterator, _Size) [with _ForwardIterator = LdapObject*; _Size = long unsigned int; bool _TrivialValueType = false]/2484 into _ForwardIterator std::__uninitialized_default_n(_ForwardIterator, _Size) [with _ForwardIterator = LdapObject*; _Size = long unsigned int]/2366.
/usr/include/c++/11/bits/stl_uninitialized.h:704:44: note: Considering inline candidate _ForwardIterator std::__uninitialized_default_n(_ForwardIterator, _Size) [with _ForwardIterator = LdapObject*; _Size = long unsigned int]/2366.
/usr/include/c++/11/bits/stl_uninitialized.h:704:44: optimized:  Inlining _ForwardIterator std::__uninitialized_default_n(_ForwardIterator, _Size) [with _ForwardIterator = LdapObject*; _Size = long unsigned int]/2366 into _ForwardIterator std::__uninitialized_default_n_a(_ForwardIterator, _Size, std::allocator<_Tp>&) [with _ForwardIterator = LdapObject*; _Size = long unsigned int; _Tp = LdapObject]/2240.
/usr/include/c++/11/bits/stl_vector.h:1606:36: note: Considering inline candidate _ForwardIterator std::__uninitialized_default_n_a(_ForwardIterator, _Size, std::allocator<_Tp>&) [with _ForwardIterator = LdapObject*; _Size = long unsigned int; _Tp = LdapObject]/2240.
/usr/include/c++/11/bits/stl_vector.h:1606:36: optimized:  Inlining _ForwardIterator std::__uninitialized_default_n_a(_ForwardIterator, _Size, std::allocator<_Tp>&) [with _ForwardIterator = LdapObject*; _Size = long unsigned int; _Tp = LdapObject]/2240 into void std::vector<_Tp, _Alloc>::_M_default_initialize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2085.
/usr/include/c++/11/bits/stl_vector.h:1607:28: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2039.
/usr/include/c++/11/bits/stl_vector.h:1607:28: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2039 into void std::vector<_Tp, _Alloc>::_M_default_initialize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2085.
/usr/include/c++/11/bits/stl_vector.h:512:30: note: Considering inline candidate void std::vector<_Tp, _Alloc>::_M_default_initialize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2085.
/usr/include/c++/11/bits/stl_vector.h:512:30: optimized:  Inlining void std::vector<_Tp, _Alloc>::_M_default_initialize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2085 into std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1879.
/usr/include/c++/11/bits/stl_vector.h:511:47: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2083.
/usr/include/c++/11/bits/stl_vector.h:511:47: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2083 into std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1879.
/usr/include/c++/11/bits/stl_vector.h:511:47: note: Considering inline candidate static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2081.
/usr/include/c++/11/bits/stl_vector.h:511:47: optimized:  Inlining static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2081 into std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1879.
/usr/include/c++/11/tuple:756:17: note: Considering inline candidate constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(std::_Tuple_impl<_Idx, _Head>&&) [with long unsigned int _Idx = 0; _Head = std::__cxx11::basic_string<char>&&]/2545.
/usr/include/c++/11/tuple:756:17: optimized:  Inlining constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(std::_Tuple_impl<_Idx, _Head>&&) [with long unsigned int _Idx = 0; _Head = std::__cxx11::basic_string<char>&&]/2545 into constexpr std::tuple<_Elements>::tuple(std::tuple<_Elements>&&) [with _Elements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}]/2548.
/usr/include/c++/11/ext/new_allocator.h:155:27: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__cxx11::basic_string<char>]/2512.
/usr/include/c++/11/ext/new_allocator.h:155:27: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__cxx11::basic_string<char>]/2512 into __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::__cxx11::basic_string<char>]/2551.
/usr/include/c++/11/bits/alloc_traits.h:550:21: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::__cxx11::basic_string<char>]/2551.
/usr/include/c++/11/bits/alloc_traits.h:550:21: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::__cxx11::basic_string<char>]/2551 into static std::allocator_traits<std::allocator<_Tp1> >::size_type std::allocator_traits<std::allocator<_Tp1> >::max_size(const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>]/2487.
/usr/include/c++/11/bits/stl_vector.h:1784:19: note: Considering inline candidate constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = long unsigned int]/148.
/usr/include/c++/11/bits/stl_vector.h:1784:19: optimized:  Inlining constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = long unsigned int]/148 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2384.
/usr/include/c++/11/bits/stl_vector.h:1783:51: note: Considering inline candidate static std::allocator_traits<std::allocator<_Tp1> >::size_type std::allocator_traits<std::allocator<_Tp1> >::max_size(const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>]/2487.
/usr/include/c++/11/bits/stl_vector.h:1783:51: optimized:  Inlining static std::allocator_traits<std::allocator<_Tp1> >::size_type std::allocator_traits<std::allocator<_Tp1> >::max_size(const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>]/2487 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2384.
/usr/include/c++/11/bits/stl_vector.h:1769:24: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/1818.
/usr/include/c++/11/bits/stl_vector.h:1769:24: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/1818 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2267.
/usr/include/c++/11/bits/stl_vector.h:1769:23: note: Considering inline candidate static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2384.
/usr/include/c++/11/bits/stl_vector.h:1769:23: optimized:  Inlining static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2384 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2267.
/usr/include/c++/11/bits/stl_vector.h:1769:24: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__cxx11::basic_string<char>]/2328.
/usr/include/c++/11/bits/stl_vector.h:1769:24: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__cxx11::basic_string<char>]/2328 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2267.
/usr/include/c++/11/bits/hashtable_policy.h:1650:48: note: Considering inline candidate const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 0; _Tp = std::equal_to<std::__cxx11::basic_string<char> >]/2561.
/usr/include/c++/11/bits/hashtable_policy.h:1650:48: optimized:  Inlining const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 0; _Tp = std::equal_to<std::__cxx11::basic_string<char> >]/2561 into const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_eq() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2506.
/usr/include/c++/11/bits/stl_algobase.h:385:18: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2587.
/usr/include/c++/11/bits/stl_algobase.h:385:18: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2587 into static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2571.
/usr/include/c++/11/bits/stl_algobase.h:495:30: note: Considering inline candidate static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2571.
/usr/include/c++/11/bits/stl_algobase.h:495:30: optimized:  Inlining static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2571 into _OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2552.
/usr/include/c++/11/bits/stl_algobase.h:522:42: note: Considering inline candidate _OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2552.
/usr/include/c++/11/bits/stl_algobase.h:522:42: optimized:  Inlining _OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2552 into _OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2490.
/usr/include/c++/11/bits/stl_algobase.h:529:31: note: Considering inline candidate _Iterator std::__niter_wrap(const _Iterator&, _Iterator) [with _Iterator = std::__cxx11::basic_string<char>*]/2491.
/usr/include/c++/11/bits/stl_algobase.h:529:31: optimized:  Inlining _Iterator std::__niter_wrap(const _Iterator&, _Iterator) [with _Iterator = std::__cxx11::basic_string<char>*]/2491 into _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2388.
/usr/include/c++/11/bits/stl_algobase.h:529:31: note: Considering inline candidate _OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2490.
/usr/include/c++/11/bits/stl_algobase.h:529:31: optimized:  Inlining _OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2490 into _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2388.
/usr/include/c++/11/bits/stl_algobase.h:529:31: note: Considering inline candidate _Iterator std::__niter_base(_Iterator) [with _Iterator = const std::__cxx11::basic_string<char>*]/2488.
/usr/include/c++/11/bits/stl_algobase.h:529:31: optimized:  Inlining _Iterator std::__niter_base(_Iterator) [with _Iterator = const std::__cxx11::basic_string<char>*]/2488 into _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2388.
/usr/include/c++/11/bits/stl_algobase.h:529:31: note: Considering inline candidate _Iterator std::__niter_base(_Iterator) [with _Iterator = const std::__cxx11::basic_string<char>*]/2488.
/usr/include/c++/11/bits/stl_algobase.h:529:31: optimized:  Inlining _Iterator std::__niter_base(_Iterator) [with _Iterator = const std::__cxx11::basic_string<char>*]/2488 into _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2388.
/usr/include/c++/11/bits/stl_algobase.h:529:31: note: Considering inline candidate _Iterator std::__niter_base(_Iterator) [with _Iterator = std::__cxx11::basic_string<char>*]/2489.
/usr/include/c++/11/bits/stl_algobase.h:529:31: optimized:  Inlining _Iterator std::__niter_base(_Iterator) [with _Iterator = std::__cxx11::basic_string<char>*]/2489 into _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2388.
/usr/include/c++/11/bits/stl_algobase.h:620:7: note: Considering inline candidate _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2388.
/usr/include/c++/11/bits/stl_algobase.h:620:7: optimized:  Inlining _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2388 into _OI std::copy(_II, _II, _OI) [with _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2270.
/usr/include/c++/11/bits/stl_algobase.h:620:7: note: Considering inline candidate _Iterator std::__miter_base(_Iterator) [with _Iterator = const std::__cxx11::basic_string<char>*]/2385.
/usr/include/c++/11/bits/stl_algobase.h:620:7: optimized:  Inlining _Iterator std::__miter_base(_Iterator) [with _Iterator = const std::__cxx11::basic_string<char>*]/2385 into _OI std::copy(_II, _II, _OI) [with _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2270.
/usr/include/c++/11/bits/stl_algobase.h:620:7: note: Considering inline candidate _Iterator std::__miter_base(_Iterator) [with _Iterator = const std::__cxx11::basic_string<char>*]/2385.
/usr/include/c++/11/bits/stl_algobase.h:620:7: optimized:  Inlining _Iterator std::__miter_base(_Iterator) [with _Iterator = const std::__cxx11::basic_string<char>*]/2385 into _OI std::copy(_II, _II, _OI) [with _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2270.
/usr/include/c++/11/bits/vector.tcc:330:35: note: Considering inline candidate _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/2272.
/usr/include/c++/11/bits/vector.tcc:330:35: optimized:  Inlining _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/2272 into void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107.
/usr/include/c++/11/bits/vector.tcc:332:27: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2014.
/usr/include/c++/11/bits/vector.tcc:332:27: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2014 into void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107.
/usr/include/c++/11/bits/vector.tcc:327:68: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1931.
/usr/include/c++/11/bits/vector.tcc:327:68: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1931 into void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107.
/usr/include/c++/11/bits/vector.tcc:326:15: note: Considering inline candidate _OI std::copy(_II, _II, _OI) [with _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2270.
/usr/include/c++/11/bits/vector.tcc:326:15: optimized:  Inlining _OI std::copy(_II, _II, _OI) [with _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2270 into void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107.
/usr/include/c++/11/bits/vector.tcc:325:18: note: Considering inline candidate constexpr void std::advance(_InputIterator&, _Distance) [with _InputIterator = const std::__cxx11::basic_string<char>*; _Distance = long unsigned int]/2271.
/usr/include/c++/11/bits/vector.tcc:325:18: optimized:  Inlining constexpr void std::advance(_InputIterator&, _Distance) [with _InputIterator = const std::__cxx11::basic_string<char>*; _Distance = long unsigned int]/2271 into void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107.
/usr/include/c++/11/bits/vector.tcc:325:18: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1931.
/usr/include/c++/11/bits/vector.tcc:325:18: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1931 into void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107.
/usr/include/c++/11/bits/vector.tcc:321:19: note: Considering inline candidate void std::vector<_Tp, _Alloc>::_M_erase_at_end(std::vector<_Tp, _Alloc>::pointer) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2269.
/usr/include/c++/11/bits/vector.tcc:321:19: optimized:  Inlining void std::vector<_Tp, _Alloc>::_M_erase_at_end(std::vector<_Tp, _Alloc>::pointer) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2269 into void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107.
/usr/include/c++/11/bits/vector.tcc:321:19: note: Considering inline candidate _OI std::copy(_II, _II, _OI) [with _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2270.
/usr/include/c++/11/bits/vector.tcc:321:19: optimized:  Inlining _OI std::copy(_II, _II, _OI) [with _II = const std::__cxx11::basic_string<char>*; _OI = std::__cxx11::basic_string<char>*]/2270 into void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107.
/usr/include/c++/11/bits/vector.tcc:320:15: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1931.
/usr/include/c++/11/bits/vector.tcc:320:15: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1931 into void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107.
/usr/include/c++/11/bits/vector.tcc:313:19: note: Considering inline candidate void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2029.
/usr/include/c++/11/bits/vector.tcc:313:19: optimized:  Inlining void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2029 into void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107.
/usr/include/c++/11/bits/vector.tcc:310:19: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/2016.
/usr/include/c++/11/bits/vector.tcc:310:19: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/2016 into void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107.
/usr/include/c++/11/bits/vector.tcc:311:25: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2014.
/usr/include/c++/11/bits/vector.tcc:311:25: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2014 into void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107.
/usr/include/c++/11/bits/vector.tcc:309:40: note: Considering inline candidate std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_M_allocate_and_copy(std::vector<_Tp, _Alloc>::size_type, _ForwardIterator, _ForwardIterator) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2268.
/usr/include/c++/11/bits/vector.tcc:309:40: missed:   will not early inline: void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107->std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_M_allocate_and_copy(std::vector<_Tp, _Alloc>::size_type, _ForwardIterator, _ForwardIterator) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2268, call is cold and code would grow at least by 19
/usr/include/c++/11/bits/vector.tcc:308:23: note: Considering inline candidate static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2267.
/usr/include/c++/11/bits/vector.tcc:308:23: optimized:  Inlining static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2267 into void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107.
/usr/include/c++/11/bits/vector.tcc:308:50: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2014.
/usr/include/c++/11/bits/vector.tcc:308:50: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2014 into void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107.
/usr/include/c++/11/bits/vector.tcc:306:22: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::capacity() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2266.
/usr/include/c++/11/bits/vector.tcc:306:22: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::capacity() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2266 into void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107.
/usr/include/c++/11/bits/vector.tcc:304:39: note: Considering inline candidate constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*]/2106.
/usr/include/c++/11/bits/vector.tcc:304:39: optimized:  Inlining constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*]/2106 into void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107.
/usr/include/c++/11/bits/stl_vector.h:732:21: note: Considering inline candidate void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107.
/usr/include/c++/11/bits/stl_vector.h:732:21: missed:   will not early inline: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::initializer_list<_Tp>) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1907->void std::vector<_Tp, _Alloc>::_M_assign_aux(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2107, call is cold and code would grow at least by 47
/usr/include/c++/11/bits/stl_vector.h:732:21: note: Considering inline candidate constexpr const _E* std::initializer_list<_E>::begin() const [with _E = std::__cxx11::basic_string<char>]/1904.
/usr/include/c++/11/bits/stl_vector.h:732:21: optimized:  Inlining constexpr const _E* std::initializer_list<_E>::begin() const [with _E = std::__cxx11::basic_string<char>]/1904 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::initializer_list<_Tp>) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1907.
/usr/include/c++/11/bits/stl_vector.h:732:21: note: Considering inline candidate constexpr const _E* std::initializer_list<_E>::end() const [with _E = std::__cxx11::basic_string<char>]/1906.
/usr/include/c++/11/bits/stl_vector.h:732:21: optimized:  Inlining constexpr const _E* std::initializer_list<_E>::end() const [with _E = std::__cxx11::basic_string<char>]/1906 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::initializer_list<_Tp>) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1907.
/usr/include/c++/11/tuple:424:65: note: Considering inline candidate static constexpr _Head& std::_Head_base<_Idx, _Head, false>::_M_head(std::_Head_base<_Idx, _Head, false>&) [with long unsigned int _Idx = 0; _Head = std::__cxx11::basic_string<char>&&]/2579.
/usr/include/c++/11/tuple:424:65: optimized:  Inlining static constexpr _Head& std::_Head_base<_Idx, _Head, false>::_M_head(std::_Head_base<_Idx, _Head, false>&) [with long unsigned int _Idx = 0; _Head = std::__cxx11::basic_string<char>&&]/2579 into static constexpr _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(std::_Tuple_impl<_Idx, _Head>&) [with long unsigned int _Idx = 0; _Head = std::__cxx11::basic_string<char>&&]/2580.
/usr/include/c++/11/tuple:1378:56: note: Considering inline candidate static constexpr _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(std::_Tuple_impl<_Idx, _Head>&) [with long unsigned int _Idx = 0; _Head = std::__cxx11::basic_string<char>&&]/2580.
/usr/include/c++/11/tuple:1378:56: optimized:  Inlining static constexpr _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(std::_Tuple_impl<_Idx, _Head>&) [with long unsigned int _Idx = 0; _Head = std::__cxx11::basic_string<char>&&]/2580 into constexpr _Head& std::__get_helper(std::_Tuple_impl<_Idx, _Head, _Tail ...>&) [with long unsigned int __i = 0; _Head = std::__cxx11::basic_string<char>&&; _Tail = {}]/2581.
/usr/include/c++/11/tuple:1394:36: note: Considering inline candidate constexpr _Head& std::__get_helper(std::_Tuple_impl<_Idx, _Head, _Tail ...>&) [with long unsigned int __i = 0; _Head = std::__cxx11::basic_string<char>&&; _Tail = {}]/2581.
/usr/include/c++/11/tuple:1394:36: optimized:  Inlining constexpr _Head& std::__get_helper(std::_Tuple_impl<_Idx, _Head, _Tail ...>&) [with long unsigned int __i = 0; _Head = std::__cxx11::basic_string<char>&&; _Tail = {}]/2581 into constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >& std::get(std::tuple<_UTypes ...>&) [with long unsigned int __i = 0; _Elements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}]/2582.
/usr/include/c++/11/tuple:1820:2: note: Considering inline candidate std::vector<_Tp, _Alloc>::vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/533.
/usr/include/c++/11/tuple:1820:2: optimized:  Inlining std::vector<_Tp, _Alloc>::vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/533 into std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/2585.
/usr/include/c++/11/tuple:1819:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1662.
/usr/include/c++/11/tuple:1819:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1662 into std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/2585.
/usr/include/c++/11/tuple:1819:9: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__cxx11::basic_string<char>&&]/2583.
/usr/include/c++/11/tuple:1819:9: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__cxx11::basic_string<char>&&]/2583 into std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/2585.
/usr/include/c++/11/tuple:1819:55: note: Considering inline candidate constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >& std::get(std::tuple<_UTypes ...>&) [with long unsigned int __i = 0; _Elements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}]/2582.
/usr/include/c++/11/tuple:1819:55: optimized:  Inlining constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >& std::get(std::tuple<_UTypes ...>&) [with long unsigned int __i = 0; _Elements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}]/2582 into std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/2585.
/usr/include/c++/11/tuple:1809:63: note: Considering inline candidate std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/2585.
/usr/include/c++/11/tuple:1809:63: optimized:  Inlining std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/2585 into std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}; _Args2 = {}; _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/2569.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}; _Args2 = {}; _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/2569.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}; _Args2 = {}; _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/2569 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2550.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate void* operator new(std::size_t, void*)/74.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining void* operator new(std::size_t, void*)/74 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2550.
/usr/include/c++/11/ext/new_allocator.h:162:46: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/2257.
/usr/include/c++/11/ext/new_allocator.h:162:46: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/2257 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2550.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate constexpr std::tuple<_Elements>::tuple(std::tuple<_Elements>&&) [with _Elements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}]/2548.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining constexpr std::tuple<_Elements>::tuple(std::tuple<_Elements>&&) [with _Elements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&}]/2548 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2550.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>]/2256.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>]/2256 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2550.
/usr/include/c++/11/ext/new_allocator.h:162:46: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/2255.
/usr/include/c++/11/ext/new_allocator.h:162:46: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/2255 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2550.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2550.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2550 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2485.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/2255.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/2255 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2485.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>]/2256.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>]/2256 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2485.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/2257.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/2257 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2485.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2485.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2485 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2377.
/usr/include/c++/11/bits/hashtable_policy.h:1878:54: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056.
/usr/include/c++/11/bits/hashtable_policy.h:1878:54: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2377.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2006.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2006 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2377.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/2255.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/2255 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2377.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>]/2256.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>]/2256 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2377.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/2257.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/2257 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2377.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: note: Considering inline candidate std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>::_Hash_node()/2359.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: optimized:  Inlining std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>::_Hash_node()/2359 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2377.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: note: Considering inline candidate void* operator new(std::size_t, void*)/74.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: optimized:  Inlining void* operator new(std::size_t, void*)/74 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2377.
/usr/include/c++/11/bits/hashtable_policy.h:1874:36: note: Considering inline candidate constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2480.
/usr/include/c++/11/bits/hashtable_policy.h:1874:36: optimized:  Inlining constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2480 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2377.
/usr/include/c++/11/bits/hashtable_policy.h:1873:45: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2479.
/usr/include/c++/11/bits/hashtable_policy.h:1873:45: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2479 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2377.
/usr/include/c++/11/bits/hashtable_policy.h:1873:63: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056.
/usr/include/c++/11/bits/hashtable_policy.h:1873:63: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2056 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2377.
/usr/include/c++/11/bits/hashtable.h:304:35: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2377.
/usr/include/c++/11/bits/hashtable.h:304:35: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2259->std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2377, call is cold and code would grow at least by 18
/usr/include/c++/11/bits/hashtable.h:304:35: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/2255.
/usr/include/c++/11/bits/hashtable.h:304:35: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/2255 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2259.
/usr/include/c++/11/bits/hashtable.h:304:35: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>]/2256.
/usr/include/c++/11/bits/hashtable.h:304:35: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>]/2256 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2259.
/usr/include/c++/11/bits/hashtable.h:304:35: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/2257.
/usr/include/c++/11/bits/hashtable.h:304:35: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/2257 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2259.
/usr/include/c++/11/ext/aligned_buffer.h:119:47: note: Considering inline candidate const void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() const [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2588.
/usr/include/c++/11/ext/aligned_buffer.h:119:47: optimized:  Inlining const void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() const [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2588 into const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2574.
/usr/include/c++/11/bits/hashtable_policy.h:242:33: note: Considering inline candidate const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2574.
/usr/include/c++/11/bits/hashtable_policy.h:242:33: optimized:  Inlining const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2574 into const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2562.
/usr/include/c++/11/bits/hashtable_policy.h:250:26: note: Considering inline candidate const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2562.
/usr/include/c++/11/bits/hashtable_policy.h:250:26: optimized:  Inlining const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2562 into const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2507.
/usr/include/c++/11/bits/hashtable_policy.h:1617:39: note: Considering inline candidate constexpr bool std::equal_to<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = std::__cxx11::basic_string<char>]/2511.
/usr/include/c++/11/bits/hashtable_policy.h:1617:39: optimized:  Inlining constexpr bool std::equal_to<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = std::__cxx11::basic_string<char>]/2511 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2426.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: note: Considering inline candidate decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2510.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: optimized:  Inlining decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/2510 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2426.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: note: Considering inline candidate const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2507.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: optimized:  Inlining const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2507 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2426.
/usr/include/c++/11/bits/hashtable_policy.h:1617:37: note: Considering inline candidate const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_eq() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2506.
/usr/include/c++/11/bits/hashtable_policy.h:1617:37: optimized:  Inlining const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_eq() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2506 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2426.
/usr/include/c++/11/bits/hashtable_policy.h:1617:18: note: Considering inline candidate static bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_S_equals(std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_code_cache<true>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2505.
/usr/include/c++/11/bits/hashtable_policy.h:1617:18: optimized:  Inlining static bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_S_equals(std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_code_cache<true>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2505 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2426.
/usr/include/c++/11/bits/hashtable.h:1838:23: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184.
/usr/include/c++/11/bits/hashtable.h:1838:23: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2322.
/usr/include/c++/11/bits/hashtable.h:1843:39: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2225.
/usr/include/c++/11/bits/hashtable.h:1843:39: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2225 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2322.
/usr/include/c++/11/bits/hashtable.h:1843:53: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184.
/usr/include/c++/11/bits/hashtable.h:1843:53: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/2184 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2322.
/usr/include/c++/11/bits/hashtable.h:1840:23: note: Considering inline candidate bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2426.
/usr/include/c++/11/bits/hashtable.h:1840:23: optimized:  Inlining bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2426 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2322.
/usr/include/c++/11/bits/hashtable.h:810:50: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2322.
/usr/include/c++/11/bits/hashtable.h:810:50: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2168->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2322, growth 17 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/hashtable_policy.h:744:5: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2262.
/usr/include/c++/11/bits/hashtable_policy.h:744:5: missed:   will not early inline: std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2262, growth 6 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable_policy.h:744:5: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2262.
/usr/include/c++/11/bits/hashtable_policy.h:744:5: missed:   will not early inline: std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2262, growth 6 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable_policy.h:743:14: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::pointer std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator->() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/2265.
/usr/include/c++/11/bits/hashtable_policy.h:743:14: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::pointer std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator->() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/2265 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103.
/usr/include/c++/11/bits/hashtable_policy.h:741:30: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2264.
/usr/include/c++/11/bits/hashtable_policy.h:741:30: missed:   will not early inline: std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2264, call is cold and code would grow at least by 18
/usr/include/c++/11/bits/hashtable_policy.h:734:42: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2259.
/usr/include/c++/11/bits/hashtable_policy.h:734:42: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2259 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103.
/usr/include/c++/11/bits/hashtable_policy.h:734:42: note: Considering inline candidate constexpr std::tuple<_Elements&& ...> std::forward_as_tuple(_Elements&& ...) [with _Elements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}]/2254.
/usr/include/c++/11/bits/hashtable_policy.h:734:42: optimized:  Inlining constexpr std::tuple<_Elements&& ...> std::forward_as_tuple(_Elements&& ...) [with _Elements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}]/2254 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103.
/usr/include/c++/11/bits/hashtable_policy.h:737:33: note: Considering inline candidate constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::__cxx11::basic_string<char>&]/1902.
/usr/include/c++/11/bits/hashtable_policy.h:737:33: optimized:  Inlining constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::__cxx11::basic_string<char>&]/1902 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103.
/usr/include/c++/11/bits/hashtable_policy.h:732:21: note: Considering inline candidate _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2019.
/usr/include/c++/11/bits/hashtable_policy.h:732:21: optimized:  Inlining _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/2019 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103.
/usr/include/c++/11/bits/hashtable_policy.h:731:42: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2168.
/usr/include/c++/11/bits/hashtable_policy.h:731:42: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2168 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103.
/usr/include/c++/11/bits/hashtable_policy.h:730:47: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2167.
/usr/include/c++/11/bits/hashtable_policy.h:730:47: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2167 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103.
/usr/include/c++/11/bits/hashtable_policy.h:729:45: note: Considering inline candidate std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2166.
/usr/include/c++/11/bits/hashtable_policy.h:729:45: optimized:  Inlining std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/2166 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103.
/usr/include/c++/11/bits/unordered_map.h:984:20: note: Considering inline candidate std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103.
/usr/include/c++/11/bits/unordered_map.h:984:20: missed:   will not early inline: std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/1903->std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103, call is cold and code would grow at least by 38
/usr/include/c++/11/bits/unordered_map.h:984:30: note: Considering inline candidate constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::__cxx11::basic_string<char>&]/1902.
/usr/include/c++/11/bits/unordered_map.h:984:30: optimized:  Inlining constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::__cxx11::basic_string<char>&]/1902 into std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/1903.
harness.cpp:25:1: note: Considering inline candidate std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1882.
harness.cpp:25:1: missed:   will not early inline: std::vector<LdapObject> makeObjects(std::size_t)/1520->std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1882, growth 11 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:23:5: note: Considering inline candidate LdapObject::~LdapObject()/1503.
harness.cpp:23:5: optimized:  Inlining LdapObject::~LdapObject()/1503 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:20:71: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:20:71: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:20:46: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:20:46: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:20:30: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:20:30: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:17:52: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:17:52: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:17:55: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:17:55: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:17:23: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
harness.cpp:17:23: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:17:23: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:17:23: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:13:32: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = LdapObject]/1876.
harness.cpp:13:32: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = LdapObject]/1876 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:23:5: note: Considering inline candidate LdapObject::~LdapObject()/1503.
harness.cpp:23:5: optimized:  Inlining LdapObject::~LdapObject()/1503 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:22:32: note: Considering inline candidate LdapObject& LdapObject::operator=(LdapObject&&)/1509.
harness.cpp:22:32: optimized:  Inlining LdapObject& LdapObject::operator=(LdapObject&&)/1509 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:22:15: note: Considering inline candidate std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1833.
harness.cpp:22:15: optimized:  Inlining std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1833 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:22:28: note: Considering inline candidate constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = LdapObject&]/1519.
harness.cpp:22:28: optimized:  Inlining constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = LdapObject&]/1519 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:20:71: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:20:71: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:20:46: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:20:46: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:20:30: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:20:30: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:20:71: note: Considering inline candidate std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::initializer_list<_Tp>) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1907.
harness.cpp:20:71: optimized:  Inlining std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::initializer_list<_Tp>) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1907 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:20:49: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/1903.
harness.cpp:20:49: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/1903 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:20:30: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1869.
harness.cpp:20:30: missed:   will not early inline: std::vector<LdapObject> makeObjects(std::size_t)/1520->std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1869, growth 12 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:20:46: note: Considering inline candidate std::string std::__cxx11::to_string(int)/483.
harness.cpp:20:46: missed:   will not early inline: std::vector<LdapObject> makeObjects(std::size_t)/1520->std::string std::__cxx11::to_string(int)/483, call is cold and code would grow at least by 21
harness.cpp:20:71: note: Considering inline candidate std::string std::__cxx11::to_string(int)/483.
harness.cpp:20:71: missed:   will not early inline: std::vector<LdapObject> makeObjects(std::size_t)/1520->std::string std::__cxx11::to_string(int)/483, call is cold and code would grow at least by 21
harness.cpp:17:52: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:17:52: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:17:55: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:17:55: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:17:23: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
harness.cpp:17:23: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:17:23: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:17:23: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:17:55: note: Considering inline candidate std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::initializer_list<_Tp>) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1907.
harness.cpp:17:55: optimized:  Inlining std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::initializer_list<_Tp>) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1907 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:17:23: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/1903.
harness.cpp:17:23: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/1903 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:17:23: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900.
harness.cpp:17:23: missed:   will not early inline: std::vector<LdapObject> makeObjects(std::size_t)/1520->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900, growth 6 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:17:23: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644.
harness.cpp:17:23: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:17:55: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1869.
harness.cpp:17:55: missed:   will not early inline: std::vector<LdapObject> makeObjects(std::size_t)/1520->std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1869, growth 12 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:17:52: note: Considering inline candidate std::string std::__cxx11::to_string(long unsigned int)/488.
harness.cpp:17:52: missed:   will not early inline: std::vector<LdapObject> makeObjects(std::size_t)/1520->std::string std::__cxx11::to_string(long unsigned int)/488, call is cold and code would grow at least by 20
harness.cpp:16:20: note: Considering inline candidate LdapObject::LdapObject()/1500.
harness.cpp:16:20: optimized:  Inlining LdapObject::LdapObject()/1500 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:13:32: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = LdapObject]/1876.
harness.cpp:13:32: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = LdapObject]/1876 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:14:39: note: Considering inline candidate std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1879.
harness.cpp:14:39: missed:   will not early inline: std::vector<LdapObject> makeObjects(std::size_t)/1520->std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1879, growth 19 exceeds --param early-inlining-insns
harness.cpp:14:39: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = LdapObject]/1873.
harness.cpp:14:39: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = LdapObject]/1873 into std::vector<LdapObject> makeObjects(std::size_t)/1520.
/usr/include/c++/11/bits/allocator.h:160:34: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2595.
/usr/include/c++/11/bits/allocator.h:160:34: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2595 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2590.
/usr/include/c++/11/bits/alloc_traits.h:563:16: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2590.
/usr/include/c++/11/bits/alloc_traits.h:563:16: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2590 into static std::allocator_traits<std::allocator<_Tp1> >::allocator_type std::allocator_traits<std::allocator<_Tp1> >::select_on_container_copy_construction(const allocator_type&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2575.
/usr/include/c++/11/ext/alloc_traits.h:98:67: note: Considering inline candidate static std::allocator_traits<std::allocator<_Tp1> >::allocator_type std::allocator_traits<std::allocator<_Tp1> >::select_on_container_copy_construction(const allocator_type&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2575.
/usr/include/c++/11/ext/alloc_traits.h:98:67: optimized:  Inlining static std::allocator_traits<std::allocator<_Tp1> >::allocator_type std::allocator_traits<std::allocator<_Tp1> >::select_on_container_copy_construction(const allocator_type&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2575 into static constexpr _Alloc __gnu_cxx::__alloc_traits<_Alloc, <template-parameter-1-2> >::_S_select_on_copy(const _Alloc&) [with _Alloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >; <template-parameter-1-2> = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2563.
/usr/include/c++/11/bits/hashtable_policy.h:1131:36: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2590.
/usr/include/c++/11/bits/hashtable_policy.h:1131:36: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2590 into std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >; int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2577.
/usr/include/c++/11/bits/hashtable_policy.h:1131:30: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2564.
/usr/include/c++/11/bits/hashtable_policy.h:1131:30: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2564 into std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >; int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2577.
/usr/include/c++/11/bits/hashtable_policy.h:1829:46: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >; int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2577.
/usr/include/c++/11/bits/hashtable_policy.h:1829:46: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >; int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2577 into std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc(_Alloc&&) [with _Alloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2566.
/usr/include/c++/11/bits/hashtable_policy.h:1829:46: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2564.
/usr/include/c++/11/bits/hashtable_policy.h:1829:46: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2564 into std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc(_Alloc&&) [with _Alloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2566.
/usr/include/c++/11/bits/hashtable.h:1422:5: note: Considering inline candidate std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >::~_Hashtable_alloc()/1488.
/usr/include/c++/11/bits/hashtable.h:1422:5: optimized:  Inlining std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >::~_Hashtable_alloc()/1488 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2523.
/usr/include/c++/11/bits/hashtable.h:1421:16: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2066.
/usr/include/c++/11/bits/hashtable.h:1421:16: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2523->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2066, call is cold and code would grow at least by 57
/usr/include/c++/11/bits/hashtable.h:1420:26: note: Considering inline candidate std::__detail::_AllocNode<_NodeAlloc>::_AllocNode(std::__detail::_AllocNode<_NodeAlloc>::__hashtable_alloc&) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2064.
/usr/include/c++/11/bits/hashtable.h:1420:26: optimized:  Inlining std::__detail::_AllocNode<_NodeAlloc>::_AllocNode(std::__detail::_AllocNode<_NodeAlloc>::__hashtable_alloc&) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2064 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2523.
/usr/include/c++/11/bits/hashtable.h:1418:45: note: Considering inline candidate std::__detail::_Hash_node_base::_Hash_node_base()/128.
/usr/include/c++/11/bits/hashtable.h:1418:45: optimized:  Inlining std::__detail::_Hash_node_base::_Hash_node_base()/128 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2523.
/usr/include/c++/11/bits/hashtable.h:1418:45: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1894.
/usr/include/c++/11/bits/hashtable.h:1418:45: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1894 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2523.
/usr/include/c++/11/bits/hashtable.h:1418:45: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc(_Alloc&&) [with _Alloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2566.
/usr/include/c++/11/bits/hashtable.h:1418:45: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc(_Alloc&&) [with _Alloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2566 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2523.
/usr/include/c++/11/bits/hashtable.h:1418:45: note: Considering inline candidate static constexpr _Alloc __gnu_cxx::__alloc_traits<_Alloc, <template-parameter-1-2> >::_S_select_on_copy(const _Alloc&) [with _Alloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >; <template-parameter-1-2> = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2563.
/usr/include/c++/11/bits/hashtable.h:1418:45: optimized:  Inlining static constexpr _Alloc __gnu_cxx::__alloc_traits<_Alloc, <template-parameter-1-2> >::_S_select_on_copy(const _Alloc&) [with _Alloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >; <template-parameter-1-2> = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/2563 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2523.
/usr/include/c++/11/bits/hashtable.h:1413:63: note: Considering inline candidate const __node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() const [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2057.
/usr/include/c++/11/bits/hashtable.h:1413:63: optimized:  Inlining const __node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() const [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2057 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2523.
/usr/include/c++/11/bits/unordered_map.h:181:7: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2523.
/usr/include/c++/11/bits/unordered_map.h:181:7: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2523 into std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map(const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&) [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/2452.
ldap.hpp:8:7: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map(const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&) [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/2452.
ldap.hpp:8:7: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map(const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&) [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/2452 into LdapObject::LdapObject(const LdapObject&)/2455.
/usr/include/c++/11/bits/stl_construct.h:119:7: note: Considering inline candidate void operator delete(void*, void*)/76.
/usr/include/c++/11/bits/stl_construct.h:119:7: optimized:  Inlining void operator delete(void*, void*)/76 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = LdapObject; _Args = {const LdapObject&}]/2519.
/usr/include/c++/11/bits/stl_construct.h:119:7: note: Considering inline candidate LdapObject::LdapObject(const LdapObject&)/2455.
/usr/include/c++/11/bits/stl_construct.h:119:7: optimized:  Inlining LdapObject::LdapObject(const LdapObject&)/2455 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = LdapObject; _Args = {const LdapObject&}]/2519.
/usr/include/c++/11/bits/stl_construct.h:119:7: note: Considering inline candidate void* operator new(std::size_t, void*)/74.
/usr/include/c++/11/bits/stl_construct.h:119:7: optimized:  Inlining void* operator new(std::size_t, void*)/74 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = LdapObject; _Args = {const LdapObject&}]/2519.
/usr/include/c++/11/bits/stl_construct.h:119:48: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const LdapObject&]/2518.
/usr/include/c++/11/bits/stl_construct.h:119:48: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const LdapObject&]/2518 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = LdapObject; _Args = {const LdapObject&}]/2519.
/usr/include/c++/11/bits/stl_uninitialized.h:97:21: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = LdapObject*]/2200.
/usr/include/c++/11/bits/stl_uninitialized.h:97:21: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = LdapObject*]/2200 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _ForwardIterator = LdapObject*; bool _TrivialValueTypes = false]/2441.
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: Considering inline candidate bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2515.
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: optimized:  Inlining bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2515 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _ForwardIterator = LdapObject*; bool _TrivialValueTypes = false]/2441.
/usr/include/c++/11/bits/stl_uninitialized.h:91:34: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2516.
/usr/include/c++/11/bits/stl_uninitialized.h:91:34: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2516 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _ForwardIterator = LdapObject*; bool _TrivialValueTypes = false]/2441.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: note: Considering inline candidate void std::_Construct(_Tp*, _Args&& ...) [with _Tp = LdapObject; _Args = {const LdapObject&}]/2519.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: optimized:  Inlining void std::_Construct(_Tp*, _Args&& ...) [with _Tp = LdapObject; _Args = {const LdapObject&}]/2519 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _ForwardIterator = LdapObject*; bool _TrivialValueTypes = false]/2441.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = LdapObject]/2342.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = LdapObject]/2342 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _ForwardIterator = LdapObject*; bool _TrivialValueTypes = false]/2441.
/usr/include/c++/11/bits/stl_uninitialized.h:92:45: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2517.
/usr/include/c++/11/bits/stl_uninitialized.h:92:45: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const LdapObject*; _Container = std::vector<LdapObject>]/2517 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _ForwardIterator = LdapObject*; bool _TrivialValueTypes = false]/2441.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: note: Considering inline candidate static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _ForwardIterator = LdapObject*; bool _TrivialValueTypes = false]/2441.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: missed:   will not early inline: _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _ForwardIterator = LdapObject*]/2341->static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _ForwardIterator = LdapObject*; bool _TrivialValueTypes = false]/2441, call is cold and code would grow at least by 34
/usr/include/c++/11/bits/stl_uninitialized.h:333:37: note: Considering inline candidate _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _ForwardIterator = LdapObject*]/2341.
/usr/include/c++/11/bits/stl_uninitialized.h:333:37: optimized:  Inlining _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _ForwardIterator = LdapObject*]/2341 into _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _ForwardIterator = LdapObject*; _Tp = LdapObject]/2198.
/usr/include/c++/11/bits/stl_vector.h:1520:21: note: Considering inline candidate void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2043.
/usr/include/c++/11/bits/stl_vector.h:1520:21: optimized:  Inlining void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2043 into std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_M_allocate_and_copy(std::vector<_Tp, _Alloc>::size_type, _ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2048.
/usr/include/c++/11/bits/stl_vector.h:1514:35: note: Considering inline candidate _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _ForwardIterator = LdapObject*; _Tp = LdapObject]/2198.
/usr/include/c++/11/bits/stl_vector.h:1514:35: optimized:  Inlining _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _ForwardIterator = LdapObject*; _Tp = LdapObject]/2198 into std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_M_allocate_and_copy(std::vector<_Tp, _Alloc>::size_type, _ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2048.
/usr/include/c++/11/bits/stl_vector.h:1515:27: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2039.
/usr/include/c++/11/bits/stl_vector.h:1515:27: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2039 into std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_M_allocate_and_copy(std::vector<_Tp, _Alloc>::size_type, _ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2048.
/usr/include/c++/11/bits/stl_vector.h:1511:40: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2197.
/usr/include/c++/11/bits/stl_vector.h:1511:40: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2197 into std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_M_allocate_and_copy(std::vector<_Tp, _Alloc>::size_type, _ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2048.
/usr/include/c++/11/bits/stl_construct.h:119:7: note: Considering inline candidate void operator delete(void*, void*)/76.
/usr/include/c++/11/bits/stl_construct.h:119:7: optimized:  Inlining void operator delete(void*, void*)/76 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = LdapObject; _Args = {LdapObject&}]/2458.
/usr/include/c++/11/bits/stl_construct.h:119:7: note: Considering inline candidate LdapObject::LdapObject(const LdapObject&)/2455.
/usr/include/c++/11/bits/stl_construct.h:119:7: optimized:  Inlining LdapObject::LdapObject(const LdapObject&)/2455 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = LdapObject; _Args = {LdapObject&}]/2458.
/usr/include/c++/11/bits/stl_construct.h:119:7: note: Considering inline candidate void* operator new(std::size_t, void*)/74.
/usr/include/c++/11/bits/stl_construct.h:119:7: optimized:  Inlining void* operator new(std::size_t, void*)/74 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = LdapObject; _Args = {LdapObject&}]/2458.
/usr/include/c++/11/bits/stl_construct.h:119:48: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = LdapObject&]/2457.
/usr/include/c++/11/bits/stl_construct.h:119:48: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = LdapObject&]/2457 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = LdapObject; _Args = {LdapObject&}]/2458.
/usr/include/c++/11/bits/stl_uninitialized.h:97:21: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = LdapObject*]/2200.
/usr/include/c++/11/bits/stl_uninitialized.h:97:21: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = LdapObject*]/2200 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = LdapObject*; _ForwardIterator = LdapObject*; bool _TrivialValueTypes = false]/2352.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: note: Considering inline candidate void std::_Construct(_Tp*, _Args&& ...) [with _Tp = LdapObject; _Args = {LdapObject&}]/2458.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: optimized:  Inlining void std::_Construct(_Tp*, _Args&& ...) [with _Tp = LdapObject; _Args = {LdapObject&}]/2458 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = LdapObject*; _ForwardIterator = LdapObject*; bool _TrivialValueTypes = false]/2352.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = LdapObject]/2342.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = LdapObject]/2342 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = LdapObject*; _ForwardIterator = LdapObject*; bool _TrivialValueTypes = false]/2352.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: note: Considering inline candidate static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = LdapObject*; _ForwardIterator = LdapObject*; bool _TrivialValueTypes = false]/2352.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: missed:   will not early inline: _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = LdapObject*; _ForwardIterator = LdapObject*]/2212->static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = LdapObject*; _ForwardIterator = LdapObject*; bool _TrivialValueTypes = false]/2352, call is cold and code would grow at least by 34
/usr/include/c++/11/bits/stl_uninitialized.h:333:37: note: Considering inline candidate _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = LdapObject*; _ForwardIterator = LdapObject*]/2212.
/usr/include/c++/11/bits/stl_uninitialized.h:333:37: optimized:  Inlining _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = LdapObject*; _ForwardIterator = LdapObject*]/2212 into _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = LdapObject*; _ForwardIterator = LdapObject*; _Tp = LdapObject]/2055.
/usr/include/c++/11/bits/vector.tcc:245:35: note: Considering inline candidate _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = LdapObject*; _ForwardIterator = LdapObject*; _Tp = LdapObject]/2055.
/usr/include/c++/11/bits/vector.tcc:245:35: optimized:  Inlining _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = LdapObject*; _ForwardIterator = LdapObject*; _Tp = LdapObject]/2055 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
/usr/include/c++/11/bits/vector.tcc:245:63: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1832.
/usr/include/c++/11/bits/vector.tcc:245:63: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1832 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
/usr/include/c++/11/bits/vector.tcc:248:27: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2039.
/usr/include/c++/11/bits/vector.tcc:248:27: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2039 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
/usr/include/c++/11/bits/vector.tcc:243:17: note: Considering inline candidate _OI std::copy(_II, _II, _OI) [with _II = LdapObject*; _OI = LdapObject*]/2054.
/usr/include/c++/11/bits/vector.tcc:243:17: missed:   will not early inline: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831->_OI std::copy(_II, _II, _OI) [with _II = LdapObject*; _OI = LdapObject*]/2054, growth 8 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/vector.tcc:243:67: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1832.
/usr/include/c++/11/bits/vector.tcc:243:67: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1832 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
/usr/include/c++/11/bits/vector.tcc:238:21: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >; _Tp = LdapObject]/2053.
/usr/include/c++/11/bits/vector.tcc:238:21: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >; _Tp = LdapObject]/2053 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
/usr/include/c++/11/bits/vector.tcc:238:21: note: Considering inline candidate _OI std::copy(_II, _II, _OI) [with _II = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _OI = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >]/2051.
/usr/include/c++/11/bits/vector.tcc:238:21: optimized:  Inlining _OI std::copy(_II, _II, _OI) [with _II = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _OI = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >]/2051 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
/usr/include/c++/11/bits/vector.tcc:238:21: note: Considering inline candidate std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2046.
/usr/include/c++/11/bits/vector.tcc:238:21: optimized:  Inlining std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2046 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
/usr/include/c++/11/bits/vector.tcc:238:21: note: Considering inline candidate std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2047.
/usr/include/c++/11/bits/vector.tcc:238:21: optimized:  Inlining std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2047 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
/usr/include/c++/11/bits/vector.tcc:238:21: note: Considering inline candidate std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2050.
/usr/include/c++/11/bits/vector.tcc:238:21: optimized:  Inlining std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2050 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
/usr/include/c++/11/bits/vector.tcc:238:21: note: Considering inline candidate std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2052.
/usr/include/c++/11/bits/vector.tcc:238:21: optimized:  Inlining std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2052 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
/usr/include/c++/11/bits/vector.tcc:239:34: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2039.
/usr/include/c++/11/bits/vector.tcc:239:34: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2039 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
/usr/include/c++/11/bits/vector.tcc:236:17: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1832.
/usr/include/c++/11/bits/vector.tcc:236:17: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1832 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
/usr/include/c++/11/bits/vector.tcc:230:21: note: Considering inline candidate void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2043.
/usr/include/c++/11/bits/vector.tcc:230:21: optimized:  Inlining void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2043 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
/usr/include/c++/11/bits/vector.tcc:228:21: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = LdapObject*; _Tp = LdapObject]/2049.
/usr/include/c++/11/bits/vector.tcc:228:21: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = LdapObject*; _Tp = LdapObject]/2049 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
/usr/include/c++/11/bits/vector.tcc:229:27: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2039.
/usr/include/c++/11/bits/vector.tcc:229:27: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2039 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
/usr/include/c++/11/bits/vector.tcc:226:44: note: Considering inline candidate std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_M_allocate_and_copy(std::vector<_Tp, _Alloc>::size_type, _ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2048.
/usr/include/c++/11/bits/vector.tcc:226:44: missed:   will not early inline: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831->std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_M_allocate_and_copy(std::vector<_Tp, _Alloc>::size_type, _ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2048, call is cold and code would grow at least by 21
/usr/include/c++/11/bits/vector.tcc:226:44: note: Considering inline candidate std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2046.
/usr/include/c++/11/bits/vector.tcc:226:44: optimized:  Inlining std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2046 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
/usr/include/c++/11/bits/vector.tcc:226:44: note: Considering inline candidate std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2047.
/usr/include/c++/11/bits/vector.tcc:226:44: optimized:  Inlining std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2047 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
/usr/include/c++/11/bits/vector.tcc:224:25: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::capacity() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2045.
/usr/include/c++/11/bits/vector.tcc:224:25: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::capacity() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2045 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
/usr/include/c++/11/bits/vector.tcc:223:37: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1832.
/usr/include/c++/11/bits/vector.tcc:223:37: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1832 into std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
ldap.hpp:40:19: note: Considering inline candidate std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831.
ldap.hpp:40:19: missed:   will not early inline: void LdapOperation::set_results(const std::vector<LdapObject>&)/540->std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1831, call is cold and code would grow at least by 48
harness.cpp:66:1: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:66:1: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:66:1: note: Considering inline candidate std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1882.
harness.cpp:66:1: missed:   will not early inline: int main(int, char**)/1545->std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1882, growth 11 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:66:1: note: Considering inline candidate LdapOperation::~LdapOperation()/1532.
harness.cpp:66:1: optimized:  Inlining LdapOperation::~LdapOperation()/1532 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
harness.cpp:27:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:27:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
harness.cpp:27:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:27:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
harness.cpp:27:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:27:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:48:5: note: Considering inline candidate std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1882.
harness.cpp:48:5: missed:   will not early inline: int main(int, char**)/1545->std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1882, growth 11 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:48:5: note: Considering inline candidate LdapOperation::~LdapOperation()/1532.
harness.cpp:48:5: optimized:  Inlining LdapOperation::~LdapOperation()/1532 into int main(int, char**)/1545.
harness.cpp:48:5: note: Considering inline candidate std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1808.
harness.cpp:48:5: missed:   will not early inline: int main(int, char**)/1545->std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1808, growth 9 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:27:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
harness.cpp:27:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:27:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
harness.cpp:27:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:27:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
harness.cpp:27:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:27:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:38:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:38:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:37:76: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:37:76: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:36:80: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:36:80: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
harness.cpp:27:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
harness.cpp:27:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into int main(int, char**)/1545.
harness.cpp:66:1: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:66:1: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:66:1: note: Considering inline candidate std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1882.
harness.cpp:66:1: missed:   will not early inline: int main(int, char**)/1545->std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1882, growth 11 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:66:1: note: Considering inline candidate LdapOperation::~LdapOperation()/1532.
harness.cpp:66:1: optimized:  Inlining LdapOperation::~LdapOperation()/1532 into int main(int, char**)/1545.
harness.cpp:64:35: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1930.
harness.cpp:64:35: missed:   will not early inline: int main(int, char**)/1545->std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1930, growth 4 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:63:18: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1930.
harness.cpp:63:18: missed:   will not early inline: int main(int, char**)/1545->std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1930, growth 4 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:62:87: note: Considering inline candidate std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>]/1932.
harness.cpp:62:87: optimized:  Inlining std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>]/1932 into int main(int, char**)/1545.
harness.cpp:62:87: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000>]/1534.
harness.cpp:62:87: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000>]/1534 into int main(int, char**)/1545.
harness.cpp:62:71: note: Considering inline candidate constexpr std::chrono::__enable_if_is_duration<_ToDur> std::chrono::duration_cast(const std::chrono::duration<_Rep, _Period>&) [with _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _Rep = long int; _Period = std::ratio<1, 1000000000>]/1542.
harness.cpp:62:71: optimized:  Inlining constexpr std::chrono::__enable_if_is_duration<_ToDur> std::chrono::duration_cast(const std::chrono::duration<_Rep, _Period>&) [with _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _Rep = long int; _Period = std::ratio<1, 1000000000>]/1542 into int main(int, char**)/1545.
harness.cpp:62:77: note: Considering inline candidate constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1544.
harness.cpp:62:77: optimized:  Inlining constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1544 into int main(int, char**)/1545.
harness.cpp:61:18: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1930.
harness.cpp:61:18: optimized:  Inlining std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1930 into int main(int, char**)/1545.
harness.cpp:59:5: note: Considering inline candidate std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1808.
harness.cpp:59:5: missed:   will not early inline: int main(int, char**)/1545->std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1808, growth 9 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:58:26: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1931.
harness.cpp:58:26: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1931 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
harness.cpp:27:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:27:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
harness.cpp:27:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:27:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
harness.cpp:27:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:27:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:57:50: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900.
harness.cpp:57:50: missed:   will not early inline: int main(int, char**)/1545->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900, growth 6 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:57:50: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644.
harness.cpp:57:50: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644 into int main(int, char**)/1545.
harness.cpp:57:50: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900.
harness.cpp:57:50: missed:   will not early inline: int main(int, char**)/1545->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900, growth 6 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:57:50: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644.
harness.cpp:57:50: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644 into int main(int, char**)/1545.
harness.cpp:57:50: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900.
harness.cpp:57:50: missed:   will not early inline: int main(int, char**)/1545->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900, growth 6 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:57:50: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644.
harness.cpp:57:50: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644 into int main(int, char**)/1545.
harness.cpp:56:23: note: Considering inline candidate void LdapOperation::set_results(const std::vector<LdapObject>&)/540.
harness.cpp:56:23: optimized:  Inlining void LdapOperation::set_results(const std::vector<LdapObject>&)/540 into int main(int, char**)/1545.
harness.cpp:54:19: note: Considering inline candidate LdapOperation::LdapOperation()/1529.
harness.cpp:54:19: optimized:  Inlining LdapOperation::LdapOperation()/1529 into int main(int, char**)/1545.
harness.cpp:53:55: note: Considering inline candidate std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:53:55: missed:   will not early inline: int main(int, char**)/1545->std::vector<LdapObject> makeObjects(std::size_t)/1520, call is cold and code would grow at least by 194
harness.cpp:48:5: note: Considering inline candidate std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1882.
harness.cpp:48:5: missed:   will not early inline: int main(int, char**)/1545->std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1882, growth 11 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:48:5: note: Considering inline candidate LdapOperation::~LdapOperation()/1532.
harness.cpp:48:5: optimized:  Inlining LdapOperation::~LdapOperation()/1532 into int main(int, char**)/1545.
harness.cpp:48:5: note: Considering inline candidate std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1808.
harness.cpp:48:5: missed:   will not early inline: int main(int, char**)/1545->std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1808, growth 9 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:46:29: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1930.
harness.cpp:46:29: missed:   will not early inline: int main(int, char**)/1545->std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1930, growth 4 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:46:22: note: Considering inline candidate std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>]/1929.
harness.cpp:46:22: optimized:  Inlining std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>]/1929 into int main(int, char**)/1545.
harness.cpp:45:30: note: Considering inline candidate bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1926.
harness.cpp:45:30: optimized:  Inlining bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1926 into int main(int, char**)/1545.
harness.cpp:45:30: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1927.
harness.cpp:45:30: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1927 into int main(int, char**)/1545.
harness.cpp:45:51: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664.
harness.cpp:45:51: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1664 into int main(int, char**)/1545.
harness.cpp:45:30: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1928.
harness.cpp:45:30: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1928 into int main(int, char**)/1545.
harness.cpp:45:30: note: Considering inline candidate std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1925.
harness.cpp:45:30: optimized:  Inlining std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1925 into int main(int, char**)/1545.
harness.cpp:45:30: note: Considering inline candidate std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1924.
harness.cpp:45:30: optimized:  Inlining std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1924 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
harness.cpp:27:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:27:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
harness.cpp:27:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:27:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
harness.cpp:27:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:27:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:43:53: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900.
harness.cpp:43:53: missed:   will not early inline: int main(int, char**)/1545->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900, growth 6 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:43:53: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644.
harness.cpp:43:53: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644 into int main(int, char**)/1545.
harness.cpp:43:53: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900.
harness.cpp:43:53: missed:   will not early inline: int main(int, char**)/1545->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900, growth 6 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:43:53: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644.
harness.cpp:43:53: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644 into int main(int, char**)/1545.
harness.cpp:43:53: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900.
harness.cpp:43:53: missed:   will not early inline: int main(int, char**)/1545->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900, growth 6 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:43:53: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644.
harness.cpp:43:53: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644 into int main(int, char**)/1545.
harness.cpp:42:41: note: Considering inline candidate void LdapOperation::set_results(const std::vector<LdapObject>&)/540.
harness.cpp:42:41: optimized:  Inlining void LdapOperation::set_results(const std::vector<LdapObject>&)/540 into int main(int, char**)/1545.
harness.cpp:42:23: note: Considering inline candidate LdapOperation::LdapOperation()/1529.
harness.cpp:42:23: optimized:  Inlining LdapOperation::LdapOperation()/1529 into int main(int, char**)/1545.
harness.cpp:41:53: note: Considering inline candidate std::vector<LdapObject> makeObjects(std::size_t)/1520.
harness.cpp:41:53: missed:   will not early inline: int main(int, char**)/1545->std::vector<LdapObject> makeObjects(std::size_t)/1520, call is cold and code would grow at least by 194
harness.cpp:40:14: note: Considering inline candidate bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1917.
harness.cpp:40:14: optimized:  Inlining bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1917 into int main(int, char**)/1545.
harness.cpp:38:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:38:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:37:76: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:37:76: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:37:65: note: Considering inline candidate int std::__cxx11::stoi(const string&, std::size_t*, int)/475.
harness.cpp:37:65: optimized:  Inlining int std::__cxx11::stoi(const string&, std::size_t*, int)/475 into int main(int, char**)/1545.
harness.cpp:37:76: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1920.
harness.cpp:37:76: missed:   will not early inline: int main(int, char**)/1545->std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1920, growth 7 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:37:27: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1919.
harness.cpp:37:27: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1919 into int main(int, char**)/1545.
harness.cpp:36:80: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656.
harness.cpp:36:80: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1656 into int main(int, char**)/1545.
harness.cpp:36:69: note: Considering inline candidate long long unsigned int std::__cxx11::stoull(const string&, std::size_t*, int)/479.
harness.cpp:36:69: optimized:  Inlining long long unsigned int std::__cxx11::stoull(const string&, std::size_t*, int)/479 into int main(int, char**)/1545.
harness.cpp:36:80: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1920.
harness.cpp:36:80: missed:   will not early inline: int main(int, char**)/1545->std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1920, growth 7 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:36:27: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1919.
harness.cpp:36:27: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1919 into int main(int, char**)/1545.
harness.cpp:35:47: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1918.
harness.cpp:35:47: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1918 into int main(int, char**)/1545.
harness.cpp:35:22: note: Considering inline candidate bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1917.
harness.cpp:35:22: optimized:  Inlining bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1917 into int main(int, char**)/1545.
harness.cpp:34:45: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1918.
harness.cpp:34:45: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1918 into int main(int, char**)/1545.
harness.cpp:34:17: note: Considering inline candidate bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1917.
harness.cpp:34:17: optimized:  Inlining bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1917 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
harness.cpp:27:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into int main(int, char**)/1545.
harness.cpp:33:33: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900.
harness.cpp:33:33: missed:   will not early inline: int main(int, char**)/1545->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900, growth 8 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:33:33: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644.
harness.cpp:33:33: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644 into int main(int, char**)/1545.
harness.cpp:27:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647.
harness.cpp:27:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1647 into int main(int, char**)/1545.
harness.cpp:28:24: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900.
harness.cpp:28:24: missed:   will not early inline: int main(int, char**)/1545->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1900, growth 6 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:28:24: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644.
harness.cpp:28:24: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1644 into int main(int, char**)/1545.
harness.cpp:66:1: note: Considering inline candidate void __static_initialization_and_destruction_0(int, int)/2625.
harness.cpp:66:1: optimized:  Inlining void __static_initialization_and_destruction_0(int, int)/2625 into (static initializers for harness.cpp)/2778.
/usr/include/c++/11/bits/charconv.h:77:29: optimized: Semantic equality hit:constexpr const char __digits [201]/1659->constexpr const char __digits [201]/1665
/usr/include/c++/11/bits/charconv.h:77:29: optimized: Assembler symbol names:_ZZNSt8__detail18__to_chars_10_implIjEEvPcjT_E8__digits/1659->_ZZNSt8__detail18__to_chars_10_implImEEvPcjT_E8__digits/1665
/usr/include/c++/11/bits/basic_string.tcc:206:7: optimized: Semantic equality hit:void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2096->void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2338
/usr/include/c++/11/bits/basic_string.tcc:206:7: optimized: Assembler symbol names:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag/2096->_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag/2338
/usr/include/c++/11/bits/char_traits.h:389:25: missed:   not inlinable: operator==.isra/3209 -> int __builtin_memcmp(const void*, const void*, long unsigned int)/2812, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: operator=.isra/3208 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/char_traits.h:399:25: missed:   not inlinable: operator<<.isra/3207 -> long unsigned int __builtin_strlen(const char*)/2785, function body not available
/usr/include/c++/11/ostream:616:18: missed:   not inlinable: operator<<.isra/3207 -> std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char; _Traits = std::char_traits<char>]/2817, function body not available
/usr/include/c++/11/bits/stl_vector.h:1518:4: missed:   not inlinable: _M_allocate_and_copy.isra/3206 -> void* __builtin_eh_pointer(int)/2794, function body not available
/usr/include/c++/11/bits/stl_vector.h:1518:4: missed:   not inlinable: _M_allocate_and_copy.isra/3206 -> void* __cxa_begin_catch(void*)/2795, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_allocate_and_copy.isra/3206 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/stl_vector.h:1521:8: missed:   not inlinable: _M_allocate_and_copy.isra/3206 -> void __cxa_rethrow()/2796, function body not available
/usr/include/c++/11/bits/stl_vector.h:1518:4: missed:   not inlinable: _M_allocate_and_copy.isra/3206 -> void __cxa_end_catch()/2797, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_deallocate_nodes.isra/3204 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/hashtable.h:434:22: missed:   not inlinable: _M_assign.isra/3203 -> long int __builtin_expect(long int, long int)/2804, function body not available
/usr/include/c++/11/bits/hashtable.h:1323:2: missed:   not inlinable: _M_assign.isra/3203 -> void* __builtin_eh_pointer(int)/2794, function body not available
/usr/include/c++/11/bits/hashtable.h:1323:2: missed:   not inlinable: _M_assign.isra/3203 -> void* __cxa_begin_catch(void*)/2795, function body not available
/usr/include/c++/11/bits/hashtable.h:1325:11: missed:   not inlinable: _M_assign.isra/3203 -> void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2092, call is unlikely and code size would grow
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: _M_assign.isra/3203 -> long int __builtin_expect(long int, long int)/2804, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_assign.isra/3203 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/hashtable.h:1328:6: missed:   not inlinable: _M_assign.isra/3203 -> void __cxa_rethrow()/2796, function body not available
/usr/include/c++/11/bits/hashtable.h:1323:2: missed:   not inlinable: _M_assign.isra/3203 -> void __cxa_end_catch()/2797, function body not available
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed:   not inlinable: _M_construct.isra/3202 -> void std::__throw_logic_error(const char*)/2792, function body not available
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed:   not inlinable: _M_construct.isra/3202 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_create(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2793, function body not available
/usr/include/c++/11/bits/hashtable.h:1358:27: missed:   not inlinable: _M_move_assign.isra/3201 -> long int __builtin_expect(long int, long int)/2804, function body not available
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: _M_move_assign.isra/3201 -> long int __builtin_expect(long int, long int)/2804, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_move_assign.isra/3201 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: _M_move_assign.isra/3201 -> long int __builtin_expect(long int, long int)/2804, function body not available
/usr/include/c++/11/bits/char_traits.h:399:25: missed:   not inlinable: assign.isra/3200 -> long unsigned int __builtin_strlen(const char*)/2785, function body not available
/usr/include/c++/11/bits/basic_string.h:1459:19: missed:   not inlinable: assign.isra/3200 -> std::__cxx11::basic_string<_CharT, _Traits, _Allocator>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2784, function body not available
/usr/include/c++/11/bits/stl_vector.h:1518:4: missed:   not inlinable: _M_allocate_and_copy.isra/3199 -> void* __builtin_eh_pointer(int)/2794, function body not available
/usr/include/c++/11/bits/stl_vector.h:1518:4: missed:   not inlinable: _M_allocate_and_copy.isra/3199 -> void* __cxa_begin_catch(void*)/2795, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_allocate_and_copy.isra/3199 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/stl_vector.h:1521:8: missed:   not inlinable: _M_allocate_and_copy.isra/3199 -> void __cxa_rethrow()/2796, function body not available
/usr/include/c++/11/bits/stl_vector.h:1518:4: missed:   not inlinable: _M_allocate_and_copy.isra/3199 -> void __cxa_end_catch()/2797, function body not available
/usr/include/c++/11/bits/hashtable.h:1421:16: missed:   not inlinable: __uninit_copy.isra/3198 -> _M_assign.isra/3203, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed:   not inlinable: __uninit_copy.isra/3198 -> void* __builtin_eh_pointer(int)/2794, function body not available
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed:   not inlinable: __uninit_copy.isra/3198 -> void* __cxa_begin_catch(void*)/2795, function body not available
/usr/include/c++/11/bits/unordered_map.h:102:11: missed:   not inlinable: __uninit_copy.isra/3198 -> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1898, call is unlikely and code size would grow
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed:   not inlinable: __uninit_copy.isra/3198 -> void __cxa_rethrow()/2796, function body not available
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed:   not inlinable: __uninit_copy.isra/3198 -> void __cxa_end_catch()/2797, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:1929:23: missed:   not inlinable: _M_allocate_buckets.isra/3197 -> void* __builtin_memset(void*, int, long unsigned int)/2814, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed:   not inlinable: _M_allocate_node.isra/3196 -> void* __builtin_eh_pointer(int)/2794, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed:   not inlinable: _M_allocate_node.isra/3196 -> void* __cxa_begin_catch(void*)/2795, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_allocate_node.isra/3196 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:1886:6: missed:   not inlinable: _M_allocate_node.isra/3196 -> void __cxa_rethrow()/2796, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed:   not inlinable: _M_allocate_node.isra/3196 -> void __cxa_end_catch()/2797, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.isra/3194 -> long int __builtin_expect(long int, long int)/2804, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.isra/3194 -> void std::__throw_bad_array_new_length()/2805, function body not available
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.isra/3194 -> void std::__throw_bad_alloc()/2806, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.isra/3194 -> void* operator new(std::size_t)/2807, function body not available
/usr/include/c++/11/bits/hashtable.h:1421:16: missed:   not inlinable: __uninit_copy.isra/3193 -> _M_assign.isra/3203, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed:   not inlinable: __uninit_copy.isra/3193 -> void* __builtin_eh_pointer(int)/2794, function body not available
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed:   not inlinable: __uninit_copy.isra/3193 -> void* __cxa_begin_catch(void*)/2795, function body not available
/usr/include/c++/11/bits/unordered_map.h:102:11: missed:   not inlinable: __uninit_copy.isra/3193 -> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1898, call is unlikely and code size would grow
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed:   not inlinable: __uninit_copy.isra/3193 -> void __cxa_rethrow()/2796, function body not available
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed:   not inlinable: __uninit_copy.isra/3193 -> void __cxa_end_catch()/2797, function body not available
/usr/include/c++/11/bits/hashtable.h:434:22: missed:   not inlinable: _M_rehash_aux.isra/3192 -> long int __builtin_expect(long int, long int)/2804, function body not available
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: _M_rehash_aux.isra/3192 -> long int __builtin_expect(long int, long int)/2804, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_rehash_aux.isra/3192 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.isra/3191 -> long int __builtin_expect(long int, long int)/2804, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.isra/3191 -> void std::__throw_bad_array_new_length()/2805, function body not available
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.isra/3191 -> void std::__throw_bad_alloc()/2806, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.isra/3191 -> void* operator new(std::size_t)/2807, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.isra/3190 -> long int __builtin_expect(long int, long int)/2804, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.isra/3190 -> void std::__throw_bad_array_new_length()/2805, function body not available
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.isra/3190 -> void std::__throw_bad_alloc()/2806, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.isra/3190 -> void* operator new(std::size_t)/2807, function body not available
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed:   not inlinable: _M_construct.constprop/3189 -> void std::__throw_logic_error(const char*)/2792, function body not available
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed:   not inlinable: _M_construct.constprop/3189 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_create(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2793, function body not available
/usr/include/c++/11/bits/stl_vector.h:1770:24: missed:   not inlinable: _M_assign_aux.constprop/3188 -> void std::__throw_length_error(const char*)/2803, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_assign_aux.constprop/3188 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/basic_string.h:1387:17: missed:   not inlinable: _M_assign_aux.constprop/3188 -> void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_assign(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2815, function body not available
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:180:31: missed:   not inlinable: _M_assign_aux.constprop/3188 -> int __builtin_constant_p(...)/2811, function body not available
/usr/include/c++/11/bits/basic_string.h:1387:17: missed:   not inlinable: _M_assign_aux.constprop/3188 -> void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_assign(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2815, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.constprop/3186 -> long int __builtin_expect(long int, long int)/2804, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.constprop/3186 -> void __builtin_unreachable()/3187, unreachable
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.constprop/3186 -> void std::__throw_bad_alloc()/2806, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.constprop/3186 -> void* operator new(std::size_t)/2807, function body not available
/usr/include/c++/11/bits/char_traits.h:399:25: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3184 -> long unsigned int __builtin_strlen(const char*)/2785, function body not available
/usr/include/c++/11/bits/char_traits.h:399:25: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3183 -> long unsigned int __builtin_strlen(const char*)/2785, function body not available
/usr/include/c++/11/bits/char_traits.h:399:25: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3182 -> long unsigned int __builtin_strlen(const char*)/2785, function body not available
/usr/include/c++/11/bits/char_traits.h:399:25: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3181 -> long unsigned int __builtin_strlen(const char*)/2785, function body not available
/usr/include/c++/11/bits/char_traits.h:399:25: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3180 -> long unsigned int __builtin_strlen(const char*)/2785, function body not available
/usr/include/c++/11/bits/basic_ios.h:158:20: missed:   not inlinable: std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/2847 -> void std::basic_ios<_CharT, _Traits>::clear(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/2818, function body not available
/usr/include/c++/11/bits/char_traits.h:437:49: missed:   not inlinable: static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2842 -> void* __builtin_memcpy(void*, const void*, long unsigned int)/2798, function body not available
/usr/include/c++/11/iostream:74:25: missed:   not inlinable: (static initializers for harness.cpp)/2778 -> int __cxxabiv1::__cxa_atexit(void (*)(void*), void*, void*)/2820, function body not available
/usr/include/c++/11/iostream:74:25: missed:   not inlinable: (static initializers for harness.cpp)/2778 -> std::ios_base::Init::Init()/2819, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/2538 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2492 -> void __cxa_end_catch()/2797, function body not available
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2492 -> void __cxa_rethrow()/2796, function body not available
/usr/include/c++/11/bits/stl_construct.h:196:11: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2492 -> static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/2333, call is unlikely and code size would grow
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2492 -> void* __cxa_begin_catch(void*)/2795, function body not available
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2492 -> void* __builtin_eh_pointer(int)/2794, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/2460 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/hashtable.h:2363:7: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2378 -> void __cxa_end_catch()/2797, function body not available
/usr/include/c++/11/bits/hashtable.h:2368:4: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2378 -> void __cxa_rethrow()/2796, function body not available
/usr/include/c++/11/bits/hashtable.h:2363:7: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2378 -> void* __cxa_begin_catch(void*)/2795, function body not available
/usr/include/c++/11/bits/hashtable.h:2363:7: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2378 -> void* __builtin_eh_pointer(int)/2794, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed:   not inlinable: std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363 -> void __cxa_end_catch()/2797, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:140:5: missed:   not inlinable: std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363 -> void __cxa_rethrow()/2796, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed:   not inlinable: std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363 -> void* __cxa_begin_catch(void*)/2795, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed:   not inlinable: std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363 -> void* __builtin_eh_pointer(int)/2794, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/2333 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2331 -> void __cxa_end_catch()/2797, function body not available
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2331 -> void __cxa_rethrow()/2796, function body not available
/usr/include/c++/11/bits/stl_construct.h:196:11: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2331 -> static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/2333, call is unlikely and code size would grow
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2331 -> void* __cxa_begin_catch(void*)/2795, function body not available
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2331 -> void* __builtin_eh_pointer(int)/2794, function body not available
/usr/include/c++/11/bits/hashtable.h:2016:35: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2264 -> std::pair<bool, long unsigned int> std::__detail::_Prime_rehash_policy::_M_need_rehash(std::size_t, std::size_t, std::size_t) const/2813, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2262 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/basic_string.h:1960:19: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2234 -> std::__cxx11::basic_string<_CharT, _Traits, _Allocator>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2784, function body not available
/usr/include/c++/11/bits/basic_string.h:321:28: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2234 -> void std::__throw_out_of_range_fmt(const char*, ...)/2791, function body not available
/usr/include/c++/11/bits/hashtable.h:1323:2: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232 -> void __cxa_end_catch()/2797, function body not available
/usr/include/c++/11/bits/hashtable.h:1328:6: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232 -> void __cxa_rethrow()/2796, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232 -> long int __builtin_expect(long int, long int)/2804, function body not available
/usr/include/c++/11/bits/hashtable.h:1325:11: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232 -> void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2092, call is unlikely and code size would grow
/usr/include/c++/11/bits/hashtable.h:1323:2: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232 -> void* __cxa_begin_catch(void*)/2795, function body not available
/usr/include/c++/11/bits/hashtable.h:1323:2: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232 -> void* __builtin_eh_pointer(int)/2794, function body not available
/usr/include/c++/11/bits/hashtable.h:434:22: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232 -> long int __builtin_expect(long int, long int)/2804, function body not available
/usr/include/c++/11/bits/basic_string.h:321:28: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2119 -> void std::__throw_out_of_range_fmt(const char*, ...)/2791, function body not available
/usr/include/c++/11/bits/functional_hash.h:198:25: missed:   not inlinable: std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103 -> std::size_t std::_Hash_bytes(const void*, std::size_t, std::size_t)/2810, function body not available
/usr/include/c++/11/bits/hashtable.h:2321:23: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2092 -> void* __builtin_memset(void*, int, long unsigned int)/2814, function body not available
/usr/include/c++/11/bits/char_traits.h:399:25: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2074 -> long unsigned int __builtin_strlen(const char*)/2785, function body not available
/usr/include/c++/11/bits/hashtable.h:1267:2: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069 -> void __cxa_end_catch()/2797, function body not available
/usr/include/c++/11/bits/hashtable.h:1279:6: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069 -> void __cxa_rethrow()/2796, function body not available
/usr/include/c++/11/bits/hashtable.h:1277:22: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069 -> void* __builtin_memset(void*, int, long unsigned int)/2814, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069 -> long int __builtin_expect(long int, long int)/2804, function body not available
/usr/include/c++/11/bits/hashtable.h:1267:2: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069 -> void* __cxa_begin_catch(void*)/2795, function body not available
/usr/include/c++/11/bits/hashtable.h:1267:2: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069 -> void* __builtin_eh_pointer(int)/2794, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:119:33: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069 -> _M_deallocate_nodes.isra/3204, call is unlikely and code size would grow
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069 -> long int __builtin_expect(long int, long int)/2804, function body not available
/usr/include/c++/11/bits/hashtable.h:1263:15: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069 -> void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/hashtable.h:1253:20: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069 -> void* __builtin_memset(void*, int, long unsigned int)/2814, function body not available
/usr/include/c++/11/bits/hashtable.h:434:22: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069 -> long int __builtin_expect(long int, long int)/2804, function body not available
/usr/include/c++/11/bits/basic_string.h:321:28: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1920 -> void std::__throw_out_of_range_fmt(const char*, ...)/2791, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1897 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1897 -> long int __builtin_expect(long int, long int)/2804, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1882 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/stl_vector.h:1770:24: missed:   not inlinable: std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1879 -> void std::__throw_length_error(const char*)/2803, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1808 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1805 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/string_conversions.h:86:27: missed:   not inlinable: _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1615 -> void std::__throw_out_of_range(const char*)/2789, function body not available
/usr/include/c++/11/ext/string_conversions.h:83:31: missed:   not inlinable: _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1615 -> void std::__throw_invalid_argument(const char*)/2787, function body not available
/usr/include/c++/11/ext/string_conversions.h:63:27: missed:   not inlinable: _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1615 -> int* __errno_location()/2788, function body not available
/usr/include/c++/11/ext/string_conversions.h:86:27: missed:   not inlinable: _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1579 -> void std::__throw_out_of_range(const char*)/2789, function body not available
/usr/include/c++/11/ext/string_conversions.h:83:31: missed:   not inlinable: _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1579 -> void std::__throw_invalid_argument(const char*)/2787, function body not available
/usr/include/c++/11/ext/string_conversions.h:63:27: missed:   not inlinable: _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1579 -> int* __errno_location()/2788, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
harness.cpp:66:1: missed:   not inlinable: int main(int, char**)/1545 -> std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1883, call is unlikely and code size would grow
ldap.hpp:35:7: missed:   not inlinable: int main(int, char**)/1545 -> std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1883, call is unlikely and code size would grow
/usr/include/c++/11/bits/unordered_map.h:102:11: missed:   not inlinable: int main(int, char**)/1545 -> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1898, call is unlikely and code size would grow
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
harness.cpp:48:5: missed:   not inlinable: int main(int, char**)/1545 -> std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1883, call is unlikely and code size would grow
ldap.hpp:35:7: missed:   not inlinable: int main(int, char**)/1545 -> std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1883, call is unlikely and code size would grow
/usr/include/c++/11/bits/unordered_map.h:102:11: missed:   not inlinable: int main(int, char**)/1545 -> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1898, call is unlikely and code size would grow
harness.cpp:48:5: missed:   not inlinable: int main(int, char**)/1545 -> std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1809, call is unlikely and code size would grow
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
harness.cpp:66:1: missed:   not inlinable: int main(int, char**)/1545 -> std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1883, call is unlikely and code size would grow
ldap.hpp:35:7: missed:   not inlinable: int main(int, char**)/1545 -> std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1883, call is unlikely and code size would grow
/usr/include/c++/11/bits/unordered_map.h:102:11: missed:   not inlinable: int main(int, char**)/1545 -> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1898, call is unlikely and code size would grow
harness.cpp:63:18: missed:   not inlinable: int main(int, char**)/1545 -> operator<<.isra/3207, call is unlikely and code size would grow
/usr/include/c++/11/ostream:167:25: missed:   not inlinable: int main(int, char**)/1545 -> std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::_M_insert(_ValueT) [with _ValueT = long int; _CharT = char; _Traits = std::char_traits<char>]/2816, function body not available
/usr/include/c++/11/ostream:616:18: missed:   not inlinable: int main(int, char**)/1545 -> std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char; _Traits = std::char_traits<char>]/2817, function body not available
harness.cpp:60:25: missed:   not inlinable: int main(int, char**)/1545 -> static std::chrono::_V2::system_clock::time_point std::chrono::_V2::system_clock::now()/2781, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
harness.cpp:57:50: missed:   not inlinable: int main(int, char**)/1545 -> std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/2779, function body not available
ldap.hpp:40:19: missed:   not inlinable: int main(int, char**)/1545 -> operator=.isra/3208, --param max-inline-insns-auto limit reached
harness.cpp:53:55: missed:   not inlinable: int main(int, char**)/1545 -> std::vector<LdapObject> makeObjects(std::size_t)/1520, --param max-inline-insns-auto limit reached
harness.cpp:52:25: missed:   not inlinable: int main(int, char**)/1545 -> static std::chrono::_V2::system_clock::time_point std::chrono::_V2::system_clock::now()/2781, function body not available
harness.cpp:48:5: missed:   not inlinable: int main(int, char**)/1545 -> std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1883, call is unlikely and code size would grow
ldap.hpp:35:7: missed:   not inlinable: int main(int, char**)/1545 -> std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1883, call is unlikely and code size would grow
/usr/include/c++/11/bits/unordered_map.h:102:11: missed:   not inlinable: int main(int, char**)/1545 -> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1898, call is unlikely and code size would grow
harness.cpp:48:5: missed:   not inlinable: int main(int, char**)/1545 -> std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1809, call is unlikely and code size would grow
harness.cpp:46:29: missed:   not inlinable: int main(int, char**)/1545 -> operator<<.isra/3207, call is unlikely and code size would grow
/usr/include/c++/11/ostream:171:25: missed:   not inlinable: int main(int, char**)/1545 -> std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::_M_insert(_ValueT) [with _ValueT = long unsigned int; _CharT = char; _Traits = std::char_traits<char>]/2802, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
harness.cpp:43:53: missed:   not inlinable: int main(int, char**)/1545 -> std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/2779, function body not available
harness.cpp:43:53: missed:   not inlinable: int main(int, char**)/1545 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3180, call is unlikely and code size would grow
harness.cpp:43:53: missed:   not inlinable: int main(int, char**)/1545 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3181, call is unlikely and code size would grow
harness.cpp:43:53: missed:   not inlinable: int main(int, char**)/1545 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3182, call is unlikely and code size would grow
ldap.hpp:40:19: missed:   not inlinable: int main(int, char**)/1545 -> operator=.isra/3208, --param max-inline-insns-auto limit reached
harness.cpp:41:53: missed:   not inlinable: int main(int, char**)/1545 -> std::vector<LdapObject> makeObjects(std::size_t)/1520, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/basic_string.h:6250:27: missed:   not inlinable: int main(int, char**)/1545 -> int std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::compare(const _CharT*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2801, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
harness.cpp:37:76: missed:   not inlinable: int main(int, char**)/1545 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1920, call is unlikely and code size would grow
/usr/include/c++/11/bits/basic_string.h:2494:20: missed:   not inlinable: int main(int, char**)/1545 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2790, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1545 -> void operator delete(void*, std::size_t)/2799, function body not available
harness.cpp:36:80: missed:   not inlinable: int main(int, char**)/1545 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1920, call is unlikely and code size would grow
/usr/include/c++/11/bits/basic_string.h:2494:20: missed:   not inlinable: int main(int, char**)/1545 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2790, function body not available
/usr/include/c++/11/bits/basic_string.h:6250:27: missed:   not inlinable: int main(int, char**)/1545 -> int std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::compare(const _CharT*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2801, function body not available
/usr/include/c++/11/bits/basic_string.h:6250:27: missed:   not inlinable: int main(int, char**)/1545 -> int std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::compare(const _CharT*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2801, function body not available
harness.cpp:28:24: missed:   not inlinable: int main(int, char**)/1545 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3184, call is unlikely and code size would grow
harness.cpp:25:1: missed:   not inlinable: std::vector<LdapObject> makeObjects(std::size_t)/1520 -> std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1883, call is unlikely and code size would grow
/usr/include/c++/11/bits/unordered_map.h:102:11: missed:   not inlinable: std::vector<LdapObject> makeObjects(std::size_t)/1520 -> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1898, call is unlikely and code size would grow
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<LdapObject> makeObjects(std::size_t)/1520 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<LdapObject> makeObjects(std::size_t)/1520 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<LdapObject> makeObjects(std::size_t)/1520 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<LdapObject> makeObjects(std::size_t)/1520 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<LdapObject> makeObjects(std::size_t)/1520 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<LdapObject> makeObjects(std::size_t)/1520 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<LdapObject> makeObjects(std::size_t)/1520 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<LdapObject> makeObjects(std::size_t)/1520 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<LdapObject> makeObjects(std::size_t)/1520 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/unordered_map.h:984:20: missed:   not inlinable: std::vector<LdapObject> makeObjects(std::size_t)/1520 -> std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103, --param max-inline-insns-auto limit reached
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<LdapObject> makeObjects(std::size_t)/1520 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<LdapObject> makeObjects(std::size_t)/1520 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<LdapObject> makeObjects(std::size_t)/1520 -> void operator delete(void*, std::size_t)/2799, function body not available
/usr/include/c++/11/bits/unordered_map.h:984:20: missed:   not inlinable: std::vector<LdapObject> makeObjects(std::size_t)/1520 -> std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/basic_string.h:555:21: missed:   not inlinable: std::string std::__cxx11::to_string(long unsigned int)/488 -> void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2808, function body not available
/usr/include/c++/11/bits/basic_string.h:555:21: missed:   not inlinable: std::string std::__cxx11::to_string(int)/483 -> void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2808, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:744:5: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/3210 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103 which now has time 65.429920 and size 45, net change of -2.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.constprop/3211 into _M_allocate_node.isra/3195 which now has time 30.000000 and size 26, net change of -1.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.constprop/3186 into _M_allocate_node.isra/3196 which now has time 26.300000 and size 30, net change of -8.
harness.cpp:20:30: optimized:  Inlined operator+.constprop/3185 into std::vector<LdapObject> makeObjects(std::size_t)/1520 which now has time 8698.717575 and size 213, net change of -10.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.isra/3190 into _M_allocate_buckets.isra/3197 which now has time 30.900000 and size 18, net change of -8.
optimized:  Inlined static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3212 into _M_construct.constprop/3189 which now has time 28.402128 and size 37, net change of +2.
optimized:  Inlined static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2842 into _M_construct.isra/3202 which now has time 28.402128 and size 37, net change of -7.
harness.cpp:17:23: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3183 into std::vector<LdapObject> makeObjects(std::size_t)/1520 which now has time 8784.481216 and size 218, net change of -8.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.isra/3213 into void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2239 which now has time 17.145830 and size 20, net change of +5.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.isra/3214 into void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2177 which now has time 17.145830 and size 20, net change of +5.
/usr/include/c++/11/bits/stl_function.h:370:20: optimized:  Inlined operator==.isra/3209 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2322 which now has time 88.131875 and size 36, net change of -9.
harness.cpp:17:55: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3215 into std::vector<LdapObject> makeObjects(std::size_t)/1520 which now has time 8864.176666 and size 230, net change of +12.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.isra/3191 into _M_allocate_and_copy.isra/3199 which now has time 25.145830 and size 41, net change of -8.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.isra/3194 into _M_allocate_and_copy.isra/3206 which now has time 29.145830 and size 45, net change of -8.
harness.cpp:33:33: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3216 into int main(int, char**)/1545 which now has time 1550.575005 and size 437, net change of +8.
optimized:  Inlined std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/2847 into operator<<.isra/3207 which now has time 26.450000 and size 20, net change of -5.
harness.cpp:57:50: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3217 into int main(int, char**)/1545 which now has time 1607.179005 and size 442, net change of +5.
harness.cpp:57:50: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3218 into int main(int, char**)/1545 which now has time 1663.783007 and size 448, net change of +6.
harness.cpp:57:50: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3219 into int main(int, char**)/1545 which now has time 1720.387007 and size 453, net change of +5.
/usr/include/c++/11/bits/stl_vector.h:305:26: optimized:  Inlined void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/2239 into std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1879 which now has time 129.780917 and size 41, net change of -7.
/usr/include/c++/11/bits/stl_vector.h:305:26: optimized:  Inlined void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/2177 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1805 which now has time 42.645830 and size 47, net change of -7.
harness.cpp:17:52: optimized:  Inlined std::string std::__cxx11::to_string(long unsigned int)/488 into std::vector<LdapObject> makeObjects(std::size_t)/1520 which now has time 9721.132996 and size 249, net change of -8.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: optimized:  Inlined static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2331 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1805 which now has time 208.645832 and size 74, net change of -10.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: optimized:  Inlined __uninit_copy.isra/3193 into _M_allocate_and_copy.isra/3206 which now has time 236.600377 and size 80, net change of -9.
/usr/include/c++/11/bits/hashtable.h:1228:25: missed:   not inlinable: _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _OI = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >]/2207 -> void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/stl_algobase.h:620:7: optimized:  Inlined _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = __gnu_cxx::__normal_iterator<const LdapObject*, std::vector<LdapObject> >; _OI = __gnu_cxx::__normal_iterator<LdapObject*, std::vector<LdapObject> >]/2207 into operator=.isra/3208 which now has time 114.506050 and size 84, net change of -11.
harness.cpp:63:18: optimized:  Inlined operator<<.isra/3220 into int main(int, char**)/1545 which now has time 1724.017008 and size 457, net change of +4.
/usr/include/c++/11/bits/hashtable.h:1228:25: missed:   not inlinable: copy.isra/3205 -> void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/vector.tcc:243:17: optimized:  Inlined copy.isra/3205 into operator=.isra/3208 which now has time 141.397956 and size 92, net change of -7.
/usr/include/c++/11/bits/stl_pair.h:314:17: optimized:  Inlined std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1805 into std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/2538 which now has time 222.145832 and size 87, net change of -12.
/usr/include/c++/11/bits/hashtable.h:590:16: optimized:  Inlined _M_move_assign.isra/3201 into std::vector<LdapObject> makeObjects(std::size_t)/1520 which now has time 9992.218918 and size 277, net change of -18.
harness.cpp:46:29: optimized:  Inlined operator<<.isra/3222 into int main(int, char**)/1545 which now has time 1725.887009 and size 461, net change of +4.
/usr/include/c++/11/bits/hashtable.h:2028:29: optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2380 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2264 which now has time 49.745000 and size 48, net change of -10.
/usr/include/c++/11/bits/vector.tcc:309:40: optimized:  Inlined _M_allocate_and_copy.isra/3199 into _M_assign_aux.constprop/3188 which now has time 117.155406 and size 117, net change of -9.
/usr/include/c++/11/bits/basic_string.h:6693:33: optimized:  Inlined void std::__detail::__to_chars_10_impl(char*, unsigned int, _Tp) [with _Tp = long unsigned int]/1666 into std::string std::__cxx11::to_string(long unsigned int)/488 which now has time 11009.282974 and size 27, net change of -9.
harness.cpp:64:35: optimized:  Inlined operator<<.isra/3207 into int main(int, char**)/1545 which now has time 1727.121208 and size 465, net change of -16.
/usr/include/c++/11/ext/new_allocator.h:168:13: optimized:  Inlined std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/3224 into _M_deallocate_nodes.isra/3204 which now has time 292.994734 and size 18, net change of +7.
harness.cpp:14:39: optimized:  Inlined std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1879 into std::vector<LdapObject> makeObjects(std::size_t)/1520 which now has time 11121.565689 and size 331, net change of -10.
/usr/include/c++/11/bits/basic_string.h:6196:23: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3225 into operator+.constprop/3185 which now has time 12027.849442 and size 22, net change of +5.
/usr/include/c++/11/bits/hashtable.h:810:50: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2322 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103 which now has time 134.464773 and size 71, net change of -10.
/usr/include/c++/11/bits/hashtable.h:2021:13: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2264 -> void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2378, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/hashtable.h:2361:17: optimized:  Inlined _M_rehash_aux.isra/3192 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2378 which now has time 230.492732 and size 60, net change of -11.
/usr/include/c++/11/bits/basic_string.h:1728:22: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3226 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3225 which now has time 12027.797668 and size 13, net change of +10.
/usr/include/c++/11/bits/basic_string.h:690:28: optimized:  Inlined assign.isra/3227 into int main(int, char**)/1545 which now has time 1791.848482 and size 473, net change of +8.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: optimized:  Inlined __uninit_copy.isra/3198 into operator=.isra/3208 which now has time 190.046048 and size 127, net change of -7.
/usr/include/c++/11/bits/hashtable.h:304:35: optimized:  Inlined _M_allocate_node.isra/3195 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103 which now has time 140.433774 and size 88, net change of -9.
/usr/include/c++/11/bits/basic_string.h:690:28: optimized:  Inlined assign.isra/3200 into int main(int, char**)/1545 which now has time 1824.212120 and size 480, net change of -7.
/usr/include/c++/11/bits/vector.tcc:226:44: optimized:  Inlined _M_allocate_and_copy.isra/3206 into operator=.isra/3208 which now has time 240.311735 and size 196, net change of -11.
/usr/include/c++/11/bits/hashtable_policy.h:741:30: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2264 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103 which now has time 154.081295 and size 122, net change of -14.
/usr/include/c++/11/bits/basic_string.h:6196:23: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3228 into std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1869 which now has time 41.700000 and size 27, net change of +5.
/usr/include/c++/11/ext/string_conversions.h:80:34: optimized: converting indirect call in _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1615 to direct call to long long unsigned int strtoull(const char*, char**, int)/2786
/usr/include/c++/11/ext/string_conversions.h:80:34: missed:   not inlinable: _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1615 -> long long unsigned int strtoull(const char*, char**, int)/2786, function body not available
/usr/include/c++/11/bits/basic_string.h:6640:29: optimized:  Inlined _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}]/1615 into int main(int, char**)/1545 which now has time 1843.939369 and size 501, net change of -16.
/usr/include/c++/11/bits/stl_pair.h:211:12: optimized:  Inlined std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/3229 into std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/3224 which now has time 393.454699 and size 13, net change of +9.
/usr/include/c++/11/bits/basic_string.h:6196:23: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2074 into std::__cxx11::basic_string<_CharT, _Traits, _Allocator> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3215 which now has time 12141.070389 and size 22, net change of +5.
/usr/include/c++/11/bits/basic_string.h:1728:22: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3230 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2074 which now has time 12141.063919 and size 13, net change of +9.
/usr/include/c++/11/bits/basic_string.h:1728:22: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2234 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3228 which now has time 46.199200 and size 13, net change of +10.
/usr/include/c++/11/ext/new_allocator.h:168:13: optimized:  Inlined std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/3231 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2262 which now has time 22.494555 and size 18, net change of +7.
/usr/include/c++/11/bits/stl_construct.h:196:11: optimized:  Inlined static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/3232 into std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/3229 which now has time 1195.363983 and size 16, net change of +8.
/usr/include/c++/11/ext/string_conversions.h:80:34: optimized: converting indirect call in _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1579 to direct call to long int strtol(const char*, char**, int)/2800
/usr/include/c++/11/ext/string_conversions.h:80:34: missed:   not inlinable: _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1579 -> long int strtol(const char*, char**, int)/2800, function body not available
/usr/include/c++/11/bits/basic_string.h:6620:40: optimized:  Inlined _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1579 into int main(int, char**)/1545 which now has time 1851.450945 and size 525, net change of -16.
/usr/include/c++/11/ext/new_allocator.h:168:13: optimized:  Inlined std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/2460 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363 which now has time 30.856102 and size 45, net change of -6.
harness.cpp:20:46: optimized:  Inlined std::string std::__cxx11::to_string(int)/3233 into std::vector<LdapObject> makeObjects(std::size_t)/1520 which now has time 19282.965179 and size 385, net change of +25.
/usr/include/c++/11/bits/basic_string.h:6666:33: optimized:  Inlined void std::__detail::__to_chars_10_impl(char*, unsigned int, _Tp) [with _Tp = unsigned int]/3234 into std::string std::__cxx11::to_string(int)/3233 which now has time 27420.392883 and size 32, net change of +23.
harness.cpp:20:71: optimized:  Inlined std::string std::__cxx11::to_string(int)/483 into std::vector<LdapObject> makeObjects(std::size_t)/1520 which now has time 34562.294128 and size 433, net change of -7.
/usr/include/c++/11/bits/basic_string.h:6666:33: optimized:  Inlined void std::__detail::__to_chars_10_impl(char*, unsigned int, _Tp) [with _Tp = unsigned int]/1660 into std::string std::__cxx11::to_string(int)/483 which now has time 42699.721802 and size 32, net change of -9.
/usr/include/c++/11/bits/stl_construct.h:196:11: optimized:  Inlined static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/3235 into std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1808 which now has time 126.528783 and size 24, net change of +8.
/usr/include/c++/11/bits/hashtable.h:1532:12: optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/3236 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1897 which now has time 46.200000 and size 22, net change of +9.
/usr/include/c++/11/bits/hashtable.h:1314:24: optimized:  Inlined std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/3237 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232 which now has time 309.504728 and size 116, net change of +37.
/usr/include/c++/11/bits/stl_pair.h:211:12: optimized:  Inlined std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/3239 into std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/3238 which now has time 649.647365 and size 13, net change of +17.
/usr/include/c++/11/bits/hashtable_policy.h:744:5: missed:   not inlinable: std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Pair = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2103 -> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2263, call is unlikely and code size would grow
/usr/include/c++/11/bits/stl_pair.h:211:12: optimized:  Inlined std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/3241 into std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/3231 which now has time 82.128995 and size 13, net change of +17.
/usr/include/c++/11/bits/hashtable.h:440:47: optimized:  Inlined _M_allocate_buckets.isra/3243 into _M_rehash_aux.isra/3192 which now has time 244.802732 and size 46, net change of +11.
/usr/include/c++/11/bits/hashtable.h:2320:32: optimized:  Inlined _M_deallocate_nodes.isra/3245 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2092 which now has time 1214.363981 and size 45, net change of +29.
harness.cpp:59:5: optimized:  Inlined std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/3249 into int main(int, char**)/1545 which now has time 2447.014656 and size 542, net change of +17.
/usr/include/c++/11/bits/stl_pair.h:211:12: optimized:  Inlined std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/3251 into std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/2460 which now has time 91.739665 and size 13, net change of +17.
/usr/include/c++/11/bits/unordered_map.h:102:11: missed:   not inlinable: operator=.isra/3208 -> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1898, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/unordered_map.h:102:11: missed:   not inlinable: operator=.isra/3208 -> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1898, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/unordered_map.h:102:11: missed:   not inlinable: std::vector<LdapObject> makeObjects(std::size_t)/1520 -> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1898, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/unordered_map.h:102:11: missed:   not inlinable: std::vector<_Tp, _Alloc>::~vector() [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/1882 -> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1898, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/hashtable.h:2320:32: optimized:  Inlined _M_deallocate_nodes.isra/3253 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/3236 which now has time 1227.563982 and size 16, net change of +29.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlined std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/3257 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/3237 which now has time 1279.879814 and size 45, net change of +78.
/usr/include/c++/11/bits/hashtable.h:1361:32: optimized:  Inlined _M_deallocate_nodes.isra/3262 into _M_move_assign.isra/3201 which now has time 51302.199524 and size 46, net change of +29.
/usr/include/c++/11/bits/hashtable.h:440:47: optimized:  Inlined _M_allocate_buckets.isra/3266 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069 which now has time 82.236936 and size 104, net change of +11.
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed:   not inlinable: std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/3237 -> _M_allocate_node.isra/3196, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/hashtable_policy.h:168:32: missed:   not inlinable: _M_assign.isra/3203 -> _M_allocate_node.isra/3196, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/hashtable_policy.h:168:32: missed:   not inlinable: _M_assign.isra/3203 -> _M_allocate_node.isra/3196, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed:   not inlinable: std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363 -> _M_allocate_node.isra/3196, --param max-inline-insns-auto limit reached
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlined std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/3268 into _M_allocate_node.isra/3196 which now has time 232.945832 and size 109, net change of +79.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/3273 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2492 which now has time 266.166554 and size 61, net change of +26.
/usr/include/c++/11/bits/stl_construct.h:196:11: optimized:  Inlined static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/3275 into _M_assign_aux.constprop/3188 which now has time 166.691775 and size 125, net change of +8.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/3276 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/3261 which now has time 1536.572592 and size 37, net change of +26.
/usr/include/c++/11/bits/stl_vector.h:732:21: optimized:  Inlined _M_assign_aux.constprop/3278 into std::vector<LdapObject> makeObjects(std::size_t)/1520 which now has time 60635.191345 and size 589, net change of +104.
/usr/include/c++/11/bits/stl_construct.h:196:11: optimized:  Inlined static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/3282 into _M_assign_aux.constprop/3278 which now has time 61492.849609 and size 125, net change of +8.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: optimized:  Inlined static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/3283 into _M_allocate_and_copy.isra/3280 which now has time 69619.175049 and size 41, net change of +54.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: optimized:  Inlined static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/3286 into _M_assign_aux.constprop/3278 which now has time 73667.780151 and size 125, net change of +53.
/usr/include/c++/11/bits/hashtable_policy.h:119:33: optimized:  Inlined _M_deallocate_nodes.isra/3289 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2069 which now has time 1263.600918 and size 133, net change of +29.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/3293 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2331 which now has time 306.312384 and size 37, net change of +26.
/usr/include/c++/11/bits/hashtable.h:440:47: optimized:  Inlined _M_allocate_buckets.isra/3295 into _M_assign.isra/3203 which now has time 249.587129 and size 92, net change of +11.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/3297 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/3272 which now has time 317.112384 and size 37, net change of +26.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlined std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/2538 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363 which now has time 250.494146 and size 167, net change of -8.
/usr/include/c++/11/bits/stl_construct.h:196:11: optimized:  Inlined static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/3299 into _M_assign_aux.constprop/3188 which now has time 179.940622 and size 133, net change of +8.
/usr/include/c++/11/bits/hashtable.h:440:47: optimized:  Inlined _M_allocate_buckets.isra/3197 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232 which now has time 1540.865591 and size 248, net change of -7.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: optimized:  Inlined static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/3300 into _M_allocate_and_copy.isra/3199 which now has time 305.473666 and size 41, net change of +54.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/3303 into std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/3257 which now has time 1572.591663 and size 87, net change of +26.
/usr/include/c++/11/bits/basic_string.h:539:14: optimized:  Inlined _M_construct.isra/3305 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3180 which now has time 33.901288 and size 33, net change of +20.
harness.cpp:43:53: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3180 into int main(int, char**)/1545 which now has time 2453.271095 and size 568, net change of -7.
/usr/include/c++/11/bits/basic_string.h:539:14: optimized:  Inlined _M_construct.isra/3307 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3181 which now has time 33.901288 and size 33, net change of +20.
harness.cpp:43:53: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3181 into int main(int, char**)/1545 which now has time 2459.527534 and size 593, net change of -8.
/usr/include/c++/11/bits/basic_string.h:539:14: optimized:  Inlined _M_construct.isra/3309 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3182 which now has time 33.901288 and size 33, net change of +20.
harness.cpp:43:53: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3182 into int main(int, char**)/1545 which now has time 2465.783974 and size 619, net change of -7.
/usr/include/c++/11/bits/stl_vector.h:732:21: missed:   not inlinable: std::vector<LdapObject> makeObjects(std::size_t)/1520 -> _M_assign_aux.constprop/3188, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: optimized:  Inlined static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/2492 into _M_assign_aux.constprop/3188 which now has time 368.015305 and size 240, net change of -8.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/3311 into std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/3268 which now has time 327.514991 and size 87, net change of +26.
/usr/include/c++/11/bits/basic_string.h:539:14: optimized:  Inlined _M_construct.isra/3313 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3184 which now has time 38.502608 and size 41, net change of +26.
harness.cpp:28:24: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3184 into int main(int, char**)/1545 which now has time 2484.185265 and size 644, net change of -16.
/usr/include/c++/11/bits/basic_string.h:539:14: optimized:  Inlined _M_construct.isra/3315 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3183 which now has time 73730.899780 and size 13, net change of +20.
/usr/include/c++/11/bits/hashtable.h:1306:20: optimized:  Inlined std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/2363 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/2232 which now has time 1734.509871 and size 432, net change of -9.
/usr/include/c++/11/bits/basic_string.h:539:14: optimized:  Inlined _M_construct.isra/3317 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3216 which now has time 2568.351818 and size 15, net change of +26.
/usr/include/c++/11/bits/basic_string.h:539:14: optimized:  Inlined _M_construct.isra/3319 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3219 which now has time 2610.010689 and size 13, net change of +20.
/usr/include/c++/11/bits/basic_string.h:539:14: optimized:  Inlined _M_construct.isra/3321 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3217 which now has time 2651.669563 and size 13, net change of +20.
/usr/include/c++/11/bits/basic_string.h:539:14: optimized:  Inlined _M_construct.isra/3323 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/3218 which now has time 2693.328438 and size 13, net change of +20.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/3189 into std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/2538 which now has time 1738.431070 and size 113, net change of -11.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.isra/3202 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2119 which now has time 35.396047 and size 48, net change of -37.
/usr/include/c++/11/bits/basic_string.h:2856:52: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2119 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1920 which now has time 36.888888 and size 55, net change of +0.
Unit growth for small function inlining: 2401->3195 (33%)

Inlined 866 calls, eliminated 408 functions

/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_14, _17);
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_vector.h:678:7: note: vectorized 0 loops in function.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_14, _17);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_14, _17);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_28, _9);
/usr/include/c++/11/bits/stl_vector.h:683:7: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:683:7: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_33, _36);
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable.h:1528:5: note: vectorized 0 loops in function.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_33, _36);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_33, _36);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_54, _31);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_22, _25);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_3, 72);
/usr/include/c++/11/bits/hashtable.h:2321:23: missed: statement clobbers memory: __builtin_memset (_17, 0, _16);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_6, _11);
/usr/include/c++/11/bits/hashtable.h:1534:5: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:1534:5: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/unordered_map.h:102:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (_11);
/usr/include/c++/11/bits/stl_vector.h:678:7: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/unordered_map.h:102:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (_11);
/usr/include/c++/11/bits/unordered_map.h:102:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (_11);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_24, _9);
/usr/include/c++/11/bits/stl_vector.h:683:7: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:683:7: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_26, _29);
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable.h:2316:5: note: vectorized 0 loops in function.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_26, _29);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_26, _29);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_51, _24);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_15, _18);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_49, 72);
/usr/include/c++/11/bits/hashtable.h:2321:23: missed: statement clobbers memory: __builtin_memset (_3, 0, _2);
/usr/include/c++/11/bits/hashtable.h:2325:5: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:2325:5: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_22, _25);
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable.h:308:2: note: vectorized 0 loops in function.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_22, _25);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_22, _25);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_41, _20);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_11, _14);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_1, 72);
/usr/include/c++/11/bits/hashtable.h:308:68: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:308:68: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_6, _10);
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_construct.h:160:2: note: vectorized 0 loops in function.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_6, _10);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_6, _10);
/usr/include/c++/11/bits/stl_construct.h:164:2: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_construct.h:164:2: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/basic_string.h:456:7: missed: couldn't vectorize loop
/usr/include/c++/11/bits/basic_string.h:456:7: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable_policy.h:1870:7: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_43, _67, _68);
/usr/include/c++/11/bits/hashtable_policy.h:1870:7: missed: splitting region at control altering definition _32 = std::__cxx11::basic_string<char>::_M_create (_3, &__dnew, 0);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _29 = operator new (72);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _32 = std::__cxx11::basic_string<char>::_M_create (_3, &__dnew, 0);
/usr/include/c++/11/bits/hashtable_policy.h:219:34: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable_policy.h:219:34: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/hashtable_policy.h:219:34: note: ***** Re-trying analysis with vector mode V8QI
/usr/include/c++/11/bits/hashtable_policy.h:219:34: note: ***** Analysis failed with vector mode V8QI
/usr/include/c++/11/bits/hashtable_policy.h:219:34: missed: splitting region at dominance boundary bb7
/usr/include/c++/11/bits/hashtable_policy.h:219:34: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:219:34: missed: splitting region at dominance boundary bb11
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb12
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_44, _17, _18);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at control altering definition _62 = operator new (_25);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: not vectorized: statement can throw an exception: _62 = operator new (_25);
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:98:4: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0xc6ed218 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)_29 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)_29 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)_29 + 40B]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0xc6ed290
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0xc6ed290 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis for part in loop 0:
  Vector cost: 24
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0xc6ed218 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)_29 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)_29 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)_29 + 40B]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0xc6ed290
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0xc6ed290 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_impl_data *)_29 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vect_is_simple_use: operand 0B, type of def: constant
/usr/include/c++/11/bits/stl_vector.h:98:4: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:98:4: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_impl_data *)_29 + 40B]._M_start
/usr/include/c++/11/bits/stl_vector.h:98:4: note: created vectp.711_31
/usr/include/c++/11/bits/stl_vector.h:98:4: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)vectp.711_31] = { 0, 0 };
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:98:4: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb21
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb22
/usr/include/c++/11/bits/stl_iterator.h:1028:9: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_iterator.h:1028:9: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_iterator.h:1028:9: missed: splitting region at control altering definition _78 = std::__cxx11::basic_string<char>::_M_create (__cur_126, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _78 = std::__cxx11::basic_string<char>::_M_create (__cur_126, &__dnew, 0);
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:361:25: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node 0xc6ed218 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: op template: MEM[(struct _Vector_base *)_29 + 40B]._M_impl.D.64419._M_start = iftmp.64_55;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 0 MEM[(struct _Vector_base *)_29 + 40B]._M_impl.D.64419._M_start = iftmp.64_55;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 1 MEM[(struct _Vector_base *)_29 + 40B]._M_impl.D.64419._M_finish = iftmp.64_55;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	children 0xc6ed290
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node (external) 0xc6ed290 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	{ iftmp.64_55, iftmp.64_55 }
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Cost model analysis for part in loop 0:
  Vector cost: 16
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node 0xc6ed218 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: op template: MEM[(struct _Vector_base *)_29 + 40B]._M_impl.D.64419._M_start = iftmp.64_55;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 0 MEM[(struct _Vector_base *)_29 + 40B]._M_impl.D.64419._M_start = iftmp.64_55;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 1 MEM[(struct _Vector_base *)_29 + 40B]._M_impl.D.64419._M_finish = iftmp.64_55;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	children 0xc6ed290
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node (external) 0xc6ed290 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	{ iftmp.64_55, iftmp.64_55 }
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_base *)_29 + 40B]._M_impl.D.64419._M_start = iftmp.64_55;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: vect_is_simple_use: operand iftmp.64_55 = PHI <0B(13), _62(21)>, type of def: external
/usr/include/c++/11/bits/stl_vector.h:361:25: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:361:25: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_base *)_29 + 40B]._M_impl.D.64419._M_start
/usr/include/c++/11/bits/stl_vector.h:361:25: note: created vectp.713_56
/usr/include/c++/11/bits/stl_vector.h:361:25: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)vectp.713_56] = _37;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:361:25: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:361:25: missed: splitting region at dominance boundary bb28
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:361:25: missed: splitting region at dominance boundary bb32
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb33
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_43, _67, _68);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at loop 1 exit at bb57
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: splitting region at dominance boundary bb34
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: splitting region at dominance boundary bb51
/usr/include/c++/11/bits/hashtable_policy.h:1881:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable_policy.h:1881:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable_policy.h:1881:13: missed: splitting region at dominance boundary bb24
/usr/include/c++/11/bits/hashtable_policy.h:1881:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:1881:13: missed: splitting region at dominance boundary bb36
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb15
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: _74 = __builtin_eh_pointer (8);
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_begin_catch (_74);
/usr/include/c++/11/bits/stl_construct.h:196:11: missed: statement clobbers memory: std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char>*> (iftmp.64_55, __cur_34);
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/hashtable_policy.h:1870:7: missed: not vectorized: statement can throw an exception: resx 7
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_50, _52);
/usr/include/c++/11/bits/hashtable_policy.h:1870:7: missed: not vectorized: statement can throw an exception: resx 5
/usr/include/c++/11/bits/stl_vector.h:337:7: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:337:7: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_vector.h:337:7: missed: splitting region at dominance boundary bb43
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: not vectorized: statement can throw an exception: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: not vectorized: statement can throw an exception: std::__throw_bad_array_new_length ();
/usr/include/c++/11/ext/new_allocator.h:116:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: splitting region at dominance boundary bb3
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_22, _24);
/usr/include/c++/11/bits/hashtable_policy.h:1870:7: missed: not vectorized: statement can throw an exception: resx 4
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb48
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed: statement clobbers memory: _5 = __builtin_eh_pointer (3);
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed: statement clobbers memory: __cxa_begin_catch (_5);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_29, 72);
/usr/include/c++/11/bits/hashtable_policy.h:1886:6: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/ext/aligned_buffer.h:104:46: missed: couldn't vectorize loop
/usr/include/c++/11/ext/aligned_buffer.h:104:46: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable.h:1289:7: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/hashtable_policy.h:168:32: missed: statement clobbers memory: _27 = std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >::_M_allocate_node.isra (_25);
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: splitting region at control altering definition _15 = std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >::_M_allocate_node.isra (_12);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _76 = operator new (_75);
/usr/include/c++/11/bits/hashtable_policy.h:1929:23: missed: statement clobbers memory: __builtin_memset (_76, 0, _75);
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: statement clobbers memory: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: statement clobbers memory: std::__throw_bad_array_new_length ();
/usr/include/c++/11/bits/hashtable_policy.h:168:32: missed: not vectorized: statement can throw an exception: _15 = std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >::_M_allocate_node.isra (_12);
/usr/include/c++/11/bits/hashtable_policy.h:168:32: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable_policy.h:168:32: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable_policy.h:168:32: missed: splitting region at dominance boundary bb13
/usr/include/c++/11/bits/hashtable_policy.h:168:32: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:168:32: missed: splitting region at control altering definition _27 = std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >::_M_allocate_node.isra (_25);
/usr/include/c++/11/bits/hashtable_policy.h:168:32: missed: not vectorized: statement can throw an exception: _27 = std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >::_M_allocate_node.isra (_25);
/usr/include/c++/11/bits/hashtable_policy.h:168:32: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable_policy.h:168:32: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable_policy.h:168:32: missed: splitting region at dominance boundary bb21
/usr/include/c++/11/bits/hashtable_policy.h:168:32: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:168:32: missed: splitting region at dominance boundary bb16
/usr/include/c++/11/bits/hashtable.h:1323:2: missed: statement clobbers memory: _37 = __builtin_eh_pointer (3);
/usr/include/c++/11/bits/hashtable.h:1323:2: missed: statement clobbers memory: __cxa_begin_catch (_37);
/usr/include/c++/11/bits/hashtable.h:1325:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear (this_1(D));
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_40, _45);
/usr/include/c++/11/bits/hashtable.h:1328:6: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/hashtable.h:1323:2: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/hashtable.h:1323:2: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:1323:2: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:1323:2: missed: splitting region at dominance boundary bb19
/usr/include/c++/11/bits/hashtable.h:1312:39: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:1312:39: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:1312:39: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_193, _196);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_104, _107);
/usr/include/c++/11/bits/hashtable_policy.h:125:8: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:125:8: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/usr/include/c++/11/bits/basic_string.h:456:7: missed: couldn't vectorize loop
/usr/include/c++/11/bits/basic_string.h:456:7: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/basic_string.h:456:7: missed: couldn't vectorize loop
/usr/include/c++/11/bits/basic_string.h:456:7: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable.h:1289:7: note: vectorized 0 loops in function.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_104, _107);
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_278, _146, _147);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_193, _196);
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_35, _235, _236);
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: splitting region at control altering definition _79 = std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >::_M_allocate_node.isra (_22);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _74 = operator new (_73);
/usr/include/c++/11/bits/hashtable_policy.h:1929:23: missed: statement clobbers memory: __builtin_memset (_74, 0, _73);
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: statement clobbers memory: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: statement clobbers memory: std::__throw_bad_array_new_length ();
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed: not vectorized: statement can throw an exception: _79 = std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >::_M_allocate_node.isra (_22);
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed: splitting region at dominance boundary bb167
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed: splitting region at dominance boundary bb14
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed: splitting region at control altering definition _111 = std::__cxx11::basic_string<char>::_M_create (_77, &__dnew, 0);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_104, _107);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_409, _102);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_93, _96);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _111 = std::__cxx11::basic_string<char>::_M_create (_77, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb28
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb32
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb33
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_221, _84, _85);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at control altering definition _141 = operator new (_68);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: not vectorized: statement can throw an exception: _141 = operator new (_68);
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:98:4: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0xc7abb88 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)_75 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)_75 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)_75 + 40B]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0xc7abc00
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0xc7abc00 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis for part in loop 0:
  Vector cost: 24
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0xc7abb88 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)_75 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)_75 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)_75 + 40B]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0xc7abc00
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0xc7abc00 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_impl_data *)_75 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vect_is_simple_use: operand 0B, type of def: constant
/usr/include/c++/11/bits/stl_vector.h:98:4: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:98:4: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_impl_data *)_75 + 40B]._M_start
/usr/include/c++/11/bits/stl_vector.h:98:4: note: created vectp.736_486
/usr/include/c++/11/bits/stl_vector.h:98:4: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)vectp.736_486] = { 0, 0 };
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:98:4: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb160
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb42
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at control altering definition _157 = std::__cxx11::basic_string<char>::_M_create (__cur_290, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _157 = std::__cxx11::basic_string<char>::_M_create (__cur_290, &__dnew, 0);
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:361:25: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node 0xc7abb88 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: op template: MEM[(struct _Vector_base *)_75 + 40B]._M_impl.D.64419._M_start = iftmp.64_134;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 0 MEM[(struct _Vector_base *)_75 + 40B]._M_impl.D.64419._M_start = iftmp.64_134;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 1 MEM[(struct _Vector_base *)_75 + 40B]._M_impl.D.64419._M_finish = iftmp.64_134;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	children 0xc7abc00
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node (external) 0xc7abc00 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	{ iftmp.64_134, iftmp.64_134 }
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Cost model analysis for part in loop 0:
  Vector cost: 16
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node 0xc7abb88 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: op template: MEM[(struct _Vector_base *)_75 + 40B]._M_impl.D.64419._M_start = iftmp.64_134;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 0 MEM[(struct _Vector_base *)_75 + 40B]._M_impl.D.64419._M_start = iftmp.64_134;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 1 MEM[(struct _Vector_base *)_75 + 40B]._M_impl.D.64419._M_finish = iftmp.64_134;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	children 0xc7abc00
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node (external) 0xc7abc00 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	{ iftmp.64_134, iftmp.64_134 }
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_base *)_75 + 40B]._M_impl.D.64419._M_start = iftmp.64_134;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: vect_is_simple_use: operand iftmp.64_134 = PHI <0B(34), _141(160)>, type of def: external
/usr/include/c++/11/bits/stl_vector.h:361:25: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:361:25: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_base *)_75 + 40B]._M_impl.D.64419._M_start
/usr/include/c++/11/bits/stl_vector.h:361:25: note: created vectp.738_477
/usr/include/c++/11/bits/stl_vector.h:361:25: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)vectp.738_477] = _478;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:361:25: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:361:25: missed: splitting region at dominance boundary bb48
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:361:25: missed: splitting region at dominance boundary bb52
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb53
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_278, _146, _147);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at loop 3 exit at bb164
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: splitting region at dominance boundary bb54
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: splitting region at dominance boundary bb68
/usr/include/c++/11/bits/stl_vector.h:557:26: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:557:26: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_vector.h:557:26: missed: splitting region at control altering definition _168 = std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >::_M_allocate_node.isra (_48);
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed: not vectorized: statement can throw an exception: _168 = std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >::_M_allocate_node.isra (_48);
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed: splitting region at dominance boundary bb182
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed: splitting region at dominance boundary bb74
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed: splitting region at control altering definition _200 = std::__cxx11::basic_string<char>::_M_create (_166, &__dnew, 0);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_193, _196);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_155, _191);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_182, _185);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _200 = std::__cxx11::basic_string<char>::_M_create (_166, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb88
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb92
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb93
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_192, _173, _174);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at control altering definition _230 = operator new (_27);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: not vectorized: statement can throw an exception: _230 = operator new (_27);
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:98:4: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0xc7abb88 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)_164 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)_164 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)_164 + 40B]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0xc7abc00
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0xc7abc00 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis for part in loop 1:
  Vector cost: 24
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0xc7abb88 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)_164 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)_164 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)_164 + 40B]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0xc7abc00
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0xc7abc00 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_impl_data *)_164 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vect_is_simple_use: operand 0B, type of def: constant
/usr/include/c++/11/bits/stl_vector.h:98:4: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:98:4: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_impl_data *)_164 + 40B]._M_start
/usr/include/c++/11/bits/stl_vector.h:98:4: note: created vectp.740_475
/usr/include/c++/11/bits/stl_vector.h:98:4: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)vectp.740_475] = { 0, 0 };
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:98:4: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb175
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb102
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at control altering definition _246 = std::__cxx11::basic_string<char>::_M_create (__cur_328, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _246 = std::__cxx11::basic_string<char>::_M_create (__cur_328, &__dnew, 0);
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:361:25: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node 0xc7abb88 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: op template: MEM[(struct _Vector_base *)_164 + 40B]._M_impl.D.64419._M_start = iftmp.64_223;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 0 MEM[(struct _Vector_base *)_164 + 40B]._M_impl.D.64419._M_start = iftmp.64_223;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 1 MEM[(struct _Vector_base *)_164 + 40B]._M_impl.D.64419._M_finish = iftmp.64_223;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	children 0xc7abc00
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node (external) 0xc7abc00 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	{ iftmp.64_223, iftmp.64_223 }
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Cost model analysis for part in loop 1:
  Vector cost: 16
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node 0xc7abb88 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: op template: MEM[(struct _Vector_base *)_164 + 40B]._M_impl.D.64419._M_start = iftmp.64_223;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 0 MEM[(struct _Vector_base *)_164 + 40B]._M_impl.D.64419._M_start = iftmp.64_223;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 1 MEM[(struct _Vector_base *)_164 + 40B]._M_impl.D.64419._M_finish = iftmp.64_223;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	children 0xc7abc00
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node (external) 0xc7abc00 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	{ iftmp.64_223, iftmp.64_223 }
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_base *)_164 + 40B]._M_impl.D.64419._M_start = iftmp.64_223;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: vect_is_simple_use: operand iftmp.64_223 = PHI <0B(94), _230(175)>, type of def: external
/usr/include/c++/11/bits/stl_vector.h:361:25: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:361:25: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_base *)_164 + 40B]._M_impl.D.64419._M_start
/usr/include/c++/11/bits/stl_vector.h:361:25: note: created vectp.742_459
/usr/include/c++/11/bits/stl_vector.h:361:25: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)vectp.742_459] = _460;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:361:25: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:361:25: missed: splitting region at dominance boundary bb108
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:361:25: missed: splitting region at dominance boundary bb112
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb113
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_35, _235, _236);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at loop 5 exit at bb179
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: splitting region at dominance boundary bb114
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: splitting region at dominance boundary bb129
/usr/include/c++/11/bits/stl_vector.h:557:26: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:557:26: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_vector.h:557:26: missed: splitting region at loop 1 exit at bb184
/usr/include/c++/11/bits/hashtable.h:1312:39: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:1312:39: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:1312:39: missed: splitting region at dominance boundary bb147
/usr/include/c++/11/bits/hashtable.h:1312:39: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable.h:1312:39: missed: splitting region at dominance boundary bb148
/usr/include/c++/11/bits/hashtable.h:1312:39: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable.h:1312:39: missed: splitting region at dominance boundary bb104
/usr/include/c++/11/bits/hashtable.h:1312:39: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable.h:1312:39: missed: splitting region at dominance boundary bb116
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb96
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: _242 = __builtin_eh_pointer (19);
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_begin_catch (_242);
/usr/include/c++/11/bits/stl_construct.h:196:11: missed: statement clobbers memory: std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char>*> (iftmp.64_489, __cur_487);
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: not vectorized: statement can throw an exception: resx 18
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_218, _220);
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: not vectorized: statement can throw an exception: resx 16
/usr/include/c++/11/bits/stl_vector.h:337:7: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:337:7: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_vector.h:337:7: missed: splitting region at dominance boundary bb123
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: not vectorized: statement can throw an exception: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: not vectorized: statement can throw an exception: std::__throw_bad_array_new_length ();
/usr/include/c++/11/ext/new_allocator.h:116:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: splitting region at dominance boundary bb84
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_178, _180);
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: not vectorized: statement can throw an exception: resx 15
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb131
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb149
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: statement clobbers memory: _170 = __builtin_eh_pointer (14);
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: statement clobbers memory: __cxa_begin_catch (_170);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_492, 72);
/usr/include/c++/11/bits/hashtable_policy.h:140:5: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: not vectorized: statement can throw an exception: resx 13
/usr/include/c++/11/bits/hashtable_policy.h:137:8: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: splitting region at dominance boundary bb150
/usr/include/c++/11/bits/hashtable_policy.h:137:8: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: splitting region at dominance boundary bb44
/usr/include/c++/11/bits/hashtable_policy.h:137:8: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: splitting region at dominance boundary bb56
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb36
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: _153 = __builtin_eh_pointer (11);
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_begin_catch (_153);
/usr/include/c++/11/bits/stl_construct.h:196:11: missed: statement clobbers memory: std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char>*> (iftmp.64_134, __cur_488);
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: not vectorized: statement can throw an exception: resx 10
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_129, _131);
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: not vectorized: statement can throw an exception: resx 8
/usr/include/c++/11/bits/stl_vector.h:337:7: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:337:7: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_vector.h:337:7: missed: splitting region at dominance boundary bb63
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: not vectorized: statement can throw an exception: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: not vectorized: statement can throw an exception: std::__throw_bad_array_new_length ();
/usr/include/c++/11/ext/new_allocator.h:116:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: splitting region at dominance boundary bb24
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_89, _91);
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: not vectorized: statement can throw an exception: resx 7
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb70
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb137
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: statement clobbers memory: _81 = __builtin_eh_pointer (6);
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: statement clobbers memory: __cxa_begin_catch (_81);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_75, 72);
/usr/include/c++/11/bits/hashtable_policy.h:140:5: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: not vectorized: statement can throw an exception: resx 5
/usr/include/c++/11/bits/hashtable_policy.h:137:8: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: splitting region at dominance boundary bb151
/usr/include/c++/11/bits/hashtable.h:1323:2: missed: statement clobbers memory: _8 = __builtin_eh_pointer (1);
/usr/include/c++/11/bits/hashtable.h:1323:2: missed: statement clobbers memory: __cxa_begin_catch (_8);
/usr/include/c++/11/bits/hashtable.h:1325:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear (this_19(D));
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_54, _59);
/usr/include/c++/11/bits/hashtable.h:1328:6: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/hashtable.h:1323:2: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/hashtable.h:1323:2: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:1323:2: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:1323:2: missed: splitting region at dominance boundary bb153
/usr/include/c++/11/bits/hashtable.h:1323:2: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable.h:1323:2: missed: splitting region at dominance boundary bb12
/usr/include/c++/11/bits/hashtable.h:1323:2: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable.h:1323:2: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_94, _97);
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable.h:1238:7: note: vectorized 0 loops in function.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_94, _97);
/usr/include/c++/11/bits/hashtable.h:1253:20: missed: statement clobbers memory: __builtin_memset (pretmp_165, 0, _3);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _78 = operator new (_77);
/usr/include/c++/11/bits/hashtable_policy.h:1929:23: missed: statement clobbers memory: __builtin_memset (_78, 0, _77);
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: statement clobbers memory: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: statement clobbers memory: std::__throw_bad_array_new_length ();
/usr/include/c++/11/bits/hashtable.h:1260:6: missed: not vectorized: more than one data ref in stmt: this_15(D)->_M_rehash_policy = __ht_18(D)->_M_rehash_policy;
/usr/include/c++/11/bits/hashtable.h:1263:15: missed: not vectorized: statement can throw an exception: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign<const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&, std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > > > (this_15(D), __ht_18(D), &__roan);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__former_buckets_10, _46);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_94, _97);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_155, _92);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_83, _86);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_75, 72);
/usr/include/c++/11/bits/hashtable.h:1238:7: missed: not vectorized: statement can throw an exception: resx 4
/usr/include/c++/11/bits/hashtable.h:1267:2: missed: statement clobbers memory: _6 = __builtin_eh_pointer (2);
/usr/include/c++/11/bits/hashtable.h:1267:2: missed: statement clobbers memory: __cxa_begin_catch (_6);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_52, _57);
/usr/include/c++/11/bits/hashtable.h:1277:22: missed: statement clobbers memory: __builtin_memset (_9, 0, _8);
/usr/include/c++/11/bits/hashtable.h:1279:6: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/hashtable.h:1267:2: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_110, _112);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_103, _106);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_99, 72);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_114, _117);
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: SLPing BB part
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: Costing subgraph: 
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: node 0xc7cc368 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: op template: MEM[(struct _ReuseOrAllocNode *)&__roan]._M_nodes = _41;
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: 	stmt 0 MEM[(struct _ReuseOrAllocNode *)&__roan]._M_nodes = _41;
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: 	stmt 1 MEM[(struct _ReuseOrAllocNode *)&__roan]._M_h = this_15(D);
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: 	children 0xc7cc3e0
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: node (external) 0xc7cc3e0 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: 	{ _41, this_15(D) }
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: Cost model analysis: 
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: Cost model analysis for part in loop 0:
  Vector cost: 20
  Scalar cost: 24
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: node 0xc7cc368 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: op template: MEM[(struct _ReuseOrAllocNode *)&__roan]._M_nodes = _41;
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: 	stmt 0 MEM[(struct _ReuseOrAllocNode *)&__roan]._M_nodes = _41;
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: 	stmt 1 MEM[(struct _ReuseOrAllocNode *)&__roan]._M_h = this_15(D);
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: 	children 0xc7cc3e0
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: node (external) 0xc7cc3e0 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: 	{ _41, this_15(D) }
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: ------>vectorizing SLP node starting from: MEM[(struct _ReuseOrAllocNode *)&__roan]._M_nodes = _41;
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: vect_is_simple_use: operand this_15(D), type of def: external
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: conflicting alias set types.
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: transform store. ncopies = 1
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _ReuseOrAllocNode *)&__roan]._M_nodes
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: created &MEM[(struct _ReuseOrAllocNode *)&__roan]._M_nodes
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: add new stmt: MEM <vector(2) long unsigned int> [(void *)&__roan] = _147;
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/hashtable_policy.h:115:9: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/hashtable.h:1228:25: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign_elements<const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&> (_102, _100);
/usr/include/c++/11/bits/hashtable.h:1228:25: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign_elements<const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&> (_127, _125);
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/unordered_map.h:102:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (_17);
/usr/include/c++/11/bits/unordered_map.h:181:7: missed: couldn't vectorize loop
/usr/include/c++/11/bits/unordered_map.h:181:7: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/unordered_map.h:102:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (_29);
/usr/include/c++/11/bits/stl_algobase.h:383:46: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_algobase.h:383:46: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/unordered_map.h:181:7: missed: couldn't vectorize loop
/usr/include/c++/11/bits/unordered_map.h:181:7: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_algobase.h:383:46: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_algobase.h:383:46: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/vector.tcc:198:5: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/unordered_map.h:102:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (_17);
/usr/include/c++/11/bits/unordered_map.h:102:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (_29);
/usr/include/c++/11/bits/hashtable.h:1421:16: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign.isra (_80, _82);
/usr/include/c++/11/bits/hashtable.h:1228:25: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign_elements<const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&> (_102, _100);
/usr/include/c++/11/bits/hashtable.h:1421:16: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign.isra (_109, _111);
/usr/include/c++/11/bits/hashtable.h:1228:25: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign_elements<const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&> (_127, _125);
/usr/include/c++/11/bits/hashtable.h:1228:25: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign_elements<const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&> (_127, _125);
/usr/include/c++/11/bits/hashtable.h:1418:7: missed: not vectorized: more than one data ref in stmt: MEM[(struct _Hashtable *)__cur_209]._M_rehash_policy = MEM[(const struct _Hashtable &)__first_213]._M_rehash_policy;
/usr/include/c++/11/bits/hashtable.h:1421:16: missed: not vectorized: statement can throw an exception: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign.isra (_109, _111);
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: _116 = __builtin_eh_pointer (7);
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_begin_catch (_116);
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/unordered_map.h:102:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (_118);
/usr/include/c++/11/bits/hashtable.h:1228:25: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign_elements<const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&> (_102, _100);
/usr/include/c++/11/bits/unordered_map.h:102:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (_29);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _77 = operator new (_12);
/usr/include/c++/11/bits/hashtable.h:1418:7: missed: not vectorized: more than one data ref in stmt: MEM[(struct _Hashtable *)__cur_165]._M_rehash_policy = MEM[(const struct _Hashtable &)__first$_M_current_196]._M_rehash_policy;
/usr/include/c++/11/bits/hashtable.h:1421:16: missed: not vectorized: statement can throw an exception: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign.isra (_80, _82);
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: _88 = __builtin_eh_pointer (4);
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_begin_catch (_88);
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/vector.tcc:198:5: missed: not vectorized: statement can throw an exception: resx 5
/usr/include/c++/11/bits/stl_vector.h:1518:4: missed: statement clobbers memory: _71 = __builtin_eh_pointer (1);
/usr/include/c++/11/bits/stl_vector.h:1518:4: missed: statement clobbers memory: __cxa_begin_catch (_71);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (iftmp.30_70, _12);
/usr/include/c++/11/bits/stl_vector.h:1521:8: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/stl_vector.h:1518:4: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/unordered_map.h:102:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (_90);
/usr/include/c++/11/bits/unordered_map.h:102:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (_17);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_13, _22);
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: statement clobbers memory: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: statement clobbers memory: std::__throw_bad_array_new_length ();
/usr/include/c++/11/ext/new_allocator.h:116:41: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/ext/new_allocator.h:116:41: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/hashtable_policy.h:283:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1251:33: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2391:22: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:44: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:21: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:37: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2393:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2395:29: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2396:17: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2397:31: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2386:14: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable.h:2386:14: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable.h:2355:5: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/hashtable_policy.h:283:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1251:33: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2391:22: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:44: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:21: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:37: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2393:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2395:29: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2396:17: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2397:31: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2355:5: missed: splitting region at control altering definition _49 = operator new (_48);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: not vectorized: statement can throw an exception: _49 = operator new (_48);
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: splitting region at dominance boundary bb11
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: splitting region at dominance boundary bb5
/usr/include/c++/11/bits/hashtable_policy.h:1929:23: missed: statement clobbers memory: __builtin_memset (_49, 0, _48);
/usr/include/c++/11/bits/hashtable.h:437:14: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable.h:437:14: missed: splitting region at dominance boundary bb22
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: not vectorized: statement can throw an exception: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: not vectorized: statement can throw an exception: std::__throw_bad_array_new_length ();
/usr/include/c++/11/ext/new_allocator.h:116:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: splitting region at dominance boundary bb3
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: statement clobbers memory: _1 = __builtin_eh_pointer (1);
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: statement clobbers memory: __cxa_begin_catch (_1);
/usr/include/c++/11/bits/hashtable.h:2368:4: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/hashtable.h:2363:7: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:2363:7: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: splitting region at dominance boundary bb12
/usr/include/c++/11/bits/hashtable.h:437:14: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:437:14: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_35, _40);
/usr/include/c++/11/bits/hashtable.h:2370:5: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:2370:5: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable_policy.h:1617:29: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1617:29: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable_policy.h:723:5: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/hashtable_policy.h:723:5: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:723:5: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/char_traits.h:389:25: missed: statement clobbers memory: _55 = __builtin_memcmp (_47, _49, _48);
/usr/include/c++/11/bits/hashtable_policy.h:723:5: missed: splitting region at control altering definition __do_rehash = std::__detail::_Prime_rehash_policy::_M_need_rehash (_58, _60, _59, 1);
/usr/include/c++/11/bits/functional_hash.h:198:25: missed: statement clobbers memory: _22 = std::_Hash_bytes (_21, _20, 3339675911);
/usr/include/c++/11/bits/char_traits.h:389:25: missed: statement clobbers memory: _55 = __builtin_memcmp (_47, _49, _48);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _81 = operator new (72);
/usr/include/c++/11/bits/hashtable.h:2016:35: missed: not vectorized: statement can throw an exception: __do_rehash = std::__detail::_Prime_rehash_policy::_M_need_rehash (_58, _60, _59, 1);
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:98:4: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0xc6bcda8 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)_81 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)_81 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)_81 + 40B]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0xc6bce20
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0xc6bce20 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis for part in loop 0:
  Vector cost: 24
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0xc6bcda8 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)_81 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)_81 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)_81 + 40B]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0xc6bce20
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0xc6bce20 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_impl_data *)_81 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vect_is_simple_use: operand 0B, type of def: constant
/usr/include/c++/11/bits/stl_vector.h:98:4: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:98:4: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_impl_data *)_81 + 40B]._M_start
/usr/include/c++/11/bits/stl_vector.h:98:4: note: created vectp.883_65
/usr/include/c++/11/bits/stl_vector.h:98:4: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)vectp.883_65] = { 0, 0 };
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:98:4: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb15
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb27
/usr/include/c++/11/bits/hashtable.h:2021:13: missed: not vectorized: statement can throw an exception: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash (this_3(D), _62, &D.107003);
/usr/include/c++/11/bits/hashtable.h:2021:13: note: ***** Analysis failed with vector mode V16QI
/usr/include/c++/11/bits/hashtable.h:2021:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V16QI
/usr/include/c++/11/bits/hashtable.h:2021:13: missed: splitting region at dominance boundary bb18
/usr/include/c++/11/bits/hashtable_policy.h:744:5: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Scoped_node::~_Scoped_node (&__node);
/usr/include/c++/11/bits/hashtable_policy.h:744:5: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:744:5: missed: splitting region at dominance boundary bb19
/usr/include/c++/11/bits/hashtable.h:1890:21: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:1890:21: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:1890:21: missed: splitting region at dominance boundary bb25
/usr/include/c++/11/bits/hashtable.h:308:68: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:308:68: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable_policy.h:723:5: note: ***** Analysis failed with vector mode VOID
harness.cpp:17:55: optimized: loop with 1 iterations completely unrolled (header execution count 0)
harness.cpp:20:71: optimized: loop with 1 iterations completely unrolled (header execution count 0)
harness.cpp:20:71: optimized: loop with 1 iterations completely unrolled (header execution count 146003684)
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: optimized: loop with 1 iterations completely unrolled (header execution count 70979237)
/usr/include/c++/11/bits/stl_algobase.h:383:46: optimized: loop with 1 iterations completely unrolled (header execution count 37561076)
harness.cpp:17:55: optimized: loop with 1 iterations completely unrolled (header execution count 23019046)
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: optimized: loop with 1 iterations completely unrolled (header execution count 11190638)
/usr/include/c++/11/bits/stl_algobase.h:383:46: optimized: loop with 1 iterations completely unrolled (header execution count 5921906)
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_607, _610);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_535, _538);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_541, _544);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_317, _320);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_323, _326);
/usr/include/c++/11/bits/hashtable.h:528:7: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable.h:528:7: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/basic_string.h:165:25: missed: couldn't vectorize loop
/usr/include/c++/11/bits/basic_string.h:165:25: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/basic_string.h:456:7: missed: couldn't vectorize loop
/usr/include/c++/11/bits/basic_string.h:456:7: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/basic_string.h:1387:17: missed: couldn't vectorize loop
/usr/include/c++/11/bits/basic_string.h:1387:17: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/basic_string.h:456:7: missed: couldn't vectorize loop
/usr/include/c++/11/bits/basic_string.h:456:7: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/basic_string.h:1387:17: missed: couldn't vectorize loop
/usr/include/c++/11/bits/basic_string.h:1387:17: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/charconv.h:84:20: missed: couldn't vectorize loop
/usr/include/c++/11/bits/charconv.h:84:20: missed: not vectorized: number of iterations cannot be computed.
/usr/include/c++/11/bits/charconv.h:62:12: missed: couldn't vectorize loop
/usr/include/c++/11/bits/charconv.h:62:12: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_uninitialized.h:578:19: missed: couldn't vectorize loop
harness.cpp:13:32: missed: not vectorized: no vectype for stmt: *__cur_567 = {};
 scalar_type: struct LdapObject
harness.cpp:13:32: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/charconv.h:88:29: missed: failed: evolution of offset is not affine.
/usr/include/c++/11/bits/charconv.h:88:19: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/charconv.h:89:33: missed: failed: evolution of offset is not affine.
/usr/include/c++/11/bits/charconv.h:89:23: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/basic_string.h:1387:17: missed: statement clobbers memory: std::__cxx11::basic_string<char>::_M_assign (__result_492, __first_650);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_317, _320);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_323, _326);
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_622, _331, _332);
/usr/include/c++/11/bits/basic_string.h:1387:17: missed: statement clobbers memory: std::__cxx11::basic_string<char>::_M_assign (__result_263, __first_274);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_535, _538);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_541, _544);
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_456, _549, _550);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_607, _610);
harness.cpp:13:32: missed: splitting region at control altering definition _228 = std::__cxx11::basic_string<char>::_M_replace (&D.89075, 0, 0, "value", 5);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _174 = operator new (_140);
/usr/include/c++/11/bits/basic_string.h:555:21: missed: not vectorized: statement can throw an exception: std::__cxx11::basic_string<char>::_M_construct (&D.89075, _187, 0);
/usr/include/c++/11/bits/basic_string.h:1960:19: missed: not vectorized: statement can throw an exception: _228 = std::__cxx11::basic_string<char>::_M_replace (&D.89075, 0, 0, "value", 5);
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:361:25: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0xc81faf8 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)objs_22(D)]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)objs_22(D)]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)objs_22(D)]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0xc81fb70
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0xc81fb70 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis for part in loop 0:
  Vector cost: 24
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0xc81faf8 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)objs_22(D)]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)objs_22(D)]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)objs_22(D)]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0xc81fb70
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0xc81fb70 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_impl_data *)objs_22(D)]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vect_is_simple_use: operand 0B, type of def: constant
/usr/include/c++/11/bits/stl_vector.h:98:4: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:98:4: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_impl_data *)objs_22(D)]._M_start
/usr/include/c++/11/bits/stl_vector.h:98:4: note: created vectp.906_691
/usr/include/c++/11/bits/stl_vector.h:98:4: note: add new stmt: MEM <vector(2) long unsigned int> [(struct LdapObject * *)vectp.906_691] = { 0, 0 };
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:98:4: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node 0xc81fbe8 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: op template: MEM[(struct _Vector_base *)objs_22(D)]._M_impl.D.69121._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 0 MEM[(struct _Vector_base *)objs_22(D)]._M_impl.D.69121._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 1 *objs_22(D).D.69776._M_impl.D.69121._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	children 0xc81fc60
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node (constant) 0xc81fc60 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Cost model analysis for part in loop 0:
  Vector cost: 24
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node 0xc81fbe8 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: op template: MEM[(struct _Vector_base *)objs_22(D)]._M_impl.D.69121._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 0 MEM[(struct _Vector_base *)objs_22(D)]._M_impl.D.69121._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 1 *objs_22(D).D.69776._M_impl.D.69121._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	children 0xc81fc60
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node (constant) 0xc81fc60 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_base *)objs_22(D)]._M_impl.D.69121._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: vect_is_simple_use: operand 0B, type of def: constant
/usr/include/c++/11/bits/stl_vector.h:361:25: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:361:25: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_base *)objs_22(D)]._M_impl.D.69121._M_start
/usr/include/c++/11/bits/stl_vector.h:361:25: note: created vectp.908_686
/usr/include/c++/11/bits/stl_vector.h:361:25: note: add new stmt: MEM <vector(2) long unsigned int> [(struct LdapObject * *)vectp.908_686] = { 0, 0 };
/usr/include/c++/11/bits/stl_vector.h:361:25: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:361:25: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:361:25: missed: splitting region at dominance boundary bb25
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:361:25: missed: splitting region at control altering definition _34 = std::__detail::_Map_base<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (&MEM[(struct unordered_map *)&obj]._M_h, &D.89074);
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (&D.89074.D.55603._M_local_buf, "CN", 2);
/usr/include/c++/11/bits/unordered_map.h:984:20: missed: not vectorized: statement can throw an exception: _34 = std::__detail::_Map_base<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (&MEM[(struct unordered_map *)&obj]._M_h, &D.89074);
/usr/include/c++/11/bits/unordered_map.h:984:20: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/unordered_map.h:984:20: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/unordered_map.h:984:20: missed: splitting region at dominance boundary bb29
/usr/include/c++/11/bits/unordered_map.h:984:20: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/unordered_map.h:984:20: missed: splitting region at loop 1 exit at bb66
/usr/include/c++/11/bits/basic_string.h:1387:17: missed: not vectorized: statement can throw an exception: std::__cxx11::basic_string<char>::_M_assign (__result_492, __first_650);
/usr/include/c++/11/bits/basic_string.h:1387:17: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:1387:17: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:1387:17: missed: splitting region at dominance boundary bb67
/usr/include/c++/11/bits/basic_string.h:1387:17: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1387:17: missed: splitting region at dominance boundary bb64
/usr/include/c++/11/bits/stl_algobase.h:383:46: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_algobase.h:383:46: missed: splitting region at control altering definition _341 = std::__cxx11::basic_string<char>::_M_create (__cur_389, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _341 = std::__cxx11::basic_string<char>::_M_create (__cur_389, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb73
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb77
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb78
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_622, _331, _332);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at loop 15 exit at bb266
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: splitting region at dominance boundary bb79
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: splitting region at dominance boundary bb238
/usr/include/c++/11/bits/vector.tcc:329:30: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/vector.tcc:329:30: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/vector.tcc:329:30: missed: splitting region at dominance boundary bb69
/usr/include/c++/11/bits/vector.tcc:329:30: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/vector.tcc:329:30: missed: splitting region at dominance boundary bb81
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb239
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: _337 = __builtin_eh_pointer (48);
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_begin_catch (_337);
/usr/include/c++/11/bits/stl_construct.h:196:11: missed: statement clobbers memory: std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char>*> (_775, __cur_756);
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_end_catch ();
harness.cpp:13:32: missed: not vectorized: statement can throw an exception: resx 47
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: splitting region at dominance boundary bb56
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: splitting region at loop 1 exit at bb57
/usr/include/c++/11/bits/basic_string.h:1387:17: missed: not vectorized: statement can throw an exception: std::__cxx11::basic_string<char>::_M_assign (_246, &D.89077);
/usr/include/c++/11/bits/basic_string.h:1387:17: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1387:17: missed: splitting region at dominance boundary bb58
/usr/include/c++/11/bits/basic_string.h:1387:17: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1387:17: missed: splitting region at dominance boundary bb30
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_323, _326);
/usr/include/c++/11/bits/stl_vector.h:1798:30: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:1798:30: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_vector.h:1798:30: missed: splitting region at control altering definition _295 = operator new (32);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: not vectorized: statement can throw an exception: _295 = operator new (32);
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: splitting region at dominance boundary bb32
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: splitting region at control altering definition _134 = std::__cxx11::basic_string<char>::_M_create (_295, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _134 = std::__cxx11::basic_string<char>::_M_create (_295, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb35
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb38
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb40
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_281, _731, _766);
/usr/include/c++/11/bits/char_traits.h:437:49: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/char_traits.h:437:49: missed: splitting region at dominance boundary bb84
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_317, _320);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_254, _256);
/usr/include/c++/11/bits/vector.tcc:316:29: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/vector.tcc:316:29: note: SLPing BB part
/usr/include/c++/11/bits/vector.tcc:316:29: note: Costing subgraph: 
/usr/include/c++/11/bits/vector.tcc:316:29: note: node 0xc81fbe8 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/vector.tcc:316:29: note: op template: MEM[(struct vector *)_34].D.65105._M_impl.D.64419._M_start = _295;
/usr/include/c++/11/bits/vector.tcc:316:29: note: 	stmt 0 MEM[(struct vector *)_34].D.65105._M_impl.D.64419._M_start = _295;
/usr/include/c++/11/bits/vector.tcc:316:29: note: 	stmt 1 MEM[(struct vector *)_34].D.65105._M_impl.D.64419._M_finish = __cur_907;
/usr/include/c++/11/bits/vector.tcc:316:29: note: 	children 0xc81fc60
/usr/include/c++/11/bits/vector.tcc:316:29: note: node (external) 0xc81fc60 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/vector.tcc:316:29: note: 	{ _295, __cur_907 }
/usr/include/c++/11/bits/vector.tcc:316:29: note: Cost model analysis: 
/usr/include/c++/11/bits/vector.tcc:316:29: note: Cost model analysis for part in loop 1:
  Vector cost: 20
  Scalar cost: 24
/usr/include/c++/11/bits/vector.tcc:316:29: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/vector.tcc:316:29: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/vector.tcc:316:29: note: node 0xc81fbe8 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/vector.tcc:316:29: note: op template: MEM[(struct vector *)_34].D.65105._M_impl.D.64419._M_start = _295;
/usr/include/c++/11/bits/vector.tcc:316:29: note: 	stmt 0 MEM[(struct vector *)_34].D.65105._M_impl.D.64419._M_start = _295;
/usr/include/c++/11/bits/vector.tcc:316:29: note: 	stmt 1 MEM[(struct vector *)_34].D.65105._M_impl.D.64419._M_finish = __cur_907;
/usr/include/c++/11/bits/vector.tcc:316:29: note: 	children 0xc81fc60
/usr/include/c++/11/bits/vector.tcc:316:29: note: node (external) 0xc81fc60 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/vector.tcc:316:29: note: 	{ _295, __cur_907 }
/usr/include/c++/11/bits/vector.tcc:316:29: note: ------>vectorizing SLP node starting from: MEM[(struct vector *)_34].D.65105._M_impl.D.64419._M_start = _295;
/usr/include/c++/11/bits/vector.tcc:316:29: note: vect_is_simple_use: operand _295 + 32, type of def: internal
/usr/include/c++/11/bits/vector.tcc:316:29: note: transform store. ncopies = 1
/usr/include/c++/11/bits/vector.tcc:316:29: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct vector *)_34].D.65105._M_impl.D.64419._M_start
/usr/include/c++/11/bits/vector.tcc:316:29: note: created vectp.910_673
/usr/include/c++/11/bits/vector.tcc:316:29: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)vectp.910_673] = _675;
/usr/include/c++/11/bits/vector.tcc:316:29: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/vector.tcc:316:29: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/vector.tcc:316:29: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/vector.tcc:316:29: missed: splitting region at loop 1 exit at bb92
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_21, _57);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_511, _505);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_62, _64);
/usr/include/c++/11/bits/basic_string.h:555:21: missed: not vectorized: statement can throw an exception: std::__cxx11::basic_string<char>::_M_construct (&D.89093[0], 1, 45);
/usr/include/c++/11/bits/basic_string.h:555:21: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:555:21: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:555:21: missed: splitting region at dominance boundary bb93
/usr/include/c++/11/bits/basic_string.h:555:21: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:555:21: missed: splitting region at loop 3 exit at bb206
/usr/include/c++/11/bits/basic_string.h:555:21: missed: not vectorized: statement can throw an exception: std::__cxx11::basic_string<char>::_M_construct (&D.89090, 1, 45);
/usr/include/c++/11/bits/basic_string.h:555:21: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:555:21: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:555:21: missed: splitting region at dominance boundary bb94
/usr/include/c++/11/bits/basic_string.h:555:21: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:555:21: missed: splitting region at control altering definition _459 = std::__cxx11::basic_string<char>::_M_replace (&D.89090, 0, 0, "attr", 4);
/usr/include/c++/11/bits/basic_string.h:1960:19: missed: not vectorized: statement can throw an exception: _459 = std::__cxx11::basic_string<char>::_M_replace (&D.89090, 0, 0, "attr", 4);
/usr/include/c++/11/bits/basic_string.h:1960:19: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:1960:19: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:1960:19: missed: splitting region at dominance boundary bb95
/usr/include/c++/11/bits/basic_string.h:1960:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1960:19: missed: splitting region at control altering definition _65 = std::__detail::_Map_base<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (&MEM[(struct unordered_map *)&obj]._M_h, &D.89091);
/usr/include/c++/11/bits/unordered_map.h:984:20: missed: not vectorized: statement can throw an exception: _65 = std::__detail::_Map_base<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[] (&MEM[(struct unordered_map *)&obj]._M_h, &D.89091);
/usr/include/c++/11/bits/unordered_map.h:984:20: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/unordered_map.h:984:20: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/unordered_map.h:984:20: missed: splitting region at dominance boundary bb99
/usr/include/c++/11/bits/unordered_map.h:984:20: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/unordered_map.h:984:20: missed: splitting region at loop 3 exit at bb137
/usr/include/c++/11/bits/basic_string.h:1387:17: missed: not vectorized: statement can throw an exception: std::__cxx11::basic_string<char>::_M_assign (__result_263, __first_274);
/usr/include/c++/11/bits/basic_string.h:1387:17: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:1387:17: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:1387:17: missed: splitting region at dominance boundary bb138
/usr/include/c++/11/bits/basic_string.h:1387:17: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1387:17: missed: splitting region at dominance boundary bb135
/usr/include/c++/11/bits/stl_algobase.h:383:46: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_algobase.h:383:46: missed: splitting region at control altering definition _559 = std::__cxx11::basic_string<char>::_M_create (__cur_5, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _559 = std::__cxx11::basic_string<char>::_M_create (__cur_5, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb144
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb148
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb149
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_456, _549, _550);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at loop 25 exit at bb282
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: splitting region at dominance boundary bb150
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: splitting region at dominance boundary bb234
/usr/include/c++/11/bits/vector.tcc:329:30: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/vector.tcc:329:30: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/vector.tcc:329:30: missed: splitting region at dominance boundary bb140
/usr/include/c++/11/bits/vector.tcc:329:30: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/vector.tcc:329:30: missed: splitting region at dominance boundary bb152
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb235
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: _555 = __builtin_eh_pointer (57);
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_begin_catch (_555);
/usr/include/c++/11/bits/stl_construct.h:196:11: missed: statement clobbers memory: std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char>*> (_752, __cur_778);
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_end_catch ();
harness.cpp:13:32: missed: not vectorized: statement can throw an exception: resx 56
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: splitting region at dominance boundary bb127
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: splitting region at loop 3 exit at bb128
/usr/include/c++/11/bits/basic_string.h:1387:17: missed: not vectorized: statement can throw an exception: std::__cxx11::basic_string<char>::_M_assign (_464, &D.89093);
/usr/include/c++/11/bits/basic_string.h:1387:17: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1387:17: missed: splitting region at dominance boundary bb129
/usr/include/c++/11/bits/basic_string.h:1387:17: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1387:17: missed: splitting region at dominance boundary bb100
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_541, _544);
/usr/include/c++/11/bits/stl_vector.h:1798:30: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:1798:30: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_vector.h:1798:30: missed: splitting region at control altering definition _513 = operator new (32);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: not vectorized: statement can throw an exception: _513 = operator new (32);
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: splitting region at dominance boundary bb102
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: splitting region at control altering definition _293 = std::__cxx11::basic_string<char>::_M_create (_513, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _293 = std::__cxx11::basic_string<char>::_M_create (_513, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb105
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb108
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb110
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_632, _244, _248);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at dominance boundary bb155
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_535, _538);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_262, _474);
/usr/include/c++/11/bits/vector.tcc:316:29: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/vector.tcc:316:29: note: SLPing BB part
/usr/include/c++/11/bits/vector.tcc:316:29: note: Costing subgraph: 
/usr/include/c++/11/bits/vector.tcc:316:29: note: node 0xc81fbe8 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/vector.tcc:316:29: note: op template: MEM[(struct vector *)_65].D.65105._M_impl.D.64419._M_start = _513;
/usr/include/c++/11/bits/vector.tcc:316:29: note: 	stmt 0 MEM[(struct vector *)_65].D.65105._M_impl.D.64419._M_start = _513;
/usr/include/c++/11/bits/vector.tcc:316:29: note: 	stmt 1 MEM[(struct vector *)_65].D.65105._M_impl.D.64419._M_finish = __cur_811;
/usr/include/c++/11/bits/vector.tcc:316:29: note: 	children 0xc81fc60
/usr/include/c++/11/bits/vector.tcc:316:29: note: node (external) 0xc81fc60 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/vector.tcc:316:29: note: 	{ _513, __cur_811 }
/usr/include/c++/11/bits/vector.tcc:316:29: note: Cost model analysis: 
/usr/include/c++/11/bits/vector.tcc:316:29: note: Cost model analysis for part in loop 3:
  Vector cost: 20
  Scalar cost: 24
/usr/include/c++/11/bits/vector.tcc:316:29: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/vector.tcc:316:29: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/vector.tcc:316:29: note: node 0xc81fbe8 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/vector.tcc:316:29: note: op template: MEM[(struct vector *)_65].D.65105._M_impl.D.64419._M_start = _513;
/usr/include/c++/11/bits/vector.tcc:316:29: note: 	stmt 0 MEM[(struct vector *)_65].D.65105._M_impl.D.64419._M_start = _513;
/usr/include/c++/11/bits/vector.tcc:316:29: note: 	stmt 1 MEM[(struct vector *)_65].D.65105._M_impl.D.64419._M_finish = __cur_811;
/usr/include/c++/11/bits/vector.tcc:316:29: note: 	children 0xc81fc60
/usr/include/c++/11/bits/vector.tcc:316:29: note: node (external) 0xc81fc60 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/vector.tcc:316:29: note: 	{ _513, __cur_811 }
/usr/include/c++/11/bits/vector.tcc:316:29: note: ------>vectorizing SLP node starting from: MEM[(struct vector *)_65].D.65105._M_impl.D.64419._M_start = _513;
/usr/include/c++/11/bits/vector.tcc:316:29: note: vect_is_simple_use: operand _513 + 32, type of def: internal
/usr/include/c++/11/bits/vector.tcc:316:29: note: transform store. ncopies = 1
/usr/include/c++/11/bits/vector.tcc:316:29: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct vector *)_65].D.65105._M_impl.D.64419._M_start
/usr/include/c++/11/bits/vector.tcc:316:29: note: created vectp.912_637
/usr/include/c++/11/bits/vector.tcc:316:29: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)vectp.912_637] = _646;
/usr/include/c++/11/bits/vector.tcc:316:29: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/vector.tcc:316:29: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/vector.tcc:316:29: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/vector.tcc:316:29: missed: splitting region at loop 3 exit at bb162
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_69, _71);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_66, _68);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_223, _693);
harness.cpp:19:27: note: ***** Analysis failed with vector mode V2DI
harness.cpp:19:27: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:19:27: missed: splitting region at dominance boundary bb182
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_607, _610);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_75, _605);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_596, _599);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_540, 72);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_571, _576);
/usr/include/c++/11/bits/hashtable.h:1364:7: missed: not vectorized: more than one data ref in stmt: MEM[(struct _Hashtable *)_79]._M_rehash_policy = MEM[(struct _Hashtable &)&obj]._M_rehash_policy;
/usr/include/c++/11/bits/unordered_map.h:102:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (&MEM[(struct unordered_map *)&obj]._M_h);
harness.cpp:15:31: note: ***** Analysis failed with vector mode V2DI
harness.cpp:15:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:15:31: missed: splitting region at dominance boundary bb228
harness.cpp:24:12: note: ***** Analysis failed with vector mode VOID
harness.cpp:24:12: missed: splitting region at dominance boundary bb231
harness.cpp:24:12: note: ***** Analysis failed with vector mode VOID
harness.cpp:24:12: missed: splitting region at dominance boundary bb232
harness.cpp:24:12: note: ***** Analysis failed with vector mode VOID
harness.cpp:24:12: missed: splitting region at dominance boundary bb111
harness.cpp:24:12: note: ***** Analysis failed with vector mode VOID
harness.cpp:24:12: missed: splitting region at dominance boundary bb114
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb197
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: _522 = __builtin_eh_pointer (54);
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_begin_catch (_522);
/usr/include/c++/11/bits/stl_construct.h:196:11: missed: statement clobbers memory: std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char>*> (_745, _745);
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_end_catch ();
harness.cpp:13:32: missed: not vectorized: statement can throw an exception: resx 53
/usr/include/c++/11/bits/stl_vector.h:1518:4: missed: statement clobbers memory: _507 = __builtin_eh_pointer (49);
/usr/include/c++/11/bits/stl_vector.h:1518:4: missed: statement clobbers memory: __cxa_begin_catch (_507);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_745, 32);
/usr/include/c++/11/bits/stl_vector.h:1521:8: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/stl_vector.h:1518:4: missed: statement clobbers memory: __cxa_end_catch ();
harness.cpp:13:32: missed: not vectorized: statement can throw an exception: resx 50
/usr/include/c++/11/bits/stl_vector.h:1518:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:1518:4: missed: splitting region at dominance boundary bb202
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_90, _92);
harness.cpp:13:32: missed: not vectorized: statement can throw an exception: resx 30
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb207
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_93, _95);
harness.cpp:13:32: missed: not vectorized: statement can throw an exception: resx 28
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb236
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_708, _235);
harness.cpp:13:32: missed: not vectorized: statement can throw an exception: resx 26
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: splitting region at dominance boundary bb42
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: splitting region at dominance boundary bb45
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb184
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: _304 = __builtin_eh_pointer (45);
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_begin_catch (_304);
/usr/include/c++/11/bits/stl_construct.h:196:11: missed: statement clobbers memory: std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char>*> (_761, _761);
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_end_catch ();
harness.cpp:13:32: missed: not vectorized: statement can throw an exception: resx 44
/usr/include/c++/11/bits/stl_vector.h:1518:4: missed: statement clobbers memory: _289 = __builtin_eh_pointer (40);
/usr/include/c++/11/bits/stl_vector.h:1518:4: missed: statement clobbers memory: __cxa_begin_catch (_289);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_761, 32);
/usr/include/c++/11/bits/stl_vector.h:1521:8: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/stl_vector.h:1518:4: missed: statement clobbers memory: __cxa_end_catch ();
harness.cpp:13:32: missed: not vectorized: statement can throw an exception: resx 41
/usr/include/c++/11/bits/stl_vector.h:1518:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:1518:4: missed: splitting region at dominance boundary bb192
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_80, _82);
harness.cpp:13:32: missed: not vectorized: statement can throw an exception: resx 16
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_619, _849);
harness.cpp:13:32: missed: not vectorized: statement can throw an exception: resx 12
harness.cpp:17:23: note: ***** Analysis failed with vector mode V2DI
harness.cpp:17:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:17:23: missed: splitting region at dominance boundary bb212
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_87, _89);
harness.cpp:13:32: missed: not vectorized: statement can throw an exception: resx 10
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb240
/usr/include/c++/11/bits/unordered_map.h:102:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (&MEM[(struct unordered_map *)&obj]._M_h);
harness.cpp:13:32: missed: not vectorized: statement can throw an exception: resx 8
harness.cpp:25:1: missed: statement clobbers memory: std::vector<LdapObject>::~vector (objs_22(D));
harness.cpp:25:1: note: ***** Analysis failed with vector mode VOID
harness.cpp:25:1: missed: splitting region at dominance boundary bb242
harness.cpp:25:1: note: ***** Analysis failed with vector mode VOID
harness.cpp:25:1: missed: splitting region at dominance boundary bb3
harness.cpp:25:1: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:1770:24: missed: statement clobbers memory: std::__throw_length_error ("cannot create std::vector larger than max_size()");
/usr/include/c++/11/bits/stl_vector.h:1770:24: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_464, _467);
harness.cpp:45:30: missed: couldn't vectorize loop
harness.cpp:45:30: missed: not vectorized: unsupported data-type
ldap.hpp:40:19: missed: couldn't vectorize loop
ldap.hpp:40:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
harness.cpp:33:32: missed: couldn't vectorize loop
harness.cpp:33:32: missed: not vectorized: control flow in loop.
harness.cpp:27:5: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/char_traits.h:399:25: missed: statement clobbers memory: _334 = __builtin_strlen (_4);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_464, _467);
harness.cpp:27:5: missed: splitting region at control altering definition _339 = std::__cxx11::basic_string<char>::_M_create (&arg, &__dnew, 0);
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (&mode.D.55603._M_local_buf, "perf", 4);
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/char_traits.h:399:25: missed: statement clobbers memory: _334 = __builtin_strlen (_4);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _339 = std::__cxx11::basic_string<char>::_M_create (&arg, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb8
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb12
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb13
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_13, _4, _334);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at control altering definition D.89571 = std::__cxx11::basic_string<char>::substr (&arg, 9, 18446744073709551615); [return slot optimization]
/usr/include/c++/11/bits/basic_string.h:6250:27: missed: statement clobbers memory: _67 = std::__cxx11::basic_string<char>::compare (&arg, "--mode=correct");
/usr/include/c++/11/bits/basic_string.h:6250:27: missed: statement clobbers memory: _103 = std::__cxx11::basic_string<char>::compare (&arg, "--mode=perf");
/usr/include/c++/11/bits/basic_string.h:2494:20: missed: statement clobbers memory: _131 = std::__cxx11::basic_string<char>::rfind (&arg, "--entries=", 0, 10);
/usr/include/c++/11/bits/basic_string.h:2494:20: missed: statement clobbers memory: _42 = std::__cxx11::basic_string<char>::rfind (&arg, "--repeat=", 0, 9);
harness.cpp:37:76: missed: not vectorized: statement can throw an exception: D.89571 = std::__cxx11::basic_string<char>::substr (&arg, 9, 18446744073709551615); [return slot optimization]
harness.cpp:37:76: note: ***** Analysis failed with vector mode V2DI
harness.cpp:37:76: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:37:76: missed: splitting region at loop 1 exit at bb172
/usr/include/c++/11/ext/string_conversions.h:80:34: missed: statement clobbers memory: _362 = strtol (_86, &__endptr, 10);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_94, _79);
harness.cpp:37:76: note: ***** Analysis failed with vector mode V2DI
harness.cpp:37:76: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:37:76: missed: splitting region at dominance boundary bb171
harness.cpp:37:76: note: ***** Analysis failed with vector mode VOID
harness.cpp:37:76: missed: splitting region at dominance boundary bb42
harness.cpp:37:76: note: ***** Analysis failed with vector mode VOID
harness.cpp:37:76: missed: splitting region at dominance boundary bb39
/usr/include/c++/11/ext/string_conversions.h:86:27: missed: not vectorized: statement can throw an exception: std::__throw_out_of_range ("stoi");
/usr/include/c++/11/ext/string_conversions.h:86:27: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/string_conversions.h:86:27: missed: splitting region at dominance boundary bb48
/usr/include/c++/11/ext/string_conversions.h:83:31: missed: not vectorized: statement can throw an exception: std::__throw_invalid_argument ("stoi");
/usr/include/c++/11/ext/string_conversions.h:83:31: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/string_conversions.h:83:31: missed: splitting region at dominance boundary bb37
harness.cpp:27:5: missed: not vectorized: statement can throw an exception: resx 108
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_172, _174);
harness.cpp:27:5: missed: not vectorized: statement can throw an exception: resx 20
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb19
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at control altering definition D.89400 = std::__cxx11::basic_string<char>::substr (&arg, 10, 18446744073709551615); [return slot optimization]
harness.cpp:36:80: missed: not vectorized: statement can throw an exception: D.89400 = std::__cxx11::basic_string<char>::substr (&arg, 10, 18446744073709551615); [return slot optimization]
harness.cpp:36:80: note: ***** Analysis failed with vector mode VOID
harness.cpp:36:80: missed: splitting region at loop 1 exit at bb24
/usr/include/c++/11/ext/string_conversions.h:80:34: missed: statement clobbers memory: _354 = strtoull (_38, &__endptr, 10);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_54, _45);
harness.cpp:36:80: note: ***** Analysis failed with vector mode V2DI
harness.cpp:36:80: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:36:80: missed: splitting region at dominance boundary bb22
/usr/include/c++/11/ext/string_conversions.h:86:27: missed: not vectorized: statement can throw an exception: std::__throw_out_of_range ("stoull");
/usr/include/c++/11/ext/string_conversions.h:86:27: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/string_conversions.h:86:27: missed: splitting region at dominance boundary bb30
/usr/include/c++/11/ext/string_conversions.h:83:31: missed: not vectorized: statement can throw an exception: std::__throw_invalid_argument ("stoull");
/usr/include/c++/11/ext/string_conversions.h:83:31: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/string_conversions.h:83:31: missed: splitting region at dominance boundary bb20
harness.cpp:27:5: missed: not vectorized: statement can throw an exception: resx 107
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_169, _171);
harness.cpp:27:5: missed: not vectorized: statement can throw an exception: resx 16
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb16
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at loop 1 exit at bb17
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: not vectorized: statement can throw an exception: std::__cxx11::basic_string<char>::_M_replace (&mode, 0, _350, "perf", 4);
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at dominance boundary bb166
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at dominance boundary bb14
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at loop 1 exit at bb111
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: not vectorized: statement can throw an exception: std::__cxx11::basic_string<char>::_M_replace (&mode, 0, _347, "correct", 7);
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at dominance boundary bb112
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at dominance boundary bb165
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_175, _177);
harness.cpp:27:5: missed: not vectorized: statement can throw an exception: resx 14
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb53
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at loop 1 exit at bb177
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_75, _117);
harness.cpp:32:23: note: ***** Analysis failed with vector mode V2DI
harness.cpp:32:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:32:23: missed: splitting region at dominance boundary bb56
harness.cpp:32:23: note: ***** Analysis failed with vector mode VOID
harness.cpp:32:23: missed: splitting region at control altering definition objs = makeObjects (entries_439); [return slot optimization]
/usr/include/c++/11/bits/basic_string.h:6250:27: missed: statement clobbers memory: _114 = std::__cxx11::basic_string<char>::compare (&mode, "correct");
harness.cpp:52:25: missed: statement clobbers memory: t1 = std::chrono::_V2::system_clock::now ();
harness.cpp:53:55: missed: not vectorized: statement can throw an exception: objs = makeObjects (entries_439); [return slot optimization]
harness.cpp:53:55: note: ***** Analysis failed with vector mode VOID
harness.cpp:53:55: missed: splitting region at control altering definition res = queryAttributes (&op, &D.89962, &D.89964, &D.89966, 0); [return slot optimization]
ldap.hpp:40:19: missed: not vectorized: statement can throw an exception: std::vector<LdapObject>::operator=.isra (&op.results, &objs);
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (&D.89966.D.55603._M_local_buf, "(objectclass=*)", 15);
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (&D.89964.D.55603._M_local_buf, "cn", 2);
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (&D.89962.D.55603._M_local_buf, "dn", 2);
harness.cpp:57:50: missed: not vectorized: statement can throw an exception: res = queryAttributes (&op, &D.89962, &D.89964, &D.89966, 0); [return slot optimization]
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:98:4: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0xc8dfbb8 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)&op]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)&op]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)&op]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0xc8dfc30
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0xc8dfc30 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis for part in loop 0:
  Vector cost: 24
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0xc8dfbb8 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)&op]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)&op]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)&op]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0xc8dfc30
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0xc8dfc30 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_impl_data *)&op]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vect_is_simple_use: operand 0B, type of def: constant
/usr/include/c++/11/bits/stl_vector.h:98:4: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:98:4: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_impl_data *)&op]._M_start
/usr/include/c++/11/bits/stl_vector.h:98:4: note: created &MEM[(struct _Vector_impl_data *)&op]._M_start
/usr/include/c++/11/bits/stl_vector.h:98:4: note: add new stmt: MEM <vector(2) long unsigned int> [(struct LdapObject * *)&op] = { 0, 0 };
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:98:4: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at loop 2 exit at bb191
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_157, _159);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_154, _156);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_151, _153);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_464, _467);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_460, _462);
harness.cpp:55:23: note: ***** Analysis failed with vector mode V2DI
harness.cpp:55:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:55:23: missed: splitting region at dominance boundary bb91
harness.cpp:55:23: note: ***** Analysis failed with vector mode VOID
harness.cpp:55:23: missed: splitting region at control altering definition _160 = std::basic_ostream<char>::_M_insert<long int> (&cout, _162);
harness.cpp:60:25: missed: statement clobbers memory: t2 = std::chrono::_V2::system_clock::now ();
/usr/include/c++/11/ostream:616:18: missed: not vectorized: statement can throw an exception: std::__ostream_insert<char, std::char_traits<char> > (&cout, "Time: ", 6);
/usr/include/c++/11/ostream:167:25: missed: not vectorized: statement can throw an exception: _160 = std::basic_ostream<char>::_M_insert<long int> (&cout, _162);
/usr/include/c++/11/ostream:167:25: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/ostream:167:25: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ostream:167:25: missed: splitting region at dominance boundary bb94
/usr/include/c++/11/ostream:167:25: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:167:25: missed: splitting region at dominance boundary bb144
/usr/include/c++/11/ostream:616:18: missed: not vectorized: statement can throw an exception: std::__ostream_insert<char, std::char_traits<char> > (_160, " ms\n", 4);
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at dominance boundary bb96
harness.cpp:27:5: missed: not vectorized: statement can throw an exception: resx 99
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at dominance boundary bb159
/usr/include/c++/11/ostream:616:18: missed: not vectorized: statement can throw an exception: std::__ostream_insert<char, std::char_traits<char> > (&cerr, "", 0);
/usr/include/c++/11/bits/unordered_map.h:102:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (&MEM[(struct unordered_map *)&op + 32B]._M_h);
ldap.hpp:35:7: missed: statement clobbers memory: std::vector<LdapObject>::~vector (&op.results);
harness.cpp:66:1: missed: statement clobbers memory: std::vector<LdapObject>::~vector (&objs);
harness.cpp:66:1: note: ***** Analysis failed with vector mode VOID
harness.cpp:66:1: missed: splitting region at dominance boundary bb160
harness.cpp:66:1: note: ***** Analysis failed with vector mode VOID
harness.cpp:66:1: missed: splitting region at dominance boundary bb133
harness.cpp:66:1: note: ***** Analysis failed with vector mode VOID
harness.cpp:66:1: missed: splitting region at dominance boundary bb147
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_187, _189);
harness.cpp:27:5: missed: not vectorized: statement can throw an exception: resx 78
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_190, _192);
harness.cpp:27:5: missed: not vectorized: statement can throw an exception: resx 74
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_193, _195);
harness.cpp:27:5: missed: not vectorized: statement can throw an exception: resx 70
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb74
/usr/include/c++/11/bits/unordered_map.h:102:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (&MEM[(struct unordered_map *)&op + 32B]._M_h);
ldap.hpp:35:7: missed: statement clobbers memory: std::vector<LdapObject>::~vector (&op.results);
harness.cpp:27:5: missed: not vectorized: statement can throw an exception: resx 65
harness.cpp:66:1: missed: statement clobbers memory: std::vector<LdapObject>::~vector (&objs);
harness.cpp:27:5: missed: not vectorized: statement can throw an exception: resx 64
harness.cpp:66:1: note: ***** Analysis failed with vector mode VOID
harness.cpp:66:1: missed: splitting region at dominance boundary bb57
harness.cpp:66:1: note: ***** Analysis failed with vector mode VOID
harness.cpp:66:1: missed: splitting region at control altering definition objs = makeObjects (3); [return slot optimization]
harness.cpp:41:53: missed: not vectorized: statement can throw an exception: objs = makeObjects (3); [return slot optimization]
harness.cpp:41:53: note: ***** Analysis failed with vector mode VOID
harness.cpp:41:53: missed: splitting region at control altering definition result = queryAttributes (&op, &D.89760, &D.89762, &D.89764, 0); [return slot optimization]
ldap.hpp:40:19: missed: not vectorized: statement can throw an exception: std::vector<LdapObject>::operator=.isra (&op.results, &objs);
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (&D.89764.D.55603._M_local_buf, "(objectclass=*)", 15);
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (&D.89762.D.55603._M_local_buf, "cn", 2);
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (&D.89760.D.55603._M_local_buf, "dn", 2);
harness.cpp:43:53: missed: not vectorized: statement can throw an exception: result = queryAttributes (&op, &D.89760, &D.89762, &D.89764, 0); [return slot optimization]
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:98:4: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0xc8dfbb8 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)&op]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)&op]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)&op]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0xc8dfc30
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0xc8dfc30 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis for part in loop 0:
  Vector cost: 24
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0xc8dfbb8 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)&op]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)&op]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)&op]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0xc8dfc30
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0xc8dfc30 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_impl_data *)&op]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vect_is_simple_use: operand 0B, type of def: constant
/usr/include/c++/11/bits/stl_vector.h:98:4: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:98:4: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_impl_data *)&op]._M_start
/usr/include/c++/11/bits/stl_vector.h:98:4: note: created &MEM[(struct _Vector_impl_data *)&op]._M_start
/usr/include/c++/11/bits/stl_vector.h:98:4: note: add new stmt: MEM <vector(2) long unsigned int> [(struct LdapObject * *)&op] = { 0, 0 };
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:98:4: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at control altering definition _145 = std::basic_ostream<char>::_M_insert<long unsigned int> (&cout, sum_351);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_140, _142);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_137, _139);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_134, _136);
/usr/include/c++/11/ostream:171:25: missed: not vectorized: statement can throw an exception: _145 = std::basic_ostream<char>::_M_insert<long unsigned int> (&cout, sum_351);
/usr/include/c++/11/ostream:171:25: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/ostream:171:25: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ostream:171:25: missed: splitting region at dominance boundary bb70
/usr/include/c++/11/ostream:171:25: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:171:25: missed: splitting region at dominance boundary bb127
/usr/include/c++/11/ostream:616:18: missed: not vectorized: statement can throw an exception: std::__ostream_insert<char, std::char_traits<char> > (_145, "\n", 1);
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at dominance boundary bb72
harness.cpp:48:5: missed: statement clobbers memory: std::vector<std::__cxx11::basic_string<char> >::~vector (&result);
harness.cpp:27:5: missed: not vectorized: statement can throw an exception: resx 58
harness.cpp:48:5: note: ***** Analysis failed with vector mode VOID
harness.cpp:48:5: missed: splitting region at dominance boundary bb100
harness.cpp:48:5: missed: statement clobbers memory: std::vector<std::__cxx11::basic_string<char> >::~vector (&result);
/usr/include/c++/11/bits/unordered_map.h:102:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (&MEM[(struct unordered_map *)&op + 32B]._M_h);
ldap.hpp:35:7: missed: statement clobbers memory: std::vector<LdapObject>::~vector (&op.results);
harness.cpp:48:5: missed: statement clobbers memory: std::vector<LdapObject>::~vector (&objs);
harness.cpp:27:5: note: ***** Analysis failed with vector mode VOID
harness.cpp:27:5: missed: splitting region at dominance boundary bb158
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_166, _168);
harness.cpp:27:5: note: ***** Analysis failed with vector mode V2DI
harness.cpp:27:5: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:27:5: missed: splitting region at dominance boundary bb116
harness.cpp:27:5: note: ***** Analysis failed with vector mode VOID
harness.cpp:27:5: missed: splitting region at dominance boundary bb130
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_178, _180);
harness.cpp:27:5: missed: not vectorized: statement can throw an exception: resx 39
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_181, _183);
harness.cpp:27:5: missed: not vectorized: statement can throw an exception: resx 35
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_184, _186);
harness.cpp:27:5: missed: not vectorized: statement can throw an exception: resx 31
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb58
/usr/include/c++/11/bits/unordered_map.h:102:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (&MEM[(struct unordered_map *)&op + 32B]._M_h);
ldap.hpp:35:7: missed: statement clobbers memory: std::vector<LdapObject>::~vector (&op.results);
harness.cpp:27:5: missed: not vectorized: statement can throw an exception: resx 27
harness.cpp:48:5: missed: statement clobbers memory: std::vector<LdapObject>::~vector (&objs);
harness.cpp:27:5: missed: not vectorized: statement can throw an exception: resx 26
harness.cpp:48:5: note: ***** Analysis failed with vector mode VOID
harness.cpp:48:5: missed: splitting region at dominance boundary bb151
harness.cpp:48:5: note: ***** Analysis failed with vector mode VOID
harness.cpp:48:5: missed: splitting region at dominance boundary bb161
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_196, _198);
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/iostream:74:25: missed: statement clobbers memory: std::ios_base::Init::Init (&__ioinit);
/usr/include/c++/11/iostream:74:25: missed: statement clobbers memory: __cxxabiv1::__cxa_atexit (__dt_comp , &__ioinit, &__dso_handle);
harness.cpp:66:1: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:2333:23: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908.
/usr/include/c++/11/bits/basic_string.h:2333:23: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908 into const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/785.
/usr/include/c++/11/bits/basic_string.h:225:21: note: Considering inline candidate static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/288.
/usr/include/c++/11/bits/basic_string.h:225:21: optimized:  Inlining static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/288 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/929.
/usr/include/c++/11/bits/basic_string.h:225:29: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908.
/usr/include/c++/11/bits/basic_string.h:225:29: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/929.
/usr/include/c++/11/bits/basic_string.h:224:11: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/928.
/usr/include/c++/11/bits/basic_string.h:224:11: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/928 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/929.
/usr/include/c++/11/bits/char_traits.h:379:32: optimized:   Inlining constexpr bool std::__constant_char_array_p(const _CharT*, std::size_t) [with _CharT = char]/291 into static constexpr int std::char_traits<char>::compare(const char_type*, const char_type*, std::size_t)/292 (always_inline).
/usr/include/c++/11/bits/char_traits.h:378:32: optimized:   Inlining constexpr bool std::__constant_char_array_p(const _CharT*, std::size_t) [with _CharT = char]/291 into static constexpr int std::char_traits<char>::compare(const char_type*, const char_type*, std::size_t)/292 (always_inline).
/usr/include/c++/11/bits/char_traits.h:384:19: note: Considering inline candidate static constexpr bool std::char_traits<char>::lt(const char_type&, const char_type&)/290.
/usr/include/c++/11/bits/char_traits.h:384:19: optimized:  Inlining static constexpr bool std::char_traits<char>::lt(const char_type&, const char_type&)/290 into static constexpr int std::char_traits<char>::compare(const char_type*, const char_type*, std::size_t)/292.
/usr/include/c++/11/bits/char_traits.h:382:14: note: Considering inline candidate static constexpr bool std::char_traits<char>::lt(const char_type&, const char_type&)/290.
/usr/include/c++/11/bits/char_traits.h:382:14: optimized:  Inlining static constexpr bool std::char_traits<char>::lt(const char_type&, const char_type&)/290 into static constexpr int std::char_traits<char>::compare(const char_type*, const char_type*, std::size_t)/292.
/usr/include/c++/11/bits/basic_string.h:359:21: note: Considering inline candidate static std::char_traits<char>::char_type* std::char_traits<char>::copy(std::char_traits<char>::char_type*, const char_type*, std::size_t)/300.
/usr/include/c++/11/bits/basic_string.h:359:21: optimized:  Inlining static std::char_traits<char>::char_type* std::char_traits<char>::copy(std::char_traits<char>::char_type*, const char_type*, std::size_t)/300 into static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1446.
/usr/include/c++/11/bits/basic_string.h:357:23: note: Considering inline candidate static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/288.
/usr/include/c++/11/bits/basic_string.h:357:23: optimized:  Inlining static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/288 into static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1446.
/usr/include/c++/11/bits/basic_string.h:401:16: note: Considering inline candidate static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1446.
/usr/include/c++/11/bits/basic_string.h:401:16: optimized:  Inlining static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1446 into static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, _CharT*, _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1369.
/usr/include/c++/11/bits/basic_string.h:6876:37: note: Considering inline candidate static std::size_t std::_Hash_impl::hash(const void*, std::size_t, std::size_t)/97.
/usr/include/c++/11/bits/basic_string.h:6876:37: optimized:  Inlining static std::size_t std::_Hash_impl::hash(const void*, std::size_t, std::size_t)/97 into std::size_t std::hash<std::__cxx11::basic_string<char> >::operator()(const string&) const/512.
/usr/include/c++/11/bits/basic_string.h:6876:46: note: Considering inline candidate const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/785.
/usr/include/c++/11/bits/basic_string.h:6876:46: optimized:  Inlining const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/785 into std::size_t std::hash<std::__cxx11::basic_string<char> >::operator()(const string&) const/512.
/usr/include/c++/11/bits/basic_string.h:6876:37: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/786.
/usr/include/c++/11/bits/basic_string.h:6876:37: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/786 into std::size_t std::hash<std::__cxx11::basic_string<char> >::operator()(const string&) const/512.
/usr/include/c++/11/bits/basic_string.h:6237:45: note: Considering inline candidate static constexpr int std::char_traits<char>::compare(const char_type*, const char_type*, std::size_t)/292.
/usr/include/c++/11/bits/basic_string.h:6237:45: optimized:  Inlining static constexpr int std::char_traits<char>::compare(const char_type*, const char_type*, std::size_t)/292 into typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]/848.
/usr/include/c++/11/bits/basic_string.h:6237:45: note: Considering inline candidate const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/785.
/usr/include/c++/11/bits/basic_string.h:6237:45: optimized:  Inlining const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/785 into typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]/848.
/usr/include/c++/11/bits/basic_string.h:6237:45: note: Considering inline candidate const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/785.
/usr/include/c++/11/bits/basic_string.h:6237:45: optimized:  Inlining const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/785 into typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]/848.
/usr/include/c++/11/bits/basic_string.h:6237:45: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/699.
/usr/include/c++/11/bits/basic_string.h:6237:45: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/699 into typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]/848.
/usr/include/c++/11/bits/basic_string.h:6236:41: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/699.
/usr/include/c++/11/bits/basic_string.h:6236:41: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/699 into typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]/848.
/usr/include/c++/11/bits/basic_string.h:6236:25: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/699.
/usr/include/c++/11/bits/basic_string.h:6236:25: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/699 into typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]/848.
/usr/include/c++/11/initializer_list:79:51: note: Considering inline candidate constexpr std::initializer_list<_E>::size_type std::initializer_list<_E>::size() const [with _E = std::__cxx11::basic_string<char>]/876.
/usr/include/c++/11/initializer_list:79:51: optimized:  Inlining constexpr std::initializer_list<_E>::size_type std::initializer_list<_E>::size() const [with _E = std::__cxx11::basic_string<char>]/876 into constexpr const _E* std::initializer_list<_E>::end() const [with _E = std::__cxx11::basic_string<char>]/877.
/usr/include/c++/11/initializer_list:79:42: note: Considering inline candidate constexpr const _E* std::initializer_list<_E>::begin() const [with _E = std::__cxx11::basic_string<char>]/875.
/usr/include/c++/11/initializer_list:79:42: optimized:  Inlining constexpr const _E* std::initializer_list<_E>::begin() const [with _E = std::__cxx11::basic_string<char>]/875 into constexpr const _E* std::initializer_list<_E>::end() const [with _E = std::__cxx11::basic_string<char>]/877.
/usr/include/c++/11/bits/hashtable_policy.h:1210:7: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash<std::__cxx11::basic_string<char> >]/882.
/usr/include/c++/11/bits/hashtable_policy.h:1210:7: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash<std::__cxx11::basic_string<char> >]/882 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_Hash_code_base() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/550.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::equal_to<std::__cxx11::basic_string<char> >]/885.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::equal_to<std::__cxx11::basic_string<char> >]/885 into std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/553.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: note: Considering inline candidate std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_Hash_code_base() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/550.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: optimized:  Inlining std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_Hash_code_base() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/550 into std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/553.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = char]/913.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = char]/913 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/682.
/usr/include/c++/11/bits/basic_string.h:158:14: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/682.
/usr/include/c++/11/bits/basic_string.h:158:14: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/682 into std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/685.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__cxx11::basic_string<char>]/995.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__cxx11::basic_string<char>]/995 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/853.
/usr/include/c++/11/bits/stl_vector.h:128:14: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/853.
/usr/include/c++/11/bits/stl_vector.h:128:14: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/853 into std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl::~_Vector_impl()/527.
/usr/include/c++/11/bits/basic_string.h:833:16: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1002.
/usr/include/c++/11/bits/basic_string.h:833:16: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1002 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::end() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/862.
/usr/include/c++/11/bits/basic_string.h:833:47: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/699.
/usr/include/c++/11/bits/basic_string.h:833:47: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/699 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::end() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/862.
/usr/include/c++/11/bits/basic_string.h:833:32: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908.
/usr/include/c++/11/bits/basic_string.h:833:32: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::end() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/862.
/usr/include/c++/11/bits/basic_string.h:817:16: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1002.
/usr/include/c++/11/bits/basic_string.h:817:16: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1002 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::begin() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/861.
/usr/include/c++/11/bits/basic_string.h:817:32: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908.
/usr/include/c++/11/bits/basic_string.h:817:32: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::begin() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/861.
/usr/include/c++/11/bits/allocator.h:156:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__cxx11::basic_string<char>]/1039.
/usr/include/c++/11/bits/allocator.h:156:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__cxx11::basic_string<char>]/1039 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__cxx11::basic_string<char>]/873.
/usr/include/c++/11/bits/stl_vector.h:133:19: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_impl_data::_Vector_impl_data() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/992.
/usr/include/c++/11/bits/stl_vector.h:133:19: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_impl_data::_Vector_impl_data() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/992 into std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/850.
/usr/include/c++/11/bits/stl_vector.h:133:19: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__cxx11::basic_string<char>]/873.
/usr/include/c++/11/bits/stl_vector.h:133:19: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__cxx11::basic_string<char>]/873 into std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/850.
/usr/include/c++/11/bits/stl_vector.h:288:7: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/850.
/usr/include/c++/11/bits/stl_vector.h:288:7: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/850 into std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/530.
/usr/include/c++/11/bits/stl_vector.h:487:7: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/530.
/usr/include/c++/11/bits/stl_vector.h:487:7: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/530 into std::vector<_Tp, _Alloc>::vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/533.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:141:29: note: Considering inline candidate constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const std::__cxx11::basic_string<char>*]/1045.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:141:29: optimized:  Inlining constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const std::__cxx11::basic_string<char>*]/1045 into constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*]/1046.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1052.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1052 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/891.
/usr/include/c++/11/bits/hashtable_policy.h:1124:12: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/891.
/usr/include/c++/11/bits/hashtable_policy.h:1124:12: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/891 into std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >, true>::~_Hashtable_ebo_helper()/556.
/usr/include/c++/11/bits/hashtable_policy.h:1802:12: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >, true>::~_Hashtable_ebo_helper()/556.
/usr/include/c++/11/bits/hashtable_policy.h:1802:12: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >, true>::~_Hashtable_ebo_helper()/556 into std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> > >::~_Hashtable_alloc()/562.
/usr/include/c++/11/bits/stl_vector.h:821:16: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1057.
/usr/include/c++/11/bits/stl_vector.h:821:16: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1057 into std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/896.
/usr/include/c++/11/bits/stl_vector.h:839:16: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1057.
/usr/include/c++/11/bits/stl_vector.h:839:16: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1057 into std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/897.
/usr/include/c++/11/bits/stl_iterator.h:1182:40: note: Considering inline candidate const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1059.
/usr/include/c++/11/bits/stl_iterator.h:1182:40: optimized:  Inlining const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1059 into bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/898.
/usr/include/c++/11/bits/stl_iterator.h:1182:24: note: Considering inline candidate const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1059.
/usr/include/c++/11/bits/stl_iterator.h:1182:24: optimized:  Inlining const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1059 into bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/898.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = char]/1074.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = char]/1074 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = char]/1075.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = char]/1075.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = char]/1075 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = char]/1076.
/usr/include/c++/11/bits/basic_string.h:201:49: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = char]/1076.
/usr/include/c++/11/bits/basic_string.h:201:49: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = char]/1076 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/915.
/usr/include/c++/11/bits/hashtable_policy.h:300:33: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/1126.
/usr/include/c++/11/bits/hashtable_policy.h:300:33: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/1126 into void std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_M_incr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/989.
/usr/include/c++/11/bits/hashtable_policy.h:403:15: note: Considering inline candidate void std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_M_incr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/989.
/usr/include/c++/11/bits/hashtable_policy.h:403:15: optimized:  Inlining void std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_M_incr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/989 into std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>& std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::operator++() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/846.
/usr/include/c++/11/bits/stl_iterator.h:1182:40: note: Considering inline candidate const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1130.
/usr/include/c++/11/bits/stl_iterator.h:1182:40: optimized:  Inlining const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1130 into bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1004.
/usr/include/c++/11/bits/stl_iterator.h:1182:24: note: Considering inline candidate const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1130.
/usr/include/c++/11/bits/stl_iterator.h:1182:24: optimized:  Inlining const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1130 into bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1004.
/usr/include/c++/11/bits/stl_algo.h:4295:22: note: Considering inline candidate bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1004.
/usr/include/c++/11/bits/stl_algo.h:4295:22: optimized:  Inlining bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1004 into _OIter std::transform(_IIter, _IIter, _OIter, _UnaryOperation) [with _IIter = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; _OIter = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; _UnaryOperation = LdapObject::to_lower(const string&)::<lambda(unsigned char)>]/863.
/usr/include/c++/11/bits/stl_algo.h:4295:50: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1005.
/usr/include/c++/11/bits/stl_algo.h:4295:50: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1005 into _OIter std::transform(_IIter, _IIter, _OIter, _UnaryOperation) [with _IIter = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; _OIter = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; _UnaryOperation = LdapObject::to_lower(const string&)::<lambda(unsigned char)>]/863.
/usr/include/c++/11/bits/stl_algo.h:4295:33: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1005.
/usr/include/c++/11/bits/stl_algo.h:4295:33: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1005 into _OIter std::transform(_IIter, _IIter, _OIter, _UnaryOperation) [with _IIter = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; _OIter = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; _UnaryOperation = LdapObject::to_lower(const string&)::<lambda(unsigned char)>]/863.
/usr/include/c++/11/bits/stl_algo.h:4296:2: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1006.
/usr/include/c++/11/bits/stl_algo.h:4296:2: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1006 into _OIter std::transform(_IIter, _IIter, _OIter, _UnaryOperation) [with _IIter = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; _OIter = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; _UnaryOperation = LdapObject::to_lower(const string&)::<lambda(unsigned char)>]/863.
/usr/include/c++/11/bits/stl_algo.h:4296:24: note: Considering inline candidate LdapObject::to_lower(const string&)::<lambda(unsigned char)>/536.
/usr/include/c++/11/bits/stl_algo.h:4296:24: optimized:  Inlining LdapObject::to_lower(const string&)::<lambda(unsigned char)>/536 into _OIter std::transform(_IIter, _IIter, _OIter, _UnaryOperation) [with _IIter = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; _OIter = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; _UnaryOperation = LdapObject::to_lower(const string&)::<lambda(unsigned char)>]/863.
/usr/include/c++/11/bits/stl_algo.h:4296:25: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1006.
/usr/include/c++/11/bits/stl_algo.h:4296:25: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = char*; _Container = std::__cxx11::basic_string<char>]/1006 into _OIter std::transform(_IIter, _IIter, _OIter, _UnaryOperation) [with _IIter = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; _OIter = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; _UnaryOperation = LdapObject::to_lower(const string&)::<lambda(unsigned char)>]/863.
/usr/include/c++/11/bits/hashtable_policy.h:1834:40: note: Considering inline candidate _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_get() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1152.
/usr/include/c++/11/bits/hashtable_policy.h:1834:40: optimized:  Inlining _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_get() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1152 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1024.
/usr/include/c++/11/bits/hashtable.h:322:20: note: Considering inline candidate constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/1158.
/usr/include/c++/11/bits/hashtable.h:322:20: optimized:  Inlining constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/1158 into static constexpr typename std::conditional<std::is_lvalue_reference<_Ht>::value, const _Value&, _Value&&>::type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__fwd_value_for(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::value_type&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1159.
/usr/include/c++/11/bits/allocator.h:156:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1177.
/usr/include/c++/11/bits/allocator.h:156:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1177 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1049.
/usr/include/c++/11/bits/hashtable_policy.h:1127:63: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1049.
/usr/include/c++/11/bits/hashtable_policy.h:1127:63: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1049 into std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/888.
/usr/include/c++/11/bits/hashtable_policy.h:1823:7: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/888.
/usr/include/c++/11/bits/hashtable_policy.h:1823:7: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/888 into std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/559.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)/135.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)/135 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/565.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Hash_node_base::_Hash_node_base()/128.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Hash_node_base::_Hash_node_base()/128 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/565.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/559.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/559 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/565.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/553.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/553 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/565.
/usr/include/c++/11/bits/unordered_set.h:135:7: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/565.
/usr/include/c++/11/bits/unordered_set.h:135:7: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/565 into std::unordered_set<_Value, _Hash, _Pred, _Alloc>::unordered_set() [with _Value = std::__cxx11::basic_string<char>; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/568.
/usr/include/c++/11/bits/stl_vector.h:830:16: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1201.
/usr/include/c++/11/bits/stl_vector.h:830:16: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1201 into std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1063.
/usr/include/c++/11/bits/stl_vector.h:812:16: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1201.
/usr/include/c++/11/bits/stl_vector.h:812:16: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1201 into std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1204.
/usr/include/c++/11/bits/stl_iterator.h:1271:39: note: Considering inline candidate const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1207.
/usr/include/c++/11/bits/stl_iterator.h:1271:39: optimized:  Inlining const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1207 into typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1205.
/usr/include/c++/11/bits/stl_iterator.h:1271:24: note: Considering inline candidate const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1207.
/usr/include/c++/11/bits/stl_iterator.h:1271:24: optimized:  Inlining const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1207 into typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1205.
/usr/include/c++/11/bits/allocator.h:160:34: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = std::__cxx11::basic_string<char>]/1210.
/usr/include/c++/11/bits/allocator.h:160:34: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = std::__cxx11::basic_string<char>]/1210 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__cxx11::basic_string<char>]/1069.
/usr/include/c++/11/bits/alloc_traits.h:563:16: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__cxx11::basic_string<char>]/1069.
/usr/include/c++/11/bits/alloc_traits.h:563:16: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__cxx11::basic_string<char>]/1069 into static std::allocator_traits<std::allocator<_Tp1> >::allocator_type std::allocator_traits<std::allocator<_Tp1> >::select_on_container_copy_construction(const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>]/1118.
/usr/include/c++/11/ext/alloc_traits.h:98:67: note: Considering inline candidate static std::allocator_traits<std::allocator<_Tp1> >::allocator_type std::allocator_traits<std::allocator<_Tp1> >::select_on_container_copy_construction(const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>]/1118.
/usr/include/c++/11/ext/alloc_traits.h:98:67: optimized:  Inlining static std::allocator_traits<std::allocator<_Tp1> >::allocator_type std::allocator_traits<std::allocator<_Tp1> >::select_on_container_copy_construction(const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>]/1118 into static constexpr _Alloc __gnu_cxx::__alloc_traits<_Alloc, <template-parameter-1-2> >::_S_select_on_copy(const _Alloc&) [with _Alloc = std::allocator<std::__cxx11::basic_string<char> >; <template-parameter-1-2> = std::__cxx11::basic_string<char>]/980.
/usr/include/c++/11/bits/stl_vector.h:137:22: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_impl_data::_Vector_impl_data() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/992.
/usr/include/c++/11/bits/stl_vector.h:137:22: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_impl_data::_Vector_impl_data() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/992 into std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1120.
/usr/include/c++/11/bits/stl_vector.h:137:22: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__cxx11::basic_string<char>]/1069.
/usr/include/c++/11/bits/stl_vector.h:137:22: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__cxx11::basic_string<char>]/1069 into std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1120.
/usr/include/c++/11/bits/stl_vector.h:294:9: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1120.
/usr/include/c++/11/bits/stl_vector.h:294:9: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1120 into std::_Vector_base<_Tp, _Alloc>::_Vector_base(const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1042.
/usr/include/c++/11/bits/allocator.h:160:34: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = char]/1213.
/usr/include/c++/11/bits/allocator.h:160:34: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = char]/1213 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1078.
/usr/include/c++/11/bits/alloc_traits.h:563:16: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1078.
/usr/include/c++/11/bits/alloc_traits.h:563:16: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1078 into static std::allocator_traits<std::allocator<_Tp1> >::allocator_type std::allocator_traits<std::allocator<_Tp1> >::select_on_container_copy_construction(const allocator_type&) [with _Tp = char]/1128.
/usr/include/c++/11/ext/alloc_traits.h:98:67: note: Considering inline candidate static std::allocator_traits<std::allocator<_Tp1> >::allocator_type std::allocator_traits<std::allocator<_Tp1> >::select_on_container_copy_construction(const allocator_type&) [with _Tp = char]/1128.
/usr/include/c++/11/ext/alloc_traits.h:98:67: optimized:  Inlining static std::allocator_traits<std::allocator<_Tp1> >::allocator_type std::allocator_traits<std::allocator<_Tp1> >::select_on_container_copy_construction(const allocator_type&) [with _Tp = char]/1128 into static constexpr _Alloc __gnu_cxx::__alloc_traits<_Alloc, <template-parameter-1-2> >::_S_select_on_copy(const _Alloc&) [with _Alloc = std::allocator<char>; <template-parameter-1-2> = char]/998.
/usr/include/c++/11/bits/basic_string.h:168:46: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1078.
/usr/include/c++/11/bits/basic_string.h:168:46: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1078 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/923.
/usr/include/c++/11/bits/basic_string.h:168:28: note: Considering inline candidate constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<char>&]/921.
/usr/include/c++/11/bits/basic_string.h:168:28: optimized:  Inlining constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<char>&]/921 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/923.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = const char]/1216.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = const char]/1216 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = const char]/1217.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = const char]/1217.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = const char]/1217 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const char]/1218.
/usr/include/c++/11/bits/basic_string.h:211:55: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const char]/1218.
/usr/include/c++/11/bits/basic_string.h:211:55: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const char]/1218 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1081.
/usr/include/c++/11/bits/basic_string.h:230:42: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1081.
/usr/include/c++/11/bits/basic_string.h:230:42: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1081 into bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/925.
/usr/include/c++/11/bits/basic_string.h:230:23: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908.
/usr/include/c++/11/bits/basic_string.h:230:23: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908 into bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/925.
/usr/include/c++/11/bits/basic_string.h:584:21: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/929.
/usr/include/c++/11/bits/basic_string.h:584:21: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/929 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/697.
/usr/include/c++/11/bits/basic_string.h:583:15: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/926.
/usr/include/c++/11/bits/basic_string.h:583:15: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/926 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/697.
/usr/include/c++/11/bits/basic_string.h:583:15: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/915.
/usr/include/c++/11/bits/basic_string.h:583:15: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/915 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/697.
/usr/include/c++/11/bits/basic_string.h:582:11: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/928.
/usr/include/c++/11/bits/basic_string.h:582:11: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/928 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/697.
/usr/include/c++/11/bits/basic_string.h:582:11: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/786.
/usr/include/c++/11/bits/basic_string.h:582:11: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/786 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/697.
/usr/include/c++/11/bits/basic_string.h:576:17: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/927.
/usr/include/c++/11/bits/basic_string.h:576:17: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/927 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/697.
/usr/include/c++/11/bits/basic_string.h:575:13: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/926.
/usr/include/c++/11/bits/basic_string.h:575:13: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/926 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/697.
/usr/include/c++/11/bits/basic_string.h:575:13: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908.
/usr/include/c++/11/bits/basic_string.h:575:13: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/697.
/usr/include/c++/11/bits/basic_string.h:570:23: note: Considering inline candidate static std::char_traits<char>::char_type* std::char_traits<char>::copy(std::char_traits<char>::char_type*, const char_type*, std::size_t)/300.
/usr/include/c++/11/bits/basic_string.h:570:23: optimized:  Inlining static std::char_traits<char>::char_type* std::char_traits<char>::copy(std::char_traits<char>::char_type*, const char_type*, std::size_t)/300 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/697.
/usr/include/c++/11/bits/basic_string.h:568:23: note: Considering inline candidate bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/925.
/usr/include/c++/11/bits/basic_string.h:568:23: optimized:  Inlining bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/925 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/697.
/usr/include/c++/11/bits/basic_string.h:566:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/923.
/usr/include/c++/11/bits/basic_string.h:566:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/923 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/697.
/usr/include/c++/11/bits/basic_string.h:566:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/915.
/usr/include/c++/11/bits/basic_string.h:566:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/915 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/697.
/usr/include/c++/11/bits/basic_string.h:566:47: note: Considering inline candidate constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<char>&]/921.
/usr/include/c++/11/bits/basic_string.h:566:47: optimized:  Inlining constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<char>&]/921 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/697.
/usr/include/c++/11/bits/basic_string.h:566:70: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/920.
/usr/include/c++/11/bits/basic_string.h:566:70: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/920 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/697.
/usr/include/c++/11/bits/hashtable_policy.h:1233:28: note: Considering inline candidate std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/133.
/usr/include/c++/11/bits/hashtable_policy.h:1233:28: optimized:  Inlining std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/133 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1255.
/usr/include/c++/11/bits/hashtable.h:795:49: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1255.
/usr/include/c++/11/bits/hashtable.h:795:49: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1255 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1112.
/usr/include/c++/11/bits/hashtable_policy.h:386:24: note: Considering inline candidate std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_Node_iterator_base(std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::__node_type*) [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/1258.
/usr/include/c++/11/bits/hashtable_policy.h:386:24: optimized:  Inlining std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_Node_iterator_base(std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::__node_type*) [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/1258 into std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::_Node_const_iterator(std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/1115.
/usr/include/c++/11/bits/hashtable.h:626:16: note: Considering inline candidate std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::_Node_const_iterator(std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/1115.
/usr/include/c++/11/bits/hashtable.h:626:16: optimized:  Inlining std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::_Node_const_iterator(std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/1115 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/988.
/usr/include/c++/11/bits/hashtable.h:626:16: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1027.
/usr/include/c++/11/bits/hashtable.h:626:16: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1027 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/988.
/usr/include/c++/11/bits/unordered_map.h:335:26: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/988.
/usr/include/c++/11/bits/unordered_map.h:335:26: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/988 into std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::begin() const [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/845.
/usr/include/c++/11/bits/hashtable.h:634:16: note: Considering inline candidate std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::_Node_const_iterator(std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/1115.
/usr/include/c++/11/bits/hashtable.h:634:16: optimized:  Inlining std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::_Node_const_iterator(std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/1115 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::end() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/977.
/usr/include/c++/11/bits/unordered_map.h:357:24: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::end() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/977.
/usr/include/c++/11/bits/unordered_map.h:357:24: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::end() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/977 into std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::end() const [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/836.
/usr/include/c++/11/ext/aligned_buffer.h:115:41: note: Considering inline candidate void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/1260.
/usr/include/c++/11/ext/aligned_buffer.h:115:41: optimized:  Inlining void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/1260 into _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/1117.
/usr/include/c++/11/bits/hashtable_policy.h:238:33: note: Considering inline candidate _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/1117.
/usr/include/c++/11/bits/hashtable_policy.h:238:33: optimized:  Inlining _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/1117 into _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/978.
/usr/include/c++/11/bits/hashtable_policy.h:398:39: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/978.
/usr/include/c++/11/bits/hashtable_policy.h:398:39: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/978 into const value_type* std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::operator->() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/838.
/usr/include/c++/11/bits/hashtable_policy.h:246:26: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/978.
/usr/include/c++/11/bits/hashtable_policy.h:246:26: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/978 into _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/990.
/usr/include/c++/11/bits/hashtable_policy.h:394:34: note: Considering inline candidate _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/990.
/usr/include/c++/11/bits/hashtable_policy.h:394:34: optimized:  Inlining _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/990 into const value_type& std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::operator*() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/847.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__cxx11::basic_string<char>]/1264.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__cxx11::basic_string<char>]/1264 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__cxx11::basic_string<char>]/1127.
/usr/include/c++/11/bits/stl_vector.h:354:19: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__cxx11::basic_string<char>]/1127.
/usr/include/c++/11/bits/stl_vector.h:354:19: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__cxx11::basic_string<char>]/1127 into void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/997.
/usr/include/c++/11/bits/stl_vector.h:337:7: note: Considering inline candidate std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl::~_Vector_impl()/527.
/usr/include/c++/11/bits/stl_vector.h:337:7: optimized:  Inlining std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl::~_Vector_impl()/527 into std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/856.
/usr/include/c++/11/bits/stl_vector.h:335:15: note: Considering inline candidate void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/997.
/usr/include/c++/11/bits/stl_vector.h:335:15: optimized:  Inlining void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/997 into std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/856.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:141:29: note: Considering inline candidate constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = char*]/1266.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:141:29: optimized:  Inlining constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = char*]/1266 into constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = char*]/1267.
/usr/include/c++/11/bits/hashtable_policy.h:277:12: note: Considering inline candidate std::__detail::_Hash_node_base::_Hash_node_base()/128.
/usr/include/c++/11/bits/hashtable_policy.h:277:12: optimized:  Inlining std::__detail::_Hash_node_base::_Hash_node_base()/128 into std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>::_Hash_node()/1289.
/usr/include/c++/11/bits/hashtable_policy.h:1251:28: note: Considering inline candidate std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/133.
/usr/include/c++/11/bits/hashtable_policy.h:1251:28: optimized:  Inlining std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/133 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, true>&, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1293.
/usr/include/c++/11/bits/hashtable.h:791:49: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, true>&, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1293.
/usr/include/c++/11/bits/hashtable.h:791:49: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, true>&, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1293 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1164.
/usr/include/c++/11/bits/hashtable.h:410:30: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1164.
/usr/include/c++/11/bits/hashtable.h:410:30: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1164 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1292.
/usr/include/c++/11/bits/hashtable.h:410:40: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1027.
/usr/include/c++/11/bits/hashtable.h:410:40: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1027 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1292.
/usr/include/c++/11/bits/hashtable.h:409:14: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1027.
/usr/include/c++/11/bits/hashtable.h:409:14: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1027 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1292.
/usr/include/c++/11/bits/hashtable.h:417:18: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1292.
/usr/include/c++/11/bits/hashtable.h:417:18: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1292 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1163.
/usr/include/c++/11/bits/hashtable_policy.h:86:33: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061.
/usr/include/c++/11/bits/hashtable_policy.h:86:33: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061 into _Tp&& std::__detail::_Identity::operator()(_Tp&&) const [with _Tp = const std::__cxx11::basic_string<char>&]/1302.
/usr/include/c++/11/bits/stl_pair.h:353:59: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool]/584.
/usr/include/c++/11/bits/stl_pair.h:353:59: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool]/584 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>; _T2 = bool]/1311.
/usr/include/c++/11/bits/stl_pair.h:353:27: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>]/1309.
/usr/include/c++/11/bits/stl_pair.h:353:27: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>]/1309 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>; _T2 = bool]/1311.
/usr/include/c++/11/bits/stl_pair.h:353:59: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool]/584.
/usr/include/c++/11/bits/stl_pair.h:353:59: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool]/584 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>&; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>; _T2 = bool]/1323.
/usr/include/c++/11/bits/stl_pair.h:353:27: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>&]/1321.
/usr/include/c++/11/bits/stl_pair.h:353:27: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>&]/1321 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>&; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>; _T2 = bool]/1323.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = char]/1328.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = char]/1328 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = char]/1215.
/usr/include/c++/11/bits/basic_string.h:245:34: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = char]/1215.
/usr/include/c++/11/bits/basic_string.h:245:34: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = char]/1215 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1080.
/usr/include/c++/11/bits/basic_string.h:245:51: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/920.
/usr/include/c++/11/bits/basic_string.h:245:51: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/920 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1080.
/usr/include/c++/11/bits/basic_string.h:245:34: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908.
/usr/include/c++/11/bits/basic_string.h:245:34: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1080.
/usr/include/c++/11/bits/basic_string.h:240:14: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1080.
/usr/include/c++/11/bits/basic_string.h:240:14: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1080 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/919.
/usr/include/c++/11/bits/basic_string.h:239:18: note: Considering inline candidate bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/925.
/usr/include/c++/11/bits/basic_string.h:239:18: optimized:  Inlining bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/925 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/919.
/usr/include/c++/11/bits/basic_string.h:672:23: note: Considering inline candidate std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/685.
/usr/include/c++/11/bits/basic_string.h:672:23: optimized:  Inlining std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/685 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691.
/usr/include/c++/11/bits/basic_string.h:672:19: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/919.
/usr/include/c++/11/bits/basic_string.h:672:19: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/919 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691.
/usr/include/c++/11/ext/new_allocator.h:168:13: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691.
/usr/include/c++/11/ext/new_allocator.h:168:13: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691 into void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::__cxx11::basic_string<char>; _Tp = std::__cxx11::basic_string<char>]/1327.
/usr/include/c++/11/bits/alloc_traits.h:535:15: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::__cxx11::basic_string<char>; _Tp = std::__cxx11::basic_string<char>]/1327.
/usr/include/c++/11/bits/alloc_traits.h:535:15: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::__cxx11::basic_string<char>; _Tp = std::__cxx11::basic_string<char>]/1327 into static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::__cxx11::basic_string<char>; _Tp = std::__cxx11::basic_string<char>]/1208.
/usr/include/c++/11/bits/hashtable_policy.h:1276:51: note: Considering inline candidate const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 1; _Tp = std::hash<std::__cxx11::basic_string<char> >]/1364.
/usr/include/c++/11/bits/hashtable_policy.h:1276:51: optimized:  Inlining const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 1; _Tp = std::hash<std::__cxx11::basic_string<char> >]/1364 into const _Hash& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1254.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: note: Considering inline candidate std::size_t std::hash<std::__cxx11::basic_string<char> >::operator()(const string&) const/512.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: optimized:  Inlining std::size_t std::hash<std::__cxx11::basic_string<char> >::operator()(const string&) const/512 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1111.
/usr/include/c++/11/bits/hashtable_policy.h:1219:16: note: Considering inline candidate const _Hash& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1254.
/usr/include/c++/11/bits/hashtable_policy.h:1219:16: optimized:  Inlining const _Hash& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1254 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1111.
/usr/include/c++/11/bits/stl_construct.h:151:22: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691.
/usr/include/c++/11/bits/stl_construct.h:151:22: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691 into constexpr void std::_Destroy(_Tp*) [with _Tp = std::__cxx11::basic_string<char>]/1367.
/usr/include/c++/11/bits/stl_construct.h:163:19: note: Considering inline candidate constexpr void std::_Destroy(_Tp*) [with _Tp = std::__cxx11::basic_string<char>]/1367.
/usr/include/c++/11/bits/stl_construct.h:163:19: optimized:  Inlining constexpr void std::_Destroy(_Tp*) [with _Tp = std::__cxx11::basic_string<char>]/1367 into static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/1263.
/usr/include/c++/11/bits/stl_construct.h:163:19: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__cxx11::basic_string<char>]/1262.
/usr/include/c++/11/bits/stl_construct.h:163:19: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__cxx11::basic_string<char>]/1262 into static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/1263.
/usr/include/c++/11/bits/stl_construct.h:196:11: note: Considering inline candidate static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/1263.
/usr/include/c++/11/bits/stl_construct.h:196:11: missed:   will not early inline: void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*]/1125->static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/1263, growth 8 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/alloc_traits.h:848:15: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*]/1125.
/usr/include/c++/11/bits/alloc_traits.h:848:15: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*]/1125 into void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/987.
/usr/include/c++/11/bits/stl_vector.h:683:7: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/856.
/usr/include/c++/11/bits/stl_vector.h:683:7: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/856 into std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/843.
/usr/include/c++/11/bits/stl_vector.h:680:15: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/987.
/usr/include/c++/11/bits/stl_vector.h:680:15: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/987 into std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/843.
/usr/include/c++/11/bits/stl_vector.h:681:28: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/985.
/usr/include/c++/11/bits/stl_vector.h:681:28: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/985 into std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/843.
/usr/include/c++/11/bits/basic_string.tcc:232:15: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/929.
/usr/include/c++/11/bits/basic_string.tcc:232:15: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/929 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1268.
/usr/include/c++/11/bits/basic_string.tcc:225:25: note: Considering inline candidate static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, _CharT*, _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1369.
/usr/include/c++/11/bits/basic_string.tcc:225:25: optimized:  Inlining static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, _CharT*, _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1369 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1268.
/usr/include/c++/11/bits/basic_string.tcc:225:25: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908.
/usr/include/c++/11/bits/basic_string.tcc:225:25: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1268.
/usr/include/c++/11/bits/basic_string.tcc:220:17: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/927.
/usr/include/c++/11/bits/basic_string.tcc:220:17: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/927 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1268.
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/926.
/usr/include/c++/11/bits/basic_string.tcc:219:13: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/926 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1268.
/usr/include/c++/11/bits/basic_string.tcc:215:57: note: Considering inline candidate constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = char*]/1267.
/usr/include/c++/11/bits/basic_string.tcc:215:57: optimized:  Inlining constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = char*]/1267 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1268.
/usr/include/c++/11/bits/basic_string.tcc:211:34: note: Considering inline candidate bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = char]/1368.
/usr/include/c++/11/bits/basic_string.tcc:211:34: optimized:  Inlining bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = char]/1368 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1268.
/usr/include/c++/11/bits/basic_string.h:255:23: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1268.
/usr/include/c++/11/bits/basic_string.h:255:23: missed:   will not early inline: void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1129->void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1268, growth 24 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/basic_string.h:274:20: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1129.
/usr/include/c++/11/bits/basic_string.h:274:20: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1129 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1000.
/usr/include/c++/11/bits/basic_string.h:459:74: note: Considering inline candidate std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/685.
/usr/include/c++/11/bits/basic_string.h:459:74: optimized:  Inlining std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/685 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859.
/usr/include/c++/11/bits/basic_string.h:459:21: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1000.
/usr/include/c++/11/bits/basic_string.h:459:21: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1000 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859.
/usr/include/c++/11/bits/basic_string.h:459:21: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908.
/usr/include/c++/11/bits/basic_string.h:459:21: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859.
/usr/include/c++/11/bits/basic_string.h:459:69: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/786.
/usr/include/c++/11/bits/basic_string.h:459:69: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/786 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859.
/usr/include/c++/11/bits/basic_string.h:459:52: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908.
/usr/include/c++/11/bits/basic_string.h:459:52: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/908 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859.
/usr/include/c++/11/bits/basic_string.h:457:9: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/682.
/usr/include/c++/11/bits/basic_string.h:457:9: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/682 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859.
/usr/include/c++/11/bits/basic_string.h:457:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/923.
/usr/include/c++/11/bits/basic_string.h:457:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/923 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859.
/usr/include/c++/11/bits/basic_string.h:457:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/915.
/usr/include/c++/11/bits/basic_string.h:457:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/915 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859.
/usr/include/c++/11/bits/basic_string.h:457:9: note: Considering inline candidate static constexpr _Alloc __gnu_cxx::__alloc_traits<_Alloc, <template-parameter-1-2> >::_S_select_on_copy(const _Alloc&) [with _Alloc = std::allocator<char>; <template-parameter-1-2> = char]/998.
/usr/include/c++/11/bits/basic_string.h:457:9: optimized:  Inlining static constexpr _Alloc __gnu_cxx::__alloc_traits<_Alloc, <template-parameter-1-2> >::_S_select_on_copy(const _Alloc&) [with _Alloc = std::allocator<char>; <template-parameter-1-2> = char]/998 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859.
/usr/include/c++/11/bits/basic_string.h:458:62: note: Considering inline candidate const allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/999.
/usr/include/c++/11/bits/basic_string.h:458:62: optimized:  Inlining const allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/999 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859.
/usr/include/c++/11/bits/stl_construct.h:119:7: note: Considering inline candidate void operator delete(void*, void*)/76.
/usr/include/c++/11/bits/stl_construct.h:119:7: optimized:  Inlining void operator delete(void*, void*)/76 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]/1366.
/usr/include/c++/11/bits/stl_construct.h:119:7: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859.
/usr/include/c++/11/bits/stl_construct.h:119:7: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]/1366.
/usr/include/c++/11/bits/stl_construct.h:119:7: note: Considering inline candidate void* operator new(std::size_t, void*)/74.
/usr/include/c++/11/bits/stl_construct.h:119:7: optimized:  Inlining void* operator new(std::size_t, void*)/74 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]/1366.
/usr/include/c++/11/bits/stl_construct.h:119:48: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061.
/usr/include/c++/11/bits/stl_construct.h:119:48: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]/1366.
/usr/include/c++/11/bits/stl_uninitialized.h:97:21: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*]/1125.
/usr/include/c++/11/bits/stl_uninitialized.h:97:21: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*]/1125 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1261.
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: Considering inline candidate bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/898.
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: optimized:  Inlining bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/898 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1261.
/usr/include/c++/11/bits/stl_uninitialized.h:91:34: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/899.
/usr/include/c++/11/bits/stl_uninitialized.h:91:34: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/899 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1261.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: note: Considering inline candidate void std::_Construct(_Tp*, _Args&& ...) [with _Tp = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]/1366.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: optimized:  Inlining void std::_Construct(_Tp*, _Args&& ...) [with _Tp = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]/1366 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1261.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__cxx11::basic_string<char>]/1262.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__cxx11::basic_string<char>]/1262 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1261.
/usr/include/c++/11/bits/stl_uninitialized.h:92:45: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/900.
/usr/include/c++/11/bits/stl_uninitialized.h:92:45: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/900 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1261.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: note: Considering inline candidate static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1261.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: missed:   will not early inline: _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*]/1124->static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1261, call is cold and code would grow at least by 27
/usr/include/c++/11/bits/stl_uninitialized.h:333:37: note: Considering inline candidate _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*]/1124.
/usr/include/c++/11/bits/stl_uninitialized.h:333:37: optimized:  Inlining _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*]/1124 into _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/986.
/workspace/benchmarks/dataset_659/ldap.hpp:30:23: note: Considering inline candidate _OIter std::transform(_IIter, _IIter, _OIter, _UnaryOperation) [with _IIter = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; _OIter = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; _UnaryOperation = LdapObject::to_lower(const string&)::<lambda(unsigned char)>]/863.
/workspace/benchmarks/dataset_659/ldap.hpp:30:23: optimized:  Inlining _OIter std::transform(_IIter, _IIter, _OIter, _UnaryOperation) [with _IIter = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; _OIter = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; _UnaryOperation = LdapObject::to_lower(const string&)::<lambda(unsigned char)>]/863 into static std::string LdapObject::to_lower(const string&)/539.
/workspace/benchmarks/dataset_659/ldap.hpp:30:23: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::begin() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/861.
/workspace/benchmarks/dataset_659/ldap.hpp:30:23: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::begin() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/861 into static std::string LdapObject::to_lower(const string&)/539.
/workspace/benchmarks/dataset_659/ldap.hpp:30:23: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::end() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/862.
/workspace/benchmarks/dataset_659/ldap.hpp:30:23: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::end() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/862 into static std::string LdapObject::to_lower(const string&)/539.
/workspace/benchmarks/dataset_659/ldap.hpp:30:23: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::begin() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/861.
/workspace/benchmarks/dataset_659/ldap.hpp:30:23: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::begin() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/861 into static std::string LdapObject::to_lower(const string&)/539.
/workspace/benchmarks/dataset_659/ldap.hpp:29:25: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859.
/workspace/benchmarks/dataset_659/ldap.hpp:29:25: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859 into static std::string LdapObject::to_lower(const string&)/539.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate void operator delete(void*, void*)/76.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining void operator delete(void*, void*)/76 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>]/1199.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>]/1199.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate void* operator new(std::size_t, void*)/74.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining void* operator new(std::size_t, void*)/74 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>]/1199.
/usr/include/c++/11/ext/new_allocator.h:162:46: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061.
/usr/include/c++/11/ext/new_allocator.h:162:46: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>]/1199.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>]/1199.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>]/1199 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>]/1062.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>]/1062.
/usr/include/c++/11/bits/stl_pair.h:211:12: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691.
/usr/include/c++/11/bits/stl_pair.h:211:12: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691 into std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/1397.
/usr/include/c++/11/bits/stl_pair.h:211:12: note: Considering inline candidate std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/843.
/usr/include/c++/11/bits/stl_pair.h:211:12: missed:   will not early inline: std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/1397->std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/843, growth 9 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/ext/new_allocator.h:168:13: note: Considering inline candidate std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/1397.
/usr/include/c++/11/ext/new_allocator.h:168:13: missed:   will not early inline: void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1399->std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/1397, growth 7 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/alloc_traits.h:535:15: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1399.
/usr/include/c++/11/bits/alloc_traits.h:535:15: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1399 into static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1283.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1400.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1400 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1401.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1401.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1401 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1402.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1404.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1404 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1405.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1405.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1405 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/1406.
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__cxx11::basic_string<char>]/1420.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__cxx11::basic_string<char>]/1420 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__cxx11::basic_string<char>]/1421.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__cxx11::basic_string<char>]/1421.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__cxx11::basic_string<char>]/1296->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__cxx11::basic_string<char>]/1421, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_vector.h:346:33: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__cxx11::basic_string<char>]/1296.
/usr/include/c++/11/bits/stl_vector.h:346:33: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__cxx11::basic_string<char>]/1296 into std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1174.
/usr/include/c++/11/bits/stl_vector.h:361:44: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1174.
/usr/include/c++/11/bits/stl_vector.h:361:44: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1174 into void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1122.
/usr/include/c++/11/bits/stl_vector.h:305:33: note: Considering inline candidate std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl::~_Vector_impl()/527.
/usr/include/c++/11/bits/stl_vector.h:305:33: optimized:  Inlining std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl::~_Vector_impl()/527 into std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/983.
/usr/include/c++/11/bits/stl_vector.h:305:26: note: Considering inline candidate void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1122.
/usr/include/c++/11/bits/stl_vector.h:305:26: missed:   will not early inline: std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/983->void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1122, growth 8 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_vector.h:304:9: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1120.
/usr/include/c++/11/bits/stl_vector.h:304:9: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1120 into std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/983.
/usr/include/c++/11/bits/stl_vector.h:561:7: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/856.
/usr/include/c++/11/bits/stl_vector.h:561:7: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/856 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840.
/usr/include/c++/11/bits/stl_vector.h:555:61: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/853.
/usr/include/c++/11/bits/stl_vector.h:555:61: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/853 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840.
/usr/include/c++/11/bits/stl_vector.h:558:31: note: Considering inline candidate _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/986.
/usr/include/c++/11/bits/stl_vector.h:558:31: optimized:  Inlining _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/986 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840.
/usr/include/c++/11/bits/stl_vector.h:558:31: note: Considering inline candidate std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/896.
/usr/include/c++/11/bits/stl_vector.h:558:31: optimized:  Inlining std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/896 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840.
/usr/include/c++/11/bits/stl_vector.h:558:31: note: Considering inline candidate std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/897.
/usr/include/c++/11/bits/stl_vector.h:558:31: optimized:  Inlining std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/897 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840.
/usr/include/c++/11/bits/stl_vector.h:560:30: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/985.
/usr/include/c++/11/bits/stl_vector.h:560:30: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/985 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840.
/usr/include/c++/11/bits/stl_vector.h:555:61: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/853.
/usr/include/c++/11/bits/stl_vector.h:555:61: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/853 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840.
/usr/include/c++/11/bits/stl_vector.h:555:61: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/983.
/usr/include/c++/11/bits/stl_vector.h:555:61: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/983 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840.
/usr/include/c++/11/bits/stl_vector.h:555:61: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/979.
/usr/include/c++/11/bits/stl_vector.h:555:61: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/979 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840.
/usr/include/c++/11/bits/stl_vector.h:555:61: note: Considering inline candidate static constexpr _Alloc __gnu_cxx::__alloc_traits<_Alloc, <template-parameter-1-2> >::_S_select_on_copy(const _Alloc&) [with _Alloc = std::allocator<std::__cxx11::basic_string<char> >; <template-parameter-1-2> = std::__cxx11::basic_string<char>]/980.
/usr/include/c++/11/bits/stl_vector.h:555:61: optimized:  Inlining static constexpr _Alloc __gnu_cxx::__alloc_traits<_Alloc, <template-parameter-1-2> >::_S_select_on_copy(const _Alloc&) [with _Alloc = std::allocator<std::__cxx11::basic_string<char> >; <template-parameter-1-2> = std::__cxx11::basic_string<char>]/980 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840.
/usr/include/c++/11/bits/stl_vector.h:555:58: note: Considering inline candidate const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/981.
/usr/include/c++/11/bits/stl_vector.h:555:58: optimized:  Inlining const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/981 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840.
/usr/include/c++/11/bits/stl_uninitialized.h:97:21: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*]/1125.
/usr/include/c++/11/bits/stl_uninitialized.h:97:21: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*]/1125 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1422.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: note: Considering inline candidate void std::_Construct(_Tp*, _Args&& ...) [with _Tp = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]/1366.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: optimized:  Inlining void std::_Construct(_Tp*, _Args&& ...) [with _Tp = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]/1366 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1422.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__cxx11::basic_string<char>]/1262.
/usr/include/c++/11/bits/stl_uninitialized.h:92:18: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__cxx11::basic_string<char>]/1262 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1422.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: note: Considering inline candidate static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1422.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: missed:   will not early inline: _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*]/1297->static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1422, call is cold and code would grow at least by 27
/usr/include/c++/11/bits/stl_uninitialized.h:333:37: note: Considering inline candidate _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*]/1297.
/usr/include/c++/11/bits/stl_uninitialized.h:333:37: optimized:  Inlining _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*]/1297 into _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/1175.
/usr/include/c++/11/bits/hashtable_policy.h:1276:51: note: Considering inline candidate const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 1; _Tp = std::hash<std::__cxx11::basic_string<char> >]/1364.
/usr/include/c++/11/bits/hashtable_policy.h:1276:51: optimized:  Inlining const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 1; _Tp = std::hash<std::__cxx11::basic_string<char> >]/1364 into const _Hash& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1430.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: note: Considering inline candidate std::size_t std::hash<std::__cxx11::basic_string<char> >::operator()(const string&) const/512.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: optimized:  Inlining std::size_t std::hash<std::__cxx11::basic_string<char> >::operator()(const string&) const/512 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1303.
/usr/include/c++/11/bits/hashtable_policy.h:1219:16: note: Considering inline candidate const _Hash& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1430.
/usr/include/c++/11/bits/hashtable_policy.h:1219:16: optimized:  Inlining const _Hash& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1430 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1303.
/usr/include/c++/11/bits/hashtable_policy.h:1233:28: note: Considering inline candidate std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/133.
/usr/include/c++/11/bits/hashtable_policy.h:1233:28: optimized:  Inlining std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/133 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1431.
/usr/include/c++/11/bits/hashtable.h:795:49: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1431.
/usr/include/c++/11/bits/hashtable.h:795:49: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1431 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1304.
/usr/include/c++/11/bits/hashtable_policy.h:339:24: note: Considering inline candidate std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_Node_iterator_base(std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::__node_type*) [with _Value = std::__cxx11::basic_string<char>; bool _Cache_hash_code = true]/1434.
/usr/include/c++/11/bits/hashtable_policy.h:339:24: optimized:  Inlining std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_Node_iterator_base(std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::__node_type*) [with _Value = std::__cxx11::basic_string<char>; bool _Cache_hash_code = true]/1434 into std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::__cxx11::basic_string<char>; bool __constant_iterators = true; bool __cache = true]/1307.
/usr/include/c++/11/bits/hashtable_policy.h:277:12: note: Considering inline candidate std::__detail::_Hash_node_base::_Hash_node_base()/128.
/usr/include/c++/11/bits/hashtable_policy.h:277:12: optimized:  Inlining std::__detail::_Hash_node_base::_Hash_node_base()/128 into std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>::_Hash_node()/1437.
/usr/include/c++/11/utility:234:43: note: Considering inline candidate static constexpr const _Tp1& std::__pair_get<0>::__const_get(const std::pair<_T1, _T2>&) [with _Tp1 = const std::__cxx11::basic_string<char>; _Tp2 = std::vector<std::__cxx11::basic_string<char> >]/1460.
/usr/include/c++/11/utility:234:43: optimized:  Inlining static constexpr const _Tp1& std::__pair_get<0>::__const_get(const std::pair<_T1, _T2>&) [with _Tp1 = const std::__cxx11::basic_string<char>; _Tp2 = std::vector<std::__cxx11::basic_string<char> >]/1460 into constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&) [with long unsigned int _Int = 0; _Tp1 = const std::__cxx11::basic_string<char>; _Tp2 = std::vector<std::__cxx11::basic_string<char> >]/1461.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: note: Considering inline candidate constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&) [with long unsigned int _Int = 0; _Tp1 = const std::__cxx11::basic_string<char>; _Tp2 = std::vector<std::__cxx11::basic_string<char> >]/1461.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: optimized:  Inlining constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&) [with long unsigned int _Int = 0; _Tp1 = const std::__cxx11::basic_string<char>; _Tp2 = std::vector<std::__cxx11::basic_string<char> >]/1461 into decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/1462.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/1160.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/1160 into decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/1462.
/usr/include/c++/11/bits/stl_function.h:370:20: note: Considering inline candidate typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]/848.
/usr/include/c++/11/bits/stl_function.h:370:20: missed:   will not early inline: constexpr bool std::equal_to<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = std::__cxx11::basic_string<char>]/1463->typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]/848, growth 9 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1483.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1483 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1403.
/usr/include/c++/11/bits/hashtable_policy.h:1905:38: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1403.
/usr/include/c++/11/bits/hashtable_policy.h:1905:38: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1403 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1284.
/usr/include/c++/11/bits/hashtable_policy.h:1905:56: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1024.
/usr/include/c++/11/bits/hashtable_policy.h:1905:56: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1024 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1284.
/usr/include/c++/11/bits/hashtable_policy.h:1903:57: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1402.
/usr/include/c++/11/bits/hashtable_policy.h:1903:57: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1402 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1284.
/usr/include/c++/11/bits/hashtable_policy.h:1895:29: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1284.
/usr/include/c++/11/bits/hashtable_policy.h:1895:29: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1284 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1155.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1283.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1283 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1155.
/usr/include/c++/11/bits/hashtable_policy.h:1894:53: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1024.
/usr/include/c++/11/bits/hashtable_policy.h:1894:53: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1024 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1155.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/978.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/978 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1155.
/usr/include/c++/11/bits/hashtable_policy.h:1916:22: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1155.
/usr/include/c++/11/bits/hashtable_policy.h:1916:22: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1155 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1028.
/usr/include/c++/11/bits/hashtable_policy.h:1915:22: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/1126.
/usr/include/c++/11/bits/hashtable_policy.h:1915:22: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/1126 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1028.
/usr/include/c++/11/bits/hashtable.h:2320:32: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1028.
/usr/include/c++/11/bits/hashtable.h:2320:32: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1165->void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1028, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable.h:2320:32: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1027.
/usr/include/c++/11/bits/hashtable.h:2320:32: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1027 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1165.
/usr/include/c++/11/bits/hashtable_policy.h:119:33: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1028.
/usr/include/c++/11/bits/hashtable_policy.h:119:33: missed:   will not early inline: std::__detail::_ReuseOrAllocNode<_NodeAlloc>::~_ReuseOrAllocNode() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1170->void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1028, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/allocator.h:169:53: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/1485.
/usr/include/c++/11/bits/allocator.h:169:53: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/1485 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>; _Tp = std::__detail::_Hash_node_base*]/1428.
/usr/include/c++/11/bits/allocator.h:169:53: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/1485.
/usr/include/c++/11/bits/allocator.h:169:53: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/1485 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>; _Tp = std::__detail::_Hash_node_base*]/1408.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/1488.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/1488 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1411.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1490.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1490 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1413.
/usr/include/c++/11/bits/hashtable_policy.h:1943:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1411.
/usr/include/c++/11/bits/hashtable_policy.h:1943:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1411 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1286.
/usr/include/c++/11/bits/hashtable_policy.h:1942:41: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1413.
/usr/include/c++/11/bits/hashtable_policy.h:1942:41: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1413 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1286.
/usr/include/c++/11/bits/hashtable_policy.h:1941:28: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>; _Tp = std::__detail::_Hash_node_base*]/1408.
/usr/include/c++/11/bits/hashtable_policy.h:1941:28: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>; _Tp = std::__detail::_Hash_node_base*]/1408 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1286.
/usr/include/c++/11/bits/hashtable_policy.h:1941:53: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1024.
/usr/include/c++/11/bits/hashtable_policy.h:1941:53: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1024 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1286.
/usr/include/c++/11/bits/hashtable_policy.h:1940:57: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/1406.
/usr/include/c++/11/bits/hashtable_policy.h:1940:57: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/1406 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1286.
/usr/include/c++/11/bits/hashtable.h:449:42: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1286.
/usr/include/c++/11/bits/hashtable.h:449:42: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1286 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1156.
/usr/include/c++/11/bits/hashtable.h:446:27: note: Considering inline candidate bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_uses_single_bucket(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1285.
/usr/include/c++/11/bits/hashtable.h:446:27: optimized:  Inlining bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_uses_single_bucket(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1285 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1156.
/usr/include/c++/11/bits/hashtable.h:454:30: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1156.
/usr/include/c++/11/bits/hashtable.h:454:30: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1156 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1029.
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node_base*]/1491.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node_base*]/1491 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/1492.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/1492.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1414->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/1492, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1411.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1411 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1287.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1411.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1411 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1287.
/usr/include/c++/11/bits/hashtable_policy.h:1928:44: note: Considering inline candidate constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node_base*]/1415.
/usr/include/c++/11/bits/hashtable_policy.h:1928:44: optimized:  Inlining constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node_base*]/1415 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1287.
/usr/include/c++/11/bits/hashtable_policy.h:1927:52: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1414.
/usr/include/c++/11/bits/hashtable_policy.h:1927:52: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1414 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1287.
/usr/include/c++/11/bits/hashtable_policy.h:1925:28: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>; _Tp = std::__detail::_Hash_node_base*]/1408.
/usr/include/c++/11/bits/hashtable_policy.h:1925:28: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>; _Tp = std::__detail::_Hash_node_base*]/1408 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1287.
/usr/include/c++/11/bits/hashtable_policy.h:1925:53: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1024.
/usr/include/c++/11/bits/hashtable_policy.h:1925:53: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1024 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1287.
/usr/include/c++/11/bits/hashtable.h:440:47: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1287.
/usr/include/c++/11/bits/hashtable.h:440:47: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1157->std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1287, growth 6 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1493.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1493 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1494.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1494.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1416->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1494, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_pair.h:314:17: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691.
/usr/include/c++/11/bits/stl_pair.h:314:17: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691 into std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/1496.
/usr/include/c++/11/bits/stl_pair.h:314:17: note: Considering inline candidate std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840.
/usr/include/c++/11/bits/stl_pair.h:314:17: missed:   will not early inline: std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/1496->std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840, call is cold and code would grow at least by 20
/usr/include/c++/11/bits/stl_pair.h:314:17: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859.
/usr/include/c++/11/bits/stl_pair.h:314:17: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859 into std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/1496.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate void operator delete(void*, void*)/76.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining void operator delete(void*, void*)/76 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1498.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/1496.
/usr/include/c++/11/ext/new_allocator.h:162:4: missed:   will not early inline: void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1498->std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/1496, call is cold and code would grow at least by 17
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate void* operator new(std::size_t, void*)/74.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining void* operator new(std::size_t, void*)/74 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1498.
/usr/include/c++/11/ext/new_allocator.h:162:46: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/1160.
/usr/include/c++/11/ext/new_allocator.h:162:46: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/1160 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1498.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1498.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1498 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1418.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/1160.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/1160 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1418.
/usr/include/c++/11/bits/hashtable_policy.h:1885:37: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1403.
/usr/include/c++/11/bits/hashtable_policy.h:1885:37: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1403 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1291.
/usr/include/c++/11/bits/hashtable_policy.h:1885:55: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1024.
/usr/include/c++/11/bits/hashtable_policy.h:1885:55: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1024 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1291.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1418.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1418 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1291.
/usr/include/c++/11/bits/hashtable_policy.h:1878:54: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1024.
/usr/include/c++/11/bits/hashtable_policy.h:1878:54: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1024 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1291.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/978.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/978 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1291.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/1160.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/1160 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1291.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: note: Considering inline candidate std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>::_Hash_node()/1289.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: optimized:  Inlining std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>::_Hash_node()/1289 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1291.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: note: Considering inline candidate void* operator new(std::size_t, void*)/74.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: optimized:  Inlining void* operator new(std::size_t, void*)/74 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1291.
/usr/include/c++/11/bits/hashtable_policy.h:1874:36: note: Considering inline candidate constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1417.
/usr/include/c++/11/bits/hashtable_policy.h:1874:36: optimized:  Inlining constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1417 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1291.
/usr/include/c++/11/bits/hashtable_policy.h:1873:45: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1416.
/usr/include/c++/11/bits/hashtable_policy.h:1873:45: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1416 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1291.
/usr/include/c++/11/bits/hashtable_policy.h:1873:63: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1024.
/usr/include/c++/11/bits/hashtable_policy.h:1873:63: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1024 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1291.
/usr/include/c++/11/bits/hashtable_policy.h:139:32: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1284.
/usr/include/c++/11/bits/hashtable_policy.h:139:32: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1284 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294.
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1291.
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed:   will not early inline: std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294->std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1291, call is cold and code would grow at least by 24
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/1160.
/usr/include/c++/11/bits/hashtable_policy.h:144:32: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/1160 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294.
/usr/include/c++/11/bits/hashtable_policy.h:134:35: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1418.
/usr/include/c++/11/bits/hashtable_policy.h:134:35: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&}; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1418 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294.
/usr/include/c++/11/bits/hashtable_policy.h:134:35: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/978.
/usr/include/c++/11/bits/hashtable_policy.h:134:35: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/978 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294.
/usr/include/c++/11/bits/hashtable_policy.h:134:35: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/1160.
/usr/include/c++/11/bits/hashtable_policy.h:134:35: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/1160 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294.
/usr/include/c++/11/bits/hashtable_policy.h:131:36: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1283.
/usr/include/c++/11/bits/hashtable_policy.h:131:36: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Tp = std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>]/1283 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294.
/usr/include/c++/11/bits/hashtable_policy.h:131:36: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/978.
/usr/include/c++/11/bits/hashtable_policy.h:131:36: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/978 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294.
/usr/include/c++/11/bits/hashtable_policy.h:130:42: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1024.
/usr/include/c++/11/bits/hashtable_policy.h:130:42: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1024 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294.
/usr/include/c++/11/bits/hashtable_policy.h:128:36: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/1126.
/usr/include/c++/11/bits/hashtable_policy.h:128:36: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/1126 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294.
/usr/include/c++/11/bits/hashtable.h:1327:29: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1029.
/usr/include/c++/11/bits/hashtable.h:1327:29: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1029 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172.
/usr/include/c++/11/bits/hashtable.h:1325:11: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1165.
/usr/include/c++/11/bits/hashtable.h:1325:11: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1165, growth 9 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable.h:1312:71: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/1126.
/usr/include/c++/11/bits/hashtable.h:1312:71: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/1126 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172.
/usr/include/c++/11/bits/hashtable.h:1317:36: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1164.
/usr/include/c++/11/bits/hashtable.h:1317:36: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1164 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172.
/usr/include/c++/11/bits/hashtable.h:1316:21: note: Considering inline candidate void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_copy_code(std::__detail::_Hash_node_code_cache<true>&, const std::__detail::_Hash_node_code_cache<true>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1162.
/usr/include/c++/11/bits/hashtable.h:1316:21: optimized:  Inlining void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_copy_code(std::__detail::_Hash_node_code_cache<true>&, const std::__detail::_Hash_node_code_cache<true>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1162 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172.
/usr/include/c++/11/bits/hashtable.h:1314:24: note: Considering inline candidate std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294.
/usr/include/c++/11/bits/hashtable.h:1314:24: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172->std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294, growth 30 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/hashtable.h:1314:45: note: Considering inline candidate static constexpr typename std::conditional<std::is_lvalue_reference<_Ht>::value, const _Value&, _Value&&>::type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__fwd_value_for(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::value_type&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1159.
/usr/include/c++/11/bits/hashtable.h:1314:45: optimized:  Inlining static constexpr typename std::conditional<std::is_lvalue_reference<_Ht>::value, const _Value&, _Value&&>::type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__fwd_value_for(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::value_type&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1159 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172.
/usr/include/c++/11/bits/hashtable.h:1314:58: note: Considering inline candidate _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/990.
/usr/include/c++/11/bits/hashtable.h:1314:58: optimized:  Inlining _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/990 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172.
/usr/include/c++/11/bits/hashtable.h:1312:35: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/1126.
/usr/include/c++/11/bits/hashtable.h:1312:35: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/1126 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172.
/usr/include/c++/11/bits/hashtable.h:1308:22: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1163.
/usr/include/c++/11/bits/hashtable.h:1308:22: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_update_bbegin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1163 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172.
/usr/include/c++/11/bits/hashtable.h:1307:24: note: Considering inline candidate void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_copy_code(std::__detail::_Hash_node_code_cache<true>&, const std::__detail::_Hash_node_code_cache<true>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1162.
/usr/include/c++/11/bits/hashtable.h:1307:24: optimized:  Inlining void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_copy_code(std::__detail::_Hash_node_code_cache<true>&, const std::__detail::_Hash_node_code_cache<true>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1162 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172.
/usr/include/c++/11/bits/hashtable.h:1306:20: note: Considering inline candidate std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294.
/usr/include/c++/11/bits/hashtable.h:1306:20: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172->std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294, growth 30 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/hashtable.h:1306:41: note: Considering inline candidate static constexpr typename std::conditional<std::is_lvalue_reference<_Ht>::value, const _Value&, _Value&&>::type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__fwd_value_for(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::value_type&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1159.
/usr/include/c++/11/bits/hashtable.h:1306:41: optimized:  Inlining static constexpr typename std::conditional<std::is_lvalue_reference<_Ht>::value, const _Value&, _Value&&>::type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__fwd_value_for(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::value_type&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1159 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172.
/usr/include/c++/11/bits/hashtable.h:1306:54: note: Considering inline candidate _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/990.
/usr/include/c++/11/bits/hashtable.h:1306:54: optimized:  Inlining _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/990 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172.
/usr/include/c++/11/bits/hashtable.h:1304:39: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1027.
/usr/include/c++/11/bits/hashtable.h:1304:39: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1027 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172.
/usr/include/c++/11/bits/hashtable.h:1295:48: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1157.
/usr/include/c++/11/bits/hashtable.h:1295:48: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1157 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172.
/usr/include/c++/11/bits/hashtable.h:1273:28: note: Considering inline candidate void std::__detail::_Prime_rehash_policy::_M_reset(std::__detail::_Prime_rehash_policy::_State)/141.
/usr/include/c++/11/bits/hashtable.h:1273:28: optimized:  Inlining void std::__detail::_Prime_rehash_policy::_M_reset(std::__detail::_Prime_rehash_policy::_State)/141 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037.
/usr/include/c++/11/bits/hashtable.h:1272:24: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1029.
/usr/include/c++/11/bits/hashtable.h:1272:24: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1029 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037.
/usr/include/c++/11/bits/hashtable.h:1266:4: note: Considering inline candidate std::__detail::_ReuseOrAllocNode<_NodeAlloc>::~_ReuseOrAllocNode() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1170.
/usr/include/c++/11/bits/hashtable.h:1266:4: optimized:  Inlining std::__detail::_ReuseOrAllocNode<_NodeAlloc>::~_ReuseOrAllocNode() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1170 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037.
/usr/include/c++/11/bits/hashtable.h:1266:4: note: Considering inline candidate std::__detail::_ReuseOrAllocNode<_NodeAlloc>::~_ReuseOrAllocNode() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1170.
/usr/include/c++/11/bits/hashtable.h:1266:4: optimized:  Inlining std::__detail::_ReuseOrAllocNode<_NodeAlloc>::~_ReuseOrAllocNode() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1170 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037.
/usr/include/c++/11/bits/hashtable.h:1265:29: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1156.
/usr/include/c++/11/bits/hashtable.h:1265:29: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1156 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037.
/usr/include/c++/11/bits/hashtable.h:1263:15: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172.
/usr/include/c++/11/bits/hashtable.h:1263:15: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172, call is cold and code would grow at least by 56
/usr/include/c++/11/bits/hashtable.h:1263:15: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&]/1036.
/usr/include/c++/11/bits/hashtable.h:1263:15: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&]/1036 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037.
/usr/include/c++/11/bits/hashtable.h:1261:34: note: Considering inline candidate std::__detail::_ReuseOrAllocNode<_NodeAlloc>::_ReuseOrAllocNode(std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type*, std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__hashtable_alloc&) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1167.
/usr/include/c++/11/bits/hashtable.h:1261:34: optimized:  Inlining std::__detail::_ReuseOrAllocNode<_NodeAlloc>::_ReuseOrAllocNode(std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type*, std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__hashtable_alloc&) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1167 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037.
/usr/include/c++/11/bits/hashtable.h:1261:34: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1027.
/usr/include/c++/11/bits/hashtable.h:1261:34: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1027 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037.
/usr/include/c++/11/bits/hashtable.h:1258:51: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&]/1036.
/usr/include/c++/11/bits/hashtable.h:1258:51: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&]/1036 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037.
/usr/include/c++/11/bits/hashtable.h:1249:38: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1157.
/usr/include/c++/11/bits/hashtable.h:1249:38: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1157 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037.
/usr/include/c++/11/bits/hashtable.h:1244:66: note: Considering inline candidate std::__detail::_Prime_rehash_policy::_State std::__detail::_Prime_rehash_policy::_M_state() const/139.
/usr/include/c++/11/bits/hashtable.h:1244:66: optimized:  Inlining std::__detail::_Prime_rehash_policy::_State std::__detail::_Prime_rehash_policy::_M_state() const/139 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037.
/usr/include/c++/11/bits/hashtable.h:1228:25: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037.
/usr/include/c++/11/bits/hashtable.h:1228:25: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>& std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::operator=(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/871->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037, call is cold and code would grow at least by 68
/usr/include/c++/11/bits/unordered_map.h:272:7: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>& std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::operator=(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/871.
/usr/include/c++/11/bits/unordered_map.h:272:7: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>& std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::operator=(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/871 into std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator=(const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&) [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/543.
/workspace/benchmarks/dataset_659/ldap.hpp:8:7: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator=(const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&) [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/543.
/workspace/benchmarks/dataset_659/ldap.hpp:8:7: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator=(const std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>&) [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/543 into LdapObject& LdapObject::operator=(const LdapObject&)/544.
/workspace/benchmarks/dataset_659/ldap.hpp:53:36: note: Considering inline candidate LdapObject& LdapObject::operator=(const LdapObject&)/544.
/workspace/benchmarks/dataset_659/ldap.hpp:53:36: optimized:  Inlining LdapObject& LdapObject::operator=(const LdapObject&)/544 into int LdapOperation::waitForResult(int, int)/545.
/workspace/benchmarks/dataset_659/ldap.hpp:53:36: note: Considering inline candidate std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/868.
/workspace/benchmarks/dataset_659/ldap.hpp:53:36: optimized:  Inlining std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/868 into int LdapOperation::waitForResult(int, int)/545.
/workspace/benchmarks/dataset_659/ldap.hpp:52:31: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/867.
/workspace/benchmarks/dataset_659/ldap.hpp:52:31: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = LdapObject; _Alloc = std::allocator<LdapObject>]/867 into int LdapOperation::waitForResult(int, int)/545.
/usr/include/c++/11/ext/new_allocator.h:155:27: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__cxx11::basic_string<char>]/1420.
/usr/include/c++/11/ext/new_allocator.h:155:27: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__cxx11::basic_string<char>]/1420 into __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::__cxx11::basic_string<char>]/1499.
/usr/include/c++/11/bits/alloc_traits.h:550:21: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::__cxx11::basic_string<char>]/1499.
/usr/include/c++/11/bits/alloc_traits.h:550:21: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::__cxx11::basic_string<char>]/1499 into static std::allocator_traits<std::allocator<_Tp1> >::size_type std::allocator_traits<std::allocator<_Tp1> >::max_size(const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>]/1419.
/usr/include/c++/11/bits/stl_vector.h:1784:19: note: Considering inline candidate constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = long unsigned int]/148.
/usr/include/c++/11/bits/stl_vector.h:1784:19: optimized:  Inlining constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = long unsigned int]/148 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1295.
/usr/include/c++/11/bits/stl_vector.h:1783:51: note: Considering inline candidate static std::allocator_traits<std::allocator<_Tp1> >::size_type std::allocator_traits<std::allocator<_Tp1> >::max_size(const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>]/1419.
/usr/include/c++/11/bits/stl_vector.h:1783:51: optimized:  Inlining static std::allocator_traits<std::allocator<_Tp1> >::size_type std::allocator_traits<std::allocator<_Tp1> >::max_size(const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>]/1419 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1295.
/usr/include/c++/11/bits/stl_vector.h:1769:24: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/853.
/usr/include/c++/11/bits/stl_vector.h:1769:24: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/853 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1173.
/usr/include/c++/11/bits/stl_vector.h:1769:23: note: Considering inline candidate static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1295.
/usr/include/c++/11/bits/stl_vector.h:1769:23: optimized:  Inlining static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1295 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1173.
/usr/include/c++/11/bits/stl_vector.h:1769:24: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__cxx11::basic_string<char>]/1069.
/usr/include/c++/11/bits/stl_vector.h:1769:24: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__cxx11::basic_string<char>]/1069 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1173.
/usr/include/c++/11/bits/stl_vector.h:1585:33: note: Considering inline candidate _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/1175.
/usr/include/c++/11/bits/stl_vector.h:1585:33: optimized:  Inlining _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/1175 into void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1047.
/usr/include/c++/11/bits/stl_vector.h:1587:25: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/985.
/usr/include/c++/11/bits/stl_vector.h:1587:25: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/985 into void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1047.
/usr/include/c++/11/bits/stl_vector.h:1582:25: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1174.
/usr/include/c++/11/bits/stl_vector.h:1582:25: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1174 into void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1047.
/usr/include/c++/11/bits/stl_vector.h:1582:25: note: Considering inline candidate static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1173.
/usr/include/c++/11/bits/stl_vector.h:1582:25: optimized:  Inlining static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1173 into void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1047.
/usr/include/c++/11/bits/stl_vector.h:1582:68: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/985.
/usr/include/c++/11/bits/stl_vector.h:1582:68: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/985 into void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1047.
/usr/include/c++/11/bits/stl_vector.h:1580:39: note: Considering inline candidate constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*]/1046.
/usr/include/c++/11/bits/stl_vector.h:1580:39: optimized:  Inlining constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*]/1046 into void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1047.
/usr/include/c++/11/bits/stl_vector.h:631:7: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/856.
/usr/include/c++/11/bits/stl_vector.h:631:7: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/856 into std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/879.
/usr/include/c++/11/bits/stl_vector.h:629:21: note: Considering inline candidate void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1047.
/usr/include/c++/11/bits/stl_vector.h:629:21: missed:   will not early inline: std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/879->void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1047, growth 16 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/stl_vector.h:629:21: note: Considering inline candidate constexpr const _E* std::initializer_list<_E>::begin() const [with _E = std::__cxx11::basic_string<char>]/875.
/usr/include/c++/11/bits/stl_vector.h:629:21: optimized:  Inlining constexpr const _E* std::initializer_list<_E>::begin() const [with _E = std::__cxx11::basic_string<char>]/875 into std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/879.
/usr/include/c++/11/bits/stl_vector.h:629:21: note: Considering inline candidate constexpr const _E* std::initializer_list<_E>::end() const [with _E = std::__cxx11::basic_string<char>]/877.
/usr/include/c++/11/bits/stl_vector.h:629:21: optimized:  Inlining constexpr const _E* std::initializer_list<_E>::end() const [with _E = std::__cxx11::basic_string<char>]/877 into std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/879.
/usr/include/c++/11/bits/stl_vector.h:627:18: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_base(const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1042.
/usr/include/c++/11/bits/stl_vector.h:627:18: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_base(const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1042 into std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/879.
/usr/include/c++/11/bits/stl_vector.h:924:27: note: Considering inline candidate static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1295.
/usr/include/c++/11/bits/stl_vector.h:924:27: optimized:  Inlining static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1295 into std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1325.
/usr/include/c++/11/bits/stl_vector.h:924:47: note: Considering inline candidate const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/981.
/usr/include/c++/11/bits/stl_vector.h:924:47: optimized:  Inlining const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/981 into std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1325.
/usr/include/c++/11/bits/stl_vector.h:1762:58: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1325.
/usr/include/c++/11/bits/stl_vector.h:1762:58: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1325 into std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1203.
/usr/include/c++/11/bits/stl_vector.h:1762:44: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1325.
/usr/include/c++/11/bits/stl_vector.h:1762:44: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1325 into std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1203.
/usr/include/c++/11/bits/stl_vector.h:1762:22: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/979.
/usr/include/c++/11/bits/stl_vector.h:1762:22: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/979 into std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1203.
/usr/include/c++/11/bits/stl_vector.h:1761:45: note: Considering inline candidate constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int]/583.
/usr/include/c++/11/bits/stl_vector.h:1761:45: optimized:  Inlining constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int]/583 into std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1203.
/usr/include/c++/11/bits/stl_vector.h:1761:50: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/979.
/usr/include/c++/11/bits/stl_vector.h:1761:50: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/979 into std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1203.
/usr/include/c++/11/bits/stl_vector.h:1761:30: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/979.
/usr/include/c++/11/bits/stl_vector.h:1761:30: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/979 into std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1203.
/usr/include/c++/11/bits/stl_vector.h:1758:23: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/979.
/usr/include/c++/11/bits/stl_vector.h:1758:23: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/979 into std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1203.
/usr/include/c++/11/bits/stl_vector.h:1758:14: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1325.
/usr/include/c++/11/bits/stl_vector.h:1758:14: optimized:  Inlining std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1325 into std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1203.
/usr/include/c++/11/bits/hashtable_policy.h:1834:40: note: Considering inline candidate _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_get() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1500.
/usr/include/c++/11/bits/hashtable_policy.h:1834:40: optimized:  Inlining _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_get() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1500 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1423.
/usr/include/c++/11/bits/hashtable_policy.h:1943:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1411.
/usr/include/c++/11/bits/hashtable_policy.h:1943:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1411 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1301.
/usr/include/c++/11/bits/hashtable_policy.h:1942:41: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1413.
/usr/include/c++/11/bits/hashtable_policy.h:1942:41: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1413 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1301.
/usr/include/c++/11/bits/hashtable_policy.h:1941:28: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>; _Tp = std::__detail::_Hash_node_base*]/1428.
/usr/include/c++/11/bits/hashtable_policy.h:1941:28: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>; _Tp = std::__detail::_Hash_node_base*]/1428 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1301.
/usr/include/c++/11/bits/hashtable_policy.h:1941:53: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1423.
/usr/include/c++/11/bits/hashtable_policy.h:1941:53: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1423 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1301.
/usr/include/c++/11/bits/hashtable_policy.h:1940:57: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/1406.
/usr/include/c++/11/bits/hashtable_policy.h:1940:57: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/1406 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1301.
/usr/include/c++/11/bits/hashtable.h:449:42: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1301.
/usr/include/c++/11/bits/hashtable.h:449:42: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1301 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1181.
/usr/include/c++/11/bits/hashtable.h:446:27: note: Considering inline candidate bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_uses_single_bucket(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1300.
/usr/include/c++/11/bits/hashtable.h:446:27: optimized:  Inlining bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_uses_single_bucket(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1300 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1181.
/usr/include/c++/11/bits/hashtable.h:454:30: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1181.
/usr/include/c++/11/bits/hashtable.h:454:30: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1181 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1055.
/usr/include/c++/11/ext/new_allocator.h:168:13: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691.
/usr/include/c++/11/ext/new_allocator.h:168:13: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691 into void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::__cxx11::basic_string<char>; _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1502.
/usr/include/c++/11/bits/alloc_traits.h:535:15: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::__cxx11::basic_string<char>; _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1502.
/usr/include/c++/11/bits/alloc_traits.h:535:15: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::__cxx11::basic_string<char>; _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1502 into static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::__cxx11::basic_string<char>; _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1425.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1503.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1503 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1504.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1504.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1504 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1505.
/usr/include/c++/11/bits/hashtable_policy.h:1650:48: note: Considering inline candidate const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 0; _Tp = std::equal_to<std::__cxx11::basic_string<char> >]/1523.
/usr/include/c++/11/bits/hashtable_policy.h:1650:48: optimized:  Inlining const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 0; _Tp = std::equal_to<std::__cxx11::basic_string<char> >]/1523 into const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_eq() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1458.
/usr/include/c++/11/ext/aligned_buffer.h:115:41: note: Considering inline candidate void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() [with _Tp = std::__cxx11::basic_string<char>]/1533.
/usr/include/c++/11/ext/aligned_buffer.h:115:41: optimized:  Inlining void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() [with _Tp = std::__cxx11::basic_string<char>]/1533 into _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = std::__cxx11::basic_string<char>]/1501.
/usr/include/c++/11/bits/hashtable_policy.h:238:33: note: Considering inline candidate _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = std::__cxx11::basic_string<char>]/1501.
/usr/include/c++/11/bits/hashtable_policy.h:238:33: optimized:  Inlining _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = std::__cxx11::basic_string<char>]/1501 into _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::__cxx11::basic_string<char>]/1424.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1534.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1534 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1506.
/usr/include/c++/11/bits/hashtable_policy.h:1905:38: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1506.
/usr/include/c++/11/bits/hashtable_policy.h:1905:38: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1506 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1426.
/usr/include/c++/11/bits/hashtable_policy.h:1905:56: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1423.
/usr/include/c++/11/bits/hashtable_policy.h:1905:56: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1423 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1426.
/usr/include/c++/11/bits/hashtable_policy.h:1903:57: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1505.
/usr/include/c++/11/bits/hashtable_policy.h:1903:57: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1505 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1426.
/usr/include/c++/11/bits/hashtable_policy.h:1895:29: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1426.
/usr/include/c++/11/bits/hashtable_policy.h:1895:29: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1426 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1299.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::__cxx11::basic_string<char>; _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1425.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::__cxx11::basic_string<char>; _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1425 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1299.
/usr/include/c++/11/bits/hashtable_policy.h:1894:53: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1423.
/usr/include/c++/11/bits/hashtable_policy.h:1894:53: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1423 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1299.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::__cxx11::basic_string<char>]/1424.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::__cxx11::basic_string<char>]/1424 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1299.
/usr/include/c++/11/bits/hashtable.h:308:57: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1299.
/usr/include/c++/11/bits/hashtable.h:308:57: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1318->void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1299, growth 7 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable_policy.h:1916:22: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1299.
/usr/include/c++/11/bits/hashtable_policy.h:1916:22: missed:   will not early inline: void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1180->void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1299, growth 7 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable_policy.h:1915:22: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::__cxx11::basic_string<char>; bool _Cache_hash_code = true]/1298.
/usr/include/c++/11/bits/hashtable_policy.h:1915:22: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::__cxx11::basic_string<char>; bool _Cache_hash_code = true]/1298 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1180.
/usr/include/c++/11/bits/hashtable.h:2320:32: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1180.
/usr/include/c++/11/bits/hashtable.h:2320:32: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1180 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1054.
/usr/include/c++/11/bits/hashtable.h:2320:32: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1179.
/usr/include/c++/11/bits/hashtable.h:2320:32: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1179 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1054.
/usr/include/c++/11/bits/hashtable.h:1534:5: note: Considering inline candidate std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> > >::~_Hashtable_alloc()/562.
/usr/include/c++/11/bits/hashtable.h:1534:5: optimized:  Inlining std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> > >::~_Hashtable_alloc()/562 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/894.
/usr/include/c++/11/bits/hashtable.h:1533:28: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1055.
/usr/include/c++/11/bits/hashtable.h:1533:28: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1055 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/894.
/usr/include/c++/11/bits/hashtable.h:1532:12: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1054.
/usr/include/c++/11/bits/hashtable.h:1532:12: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/894->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1054, growth 12 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/unordered_set.h:97:11: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/894.
/usr/include/c++/11/bits/unordered_set.h:97:11: missed:   will not early inline: std::unordered_set<std::__cxx11::basic_string<char> >::~unordered_set()/571->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/894, growth 7 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable_policy.h:1650:48: note: Considering inline candidate const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 0; _Tp = std::equal_to<std::__cxx11::basic_string<char> >]/1523.
/usr/include/c++/11/bits/hashtable_policy.h:1650:48: optimized:  Inlining const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 0; _Tp = std::equal_to<std::__cxx11::basic_string<char> >]/1523 into const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_eq() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1536.
/usr/include/c++/11/bits/hashtable_policy.h:1251:28: note: Considering inline candidate std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/133.
/usr/include/c++/11/bits/hashtable_policy.h:1251:28: optimized:  Inlining std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/133 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, true>&, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1538.
/usr/include/c++/11/bits/hashtable.h:791:49: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, true>&, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1538.
/usr/include/c++/11/bits/hashtable.h:791:49: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, true>&, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1538 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1508.
/usr/include/c++/11/bits/hashtable.h:1908:32: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1508.
/usr/include/c++/11/bits/hashtable.h:1908:32: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1508 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1442.
/usr/include/c++/11/bits/hashtable.h:1908:49: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::__cxx11::basic_string<char>; bool _Cache_hash_code = true]/1298.
/usr/include/c++/11/bits/hashtable.h:1908:49: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::__cxx11::basic_string<char>; bool _Cache_hash_code = true]/1298 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1442.
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1539.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1539 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1540.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1540.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1509->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1540, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate void operator delete(void*, void*)/76.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining void operator delete(void*, void*)/76 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1541.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1541.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate void* operator new(std::size_t, void*)/74.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining void* operator new(std::size_t, void*)/74 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1541.
/usr/include/c++/11/ext/new_allocator.h:162:46: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061.
/usr/include/c++/11/ext/new_allocator.h:162:46: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1541.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1541.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1541 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1511.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1511.
/usr/include/c++/11/bits/hashtable_policy.h:1885:37: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1506.
/usr/include/c++/11/bits/hashtable_policy.h:1885:37: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1506 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1439.
/usr/include/c++/11/bits/hashtable_policy.h:1885:55: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1423.
/usr/include/c++/11/bits/hashtable_policy.h:1885:55: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1423 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1439.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1511.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1511 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1439.
/usr/include/c++/11/bits/hashtable_policy.h:1878:54: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1423.
/usr/include/c++/11/bits/hashtable_policy.h:1878:54: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1423 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1439.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::__cxx11::basic_string<char>]/1424.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::__cxx11::basic_string<char>]/1424 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1439.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1439.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: note: Considering inline candidate std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>::_Hash_node()/1437.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: optimized:  Inlining std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>::_Hash_node()/1437 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1439.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: note: Considering inline candidate void* operator new(std::size_t, void*)/74.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: optimized:  Inlining void* operator new(std::size_t, void*)/74 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1439.
/usr/include/c++/11/bits/hashtable_policy.h:1874:36: note: Considering inline candidate constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1510.
/usr/include/c++/11/bits/hashtable_policy.h:1874:36: optimized:  Inlining constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1510 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1439.
/usr/include/c++/11/bits/hashtable_policy.h:1873:45: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1509.
/usr/include/c++/11/bits/hashtable_policy.h:1873:45: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>]/1509 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1439.
/usr/include/c++/11/bits/hashtable_policy.h:1873:63: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1423.
/usr/include/c++/11/bits/hashtable_policy.h:1873:63: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1423 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1439.
/usr/include/c++/11/bits/hashtable_policy.h:168:32: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1439.
/usr/include/c++/11/bits/hashtable_policy.h:168:32: missed:   will not early inline: std::__detail::_AllocNode<_NodeAlloc>::__node_type* std::__detail::_AllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::__cxx11::basic_string<char>&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1313->std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1439, call is cold and code would grow at least by 29
/usr/include/c++/11/bits/hashtable_policy.h:168:32: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061.
/usr/include/c++/11/bits/hashtable_policy.h:168:32: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061 into std::__detail::_AllocNode<_NodeAlloc>::__node_type* std::__detail::_AllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::__cxx11::basic_string<char>&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1313.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1411.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1411 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1556.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1411.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1411 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1556.
/usr/include/c++/11/bits/hashtable_policy.h:1928:44: note: Considering inline candidate constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node_base*]/1415.
/usr/include/c++/11/bits/hashtable_policy.h:1928:44: optimized:  Inlining constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node_base*]/1415 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1556.
/usr/include/c++/11/bits/hashtable_policy.h:1927:52: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1414.
/usr/include/c++/11/bits/hashtable_policy.h:1927:52: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1414 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1556.
/usr/include/c++/11/bits/hashtable_policy.h:1925:28: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>; _Tp = std::__detail::_Hash_node_base*]/1428.
/usr/include/c++/11/bits/hashtable_policy.h:1925:28: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true>; _Tp = std::__detail::_Hash_node_base*]/1428 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1556.
/usr/include/c++/11/bits/hashtable_policy.h:1925:53: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1423.
/usr/include/c++/11/bits/hashtable_policy.h:1925:53: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1423 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1556.
/usr/include/c++/11/bits/hashtable.h:440:47: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1556.
/usr/include/c++/11/bits/hashtable.h:440:47: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1542->std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1556, growth 6 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable.h:2409:28: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1055.
/usr/include/c++/11/bits/hashtable.h:2409:28: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1055 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1512.
/usr/include/c++/11/bits/hashtable.h:2390:41: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, true>&, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1538.
/usr/include/c++/11/bits/hashtable.h:2390:41: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, true>&, std::size_t) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1538 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1512.
/usr/include/c++/11/bits/hashtable.h:2388:36: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::__cxx11::basic_string<char>; bool _Cache_hash_code = true]/1298.
/usr/include/c++/11/bits/hashtable.h:2388:36: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::__cxx11::basic_string<char>; bool _Cache_hash_code = true]/1298 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1512.
/usr/include/c++/11/bits/hashtable.h:2383:32: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1179.
/usr/include/c++/11/bits/hashtable.h:2383:32: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1179 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1512.
/usr/include/c++/11/bits/hashtable.h:2382:56: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1542.
/usr/include/c++/11/bits/hashtable.h:2382:56: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1542 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1512.
/usr/include/c++/11/bits/hashtable.h:2367:29: note: Considering inline candidate void std::__detail::_Prime_rehash_policy::_M_reset(std::__detail::_Prime_rehash_policy::_State)/141.
/usr/include/c++/11/bits/hashtable.h:2367:29: optimized:  Inlining void std::__detail::_Prime_rehash_policy::_M_reset(std::__detail::_Prime_rehash_policy::_State)/141 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1440.
/usr/include/c++/11/bits/hashtable.h:2361:17: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1512.
/usr/include/c++/11/bits/hashtable.h:2361:17: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1440->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1512, call is cold and code would grow at least by 33
/usr/include/c++/11/bits/hashtable.h:2030:14: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::__cxx11::basic_string<char>; bool __constant_iterators = true; bool __cache = true]/1307.
/usr/include/c++/11/bits/hashtable.h:2030:14: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::__cxx11::basic_string<char>; bool __constant_iterators = true; bool __cache = true]/1307 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1320.
/usr/include/c++/11/bits/hashtable.h:2028:29: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1442.
/usr/include/c++/11/bits/hashtable.h:2028:29: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1320->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1442, growth 16 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/hashtable.h:2025:26: note: Considering inline candidate void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_store_code(std::__detail::_Hash_node_code_cache<true>&, std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1441.
/usr/include/c++/11/bits/hashtable.h:2025:26: optimized:  Inlining void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_store_code(std::__detail::_Hash_node_code_cache<true>&, std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1441 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1320.
/usr/include/c++/11/bits/hashtable.h:2022:27: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1304.
/usr/include/c++/11/bits/hashtable.h:2022:27: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1304 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1320.
/usr/include/c++/11/bits/hashtable.h:2021:13: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1440.
/usr/include/c++/11/bits/hashtable.h:2021:13: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1320->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1440, call is cold and code would grow at least by 17
/usr/include/c++/11/bits/hashtable.h:2014:70: note: Considering inline candidate std::__detail::_Prime_rehash_policy::_State std::__detail::_Prime_rehash_policy::_M_state() const/139.
/usr/include/c++/11/bits/hashtable.h:2014:70: optimized:  Inlining std::__detail::_Prime_rehash_policy::_State std::__detail::_Prime_rehash_policy::_M_state() const/139 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1320.
/usr/include/c++/11/ext/aligned_buffer.h:119:47: note: Considering inline candidate const void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() const [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/1559.
/usr/include/c++/11/ext/aligned_buffer.h:119:47: optimized:  Inlining const void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() const [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/1559 into const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/1547.
/usr/include/c++/11/bits/hashtable_policy.h:242:33: note: Considering inline candidate const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/1547.
/usr/include/c++/11/bits/hashtable_policy.h:242:33: optimized:  Inlining const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/1547 into const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/1524.
/usr/include/c++/11/bits/hashtable_policy.h:250:26: note: Considering inline candidate const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/1524.
/usr/include/c++/11/bits/hashtable_policy.h:250:26: optimized:  Inlining const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/1524 into const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/1459.
/usr/include/c++/11/bits/hashtable_policy.h:1617:39: note: Considering inline candidate constexpr bool std::equal_to<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = std::__cxx11::basic_string<char>]/1463.
/usr/include/c++/11/bits/hashtable_policy.h:1617:39: optimized:  Inlining constexpr bool std::equal_to<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = std::__cxx11::basic_string<char>]/1463 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1365.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: note: Considering inline candidate decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/1462.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: optimized:  Inlining decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&]/1462 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1365.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: note: Considering inline candidate const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/1459.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: optimized:  Inlining const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >]/1459 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1365.
/usr/include/c++/11/bits/hashtable_policy.h:1617:37: note: Considering inline candidate const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_eq() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1458.
/usr/include/c++/11/bits/hashtable_policy.h:1617:37: optimized:  Inlining const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_eq() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1458 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1365.
/usr/include/c++/11/bits/hashtable_policy.h:1617:18: note: Considering inline candidate static bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_S_equals(std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_code_cache<true>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1457.
/usr/include/c++/11/bits/hashtable_policy.h:1617:18: optimized:  Inlining static bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_S_equals(std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_code_cache<true>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1457 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1365.
/usr/include/c++/11/bits/hashtable.h:1838:23: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/1126.
/usr/include/c++/11/bits/hashtable.h:1838:23: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/1126 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1256.
/usr/include/c++/11/bits/hashtable.h:1843:39: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1164.
/usr/include/c++/11/bits/hashtable.h:1843:39: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1164 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1256.
/usr/include/c++/11/bits/hashtable.h:1843:53: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/1126.
/usr/include/c++/11/bits/hashtable.h:1843:53: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool _Cache_hash_code = true]/1126 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1256.
/usr/include/c++/11/bits/hashtable.h:1840:23: note: Considering inline candidate bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1365.
/usr/include/c++/11/bits/hashtable.h:1840:23: optimized:  Inlining bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1365 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1256.
/usr/include/c++/11/bits/hashtable.h:810:50: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1256.
/usr/include/c++/11/bits/hashtable.h:810:50: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1113->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1256, growth 17 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/hashtable.h:1610:14: note: Considering inline candidate std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::_Node_const_iterator(std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/1115.
/usr/include/c++/11/bits/hashtable.h:1610:14: optimized:  Inlining std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::_Node_const_iterator(std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/1115 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::find(const key_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/976.
/usr/include/c++/11/bits/hashtable.h:1610:14: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1113.
/usr/include/c++/11/bits/hashtable.h:1610:14: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1113 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::find(const key_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/976.
/usr/include/c++/11/bits/hashtable.h:1609:42: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1112.
/usr/include/c++/11/bits/hashtable.h:1609:42: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1112 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::find(const key_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/976.
/usr/include/c++/11/bits/hashtable.h:1608:46: note: Considering inline candidate std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1111.
/usr/include/c++/11/bits/hashtable.h:1608:46: optimized:  Inlining std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1111 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::find(const key_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/976.
/usr/include/c++/11/bits/unordered_map.h:880:25: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::find(const key_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/976.
/usr/include/c++/11/bits/unordered_map.h:880:25: missed:   will not early inline: std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::find(const key_type&) const [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/835->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::find(const key_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/976, growth 14 exceeds --param early-inlining-insns divided by number of calls
/workspace/benchmarks/dataset_659/ldap.hpp:25:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691.
/workspace/benchmarks/dataset_659/ldap.hpp:25:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535.
/workspace/benchmarks/dataset_659/ldap.hpp:25:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691.
/workspace/benchmarks/dataset_659/ldap.hpp:25:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535.
/workspace/benchmarks/dataset_659/ldap.hpp:24:17: note: Considering inline candidate std::vector<_Tp, _Alloc>::vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/533.
/workspace/benchmarks/dataset_659/ldap.hpp:24:17: optimized:  Inlining std::vector<_Tp, _Alloc>::vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/533 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535.
/workspace/benchmarks/dataset_659/ldap.hpp:21:31: note: Considering inline candidate bool std::__detail::operator!=(const std::__detail::_Node_iterator_base<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>&, const std::__detail::_Node_iterator_base<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>&)/837.
/workspace/benchmarks/dataset_659/ldap.hpp:21:31: optimized:  Inlining bool std::__detail::operator!=(const std::__detail::_Node_iterator_base<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>&, const std::__detail::_Node_iterator_base<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>&)/837 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535.
/workspace/benchmarks/dataset_659/ldap.hpp:21:31: note: Considering inline candidate std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>& std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::operator++() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/846.
/workspace/benchmarks/dataset_659/ldap.hpp:21:31: optimized:  Inlining std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>& std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::operator++() [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/846 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535.
/workspace/benchmarks/dataset_659/ldap.hpp:22:56: note: Considering inline candidate std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840.
/workspace/benchmarks/dataset_659/ldap.hpp:22:56: missed:   will not early inline: std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535->std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840, call is cold and code would grow at least by 20
/workspace/benchmarks/dataset_659/ldap.hpp:22:25: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691.
/workspace/benchmarks/dataset_659/ldap.hpp:22:25: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535.
/workspace/benchmarks/dataset_659/ldap.hpp:22:36: note: Considering inline candidate typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]/848.
/workspace/benchmarks/dataset_659/ldap.hpp:22:36: missed:   will not early inline: std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535->typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]/848, growth 9 exceeds --param early-inlining-insns divided by number of calls
/workspace/benchmarks/dataset_659/ldap.hpp:22:25: note: Considering inline candidate static std::string LdapObject::to_lower(const string&)/539.
/workspace/benchmarks/dataset_659/ldap.hpp:22:25: missed:   will not early inline: std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535->static std::string LdapObject::to_lower(const string&)/539, call is cold and code would grow at least by 15
/workspace/benchmarks/dataset_659/ldap.hpp:21:31: note: Considering inline candidate const value_type& std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::operator*() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/847.
/workspace/benchmarks/dataset_659/ldap.hpp:21:31: optimized:  Inlining const value_type& std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::operator*() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/847 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535.
/workspace/benchmarks/dataset_659/ldap.hpp:21:31: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::end() const [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/836.
/workspace/benchmarks/dataset_659/ldap.hpp:21:31: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::end() const [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/836 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535.
/workspace/benchmarks/dataset_659/ldap.hpp:21:31: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::begin() const [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/845.
/workspace/benchmarks/dataset_659/ldap.hpp:21:31: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::begin() const [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/845 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535.
/workspace/benchmarks/dataset_659/ldap.hpp:20:42: note: Considering inline candidate static std::string LdapObject::to_lower(const string&)/539.
/workspace/benchmarks/dataset_659/ldap.hpp:20:42: missed:   will not early inline: std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535->static std::string LdapObject::to_lower(const string&)/539, call is cold and code would grow at least by 15
/workspace/benchmarks/dataset_659/ldap.hpp:18:43: note: Considering inline candidate std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840.
/workspace/benchmarks/dataset_659/ldap.hpp:18:43: missed:   will not early inline: std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535->std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840, call is cold and code would grow at least by 20
/workspace/benchmarks/dataset_659/ldap.hpp:18:41: note: Considering inline candidate const value_type* std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::operator->() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/838.
/workspace/benchmarks/dataset_659/ldap.hpp:18:41: optimized:  Inlining const value_type* std::__detail::_Node_const_iterator<_Value, __constant_iterators, __cache>::operator->() const [with _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; bool __constant_iterators = false; bool __cache = true]/838 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535.
/workspace/benchmarks/dataset_659/ldap.hpp:18:16: note: Considering inline candidate bool std::__detail::operator!=(const std::__detail::_Node_iterator_base<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>&, const std::__detail::_Node_iterator_base<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>&)/837.
/workspace/benchmarks/dataset_659/ldap.hpp:18:16: optimized:  Inlining bool std::__detail::operator!=(const std::__detail::_Node_iterator_base<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>&, const std::__detail::_Node_iterator_base<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true>&)/837 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535.
/workspace/benchmarks/dataset_659/ldap.hpp:18:28: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::end() const [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/836.
/workspace/benchmarks/dataset_659/ldap.hpp:18:28: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::end() const [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/836 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535.
/workspace/benchmarks/dataset_659/ldap.hpp:17:29: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::find(const key_type&) const [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/835.
/workspace/benchmarks/dataset_659/ldap.hpp:17:29: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::find(const key_type&) const [with _Key = std::__cxx11::basic_string<char>; _Tp = std::vector<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >]/835 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/697.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/697 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}; _Tp = std::__cxx11::basic_string<char>]/1564.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate void* operator new(std::size_t, void*)/74.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining void* operator new(std::size_t, void*)/74 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}; _Tp = std::__cxx11::basic_string<char>]/1564.
/usr/include/c++/11/ext/new_allocator.h:162:46: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__cxx11::basic_string<char>]/1557.
/usr/include/c++/11/ext/new_allocator.h:162:46: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__cxx11::basic_string<char>]/1557 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}; _Tp = std::__cxx11::basic_string<char>]/1564.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}; _Tp = std::__cxx11::basic_string<char>]/1564.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}; _Tp = std::__cxx11::basic_string<char>]/1564 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}; _Tp = std::__cxx11::basic_string<char>]/1558.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__cxx11::basic_string<char>]/1557.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__cxx11::basic_string<char>]/1557 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}; _Tp = std::__cxx11::basic_string<char>]/1558.
/usr/include/c++/11/bits/stl_uninitialized.h:995:24: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::__cxx11::basic_string<char>; _Tp = std::__cxx11::basic_string<char>]/1208.
/usr/include/c++/11/bits/stl_uninitialized.h:995:24: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::__cxx11::basic_string<char>; _Tp = std::__cxx11::basic_string<char>]/1208 into void std::__relocate_object_a(_Tp*, _Up*, _Allocator&) [with _Tp = std::__cxx11::basic_string<char>; _Up = std::__cxx11::basic_string<char>; _Allocator = std::allocator<std::__cxx11::basic_string<char> >]/1544.
/usr/include/c++/11/bits/stl_uninitialized.h:995:24: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__cxx11::basic_string<char>]/1262.
/usr/include/c++/11/bits/stl_uninitialized.h:995:24: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__cxx11::basic_string<char>]/1262 into void std::__relocate_object_a(_Tp*, _Up*, _Allocator&) [with _Tp = std::__cxx11::basic_string<char>; _Up = std::__cxx11::basic_string<char>; _Allocator = std::allocator<std::__cxx11::basic_string<char> >]/1544.
/usr/include/c++/11/bits/stl_uninitialized.h:994:26: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}; _Tp = std::__cxx11::basic_string<char>]/1558.
/usr/include/c++/11/bits/stl_uninitialized.h:994:26: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}; _Tp = std::__cxx11::basic_string<char>]/1558 into void std::__relocate_object_a(_Tp*, _Up*, _Allocator&) [with _Tp = std::__cxx11::basic_string<char>; _Up = std::__cxx11::basic_string<char>; _Allocator = std::allocator<std::__cxx11::basic_string<char> >]/1544.
/usr/include/c++/11/bits/stl_uninitialized.h:994:53: note: Considering inline candidate constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::__cxx11::basic_string<char>&]/1543.
/usr/include/c++/11/bits/stl_uninitialized.h:994:53: optimized:  Inlining constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::__cxx11::basic_string<char>&]/1543 into void std::__relocate_object_a(_Tp*, _Up*, _Allocator&) [with _Tp = std::__cxx11::basic_string<char>; _Up = std::__cxx11::basic_string<char>; _Allocator = std::allocator<std::__cxx11::basic_string<char> >]/1544.
/usr/include/c++/11/bits/stl_uninitialized.h:1032:26: note: Considering inline candidate void std::__relocate_object_a(_Tp*, _Up*, _Allocator&) [with _Tp = std::__cxx11::basic_string<char>; _Up = std::__cxx11::basic_string<char>; _Allocator = std::allocator<std::__cxx11::basic_string<char> >]/1544.
/usr/include/c++/11/bits/stl_uninitialized.h:1032:26: optimized:  Inlining void std::__relocate_object_a(_Tp*, _Up*, _Allocator&) [with _Tp = std::__cxx11::basic_string<char>; _Up = std::__cxx11::basic_string<char>; _Allocator = std::allocator<std::__cxx11::basic_string<char> >]/1544 into _ForwardIterator std::__relocate_a_1(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Allocator = std::allocator<std::__cxx11::basic_string<char> >]/1514.
/usr/include/c++/11/bits/stl_uninitialized.h:1032:26: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__cxx11::basic_string<char>]/1262.
/usr/include/c++/11/bits/stl_uninitialized.h:1032:26: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__cxx11::basic_string<char>]/1262 into _ForwardIterator std::__relocate_a_1(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Allocator = std::allocator<std::__cxx11::basic_string<char> >]/1514.
/usr/include/c++/11/bits/stl_uninitialized.h:1032:26: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__cxx11::basic_string<char>]/1262.
/usr/include/c++/11/bits/stl_uninitialized.h:1032:26: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__cxx11::basic_string<char>]/1262 into _ForwardIterator std::__relocate_a_1(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Allocator = std::allocator<std::__cxx11::basic_string<char> >]/1514.
/usr/include/c++/11/bits/stl_uninitialized.h:1046:28: note: Considering inline candidate _ForwardIterator std::__relocate_a_1(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Allocator = std::allocator<std::__cxx11::basic_string<char> >]/1514.
/usr/include/c++/11/bits/stl_uninitialized.h:1046:28: optimized:  Inlining _ForwardIterator std::__relocate_a_1(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Allocator = std::allocator<std::__cxx11::basic_string<char> >]/1514 into _ForwardIterator std::__relocate_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Allocator = std::allocator<std::__cxx11::basic_string<char> >]/1443.
/usr/include/c++/11/bits/stl_uninitialized.h:1046:28: note: Considering inline candidate _Iterator std::__niter_base(_Iterator) [with _Iterator = std::__cxx11::basic_string<char>*]/1513.
/usr/include/c++/11/bits/stl_uninitialized.h:1046:28: optimized:  Inlining _Iterator std::__niter_base(_Iterator) [with _Iterator = std::__cxx11::basic_string<char>*]/1513 into _ForwardIterator std::__relocate_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Allocator = std::allocator<std::__cxx11::basic_string<char> >]/1443.
/usr/include/c++/11/bits/stl_uninitialized.h:1046:28: note: Considering inline candidate _Iterator std::__niter_base(_Iterator) [with _Iterator = std::__cxx11::basic_string<char>*]/1513.
/usr/include/c++/11/bits/stl_uninitialized.h:1046:28: optimized:  Inlining _Iterator std::__niter_base(_Iterator) [with _Iterator = std::__cxx11::basic_string<char>*]/1513 into _ForwardIterator std::__relocate_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Allocator = std::allocator<std::__cxx11::basic_string<char> >]/1443.
/usr/include/c++/11/bits/stl_uninitialized.h:1046:28: note: Considering inline candidate _Iterator std::__niter_base(_Iterator) [with _Iterator = std::__cxx11::basic_string<char>*]/1513.
/usr/include/c++/11/bits/stl_uninitialized.h:1046:28: optimized:  Inlining _Iterator std::__niter_base(_Iterator) [with _Iterator = std::__cxx11::basic_string<char>*]/1513 into _ForwardIterator std::__relocate_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Allocator = std::allocator<std::__cxx11::basic_string<char> >]/1443.
/usr/include/c++/11/bits/stl_vector.h:456:26: note: Considering inline candidate _ForwardIterator std::__relocate_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Allocator = std::allocator<std::__cxx11::basic_string<char> >]/1443.
/usr/include/c++/11/bits/stl_vector.h:456:26: optimized:  Inlining _ForwardIterator std::__relocate_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Allocator = std::allocator<std::__cxx11::basic_string<char> >]/1443 into static std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_S_do_relocate(std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::_Tp_alloc_type&, std::true_type) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1326.
/usr/include/c++/11/bits/stl_vector.h:469:23: note: Considering inline candidate static std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_S_do_relocate(std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::_Tp_alloc_type&, std::true_type) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1326.
/usr/include/c++/11/bits/stl_vector.h:469:23: optimized:  Inlining static std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_S_do_relocate(std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::_Tp_alloc_type&, std::true_type) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1326 into static std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_S_relocate(std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::_Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1206.
/usr/include/c++/11/bits/vector.tcc:492:17: note: Considering inline candidate void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/997.
/usr/include/c++/11/bits/vector.tcc:492:17: optimized:  Inlining void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/997 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067.
/usr/include/c++/11/bits/vector.tcc:491:19: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/987.
/usr/include/c++/11/bits/vector.tcc:491:19: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]/987 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067.
/usr/include/c++/11/bits/vector.tcc:491:66: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/985.
/usr/include/c++/11/bits/vector.tcc:491:66: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/985 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067.
/usr/include/c++/11/bits/vector.tcc:488:28: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::__cxx11::basic_string<char>; _Tp = std::__cxx11::basic_string<char>]/1208.
/usr/include/c++/11/bits/vector.tcc:488:28: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::__cxx11::basic_string<char>; _Tp = std::__cxx11::basic_string<char>]/1208 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067.
/usr/include/c++/11/bits/vector.tcc:500:20: note: Considering inline candidate void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/997.
/usr/include/c++/11/bits/vector.tcc:500:20: optimized:  Inlining void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/997 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067.
/usr/include/c++/11/bits/vector.tcc:466:34: note: Considering inline candidate static std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_S_relocate(std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::_Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1206.
/usr/include/c++/11/bits/vector.tcc:466:34: optimized:  Inlining static std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_S_relocate(std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::_Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1206 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067.
/usr/include/c++/11/bits/vector.tcc:466:50: note: Considering inline candidate const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1207.
/usr/include/c++/11/bits/vector.tcc:466:50: optimized:  Inlining const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1207 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067.
/usr/include/c++/11/bits/vector.tcc:467:40: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/985.
/usr/include/c++/11/bits/vector.tcc:467:40: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/985 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067.
/usr/include/c++/11/bits/vector.tcc:461:34: note: Considering inline candidate static std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_S_relocate(std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::_Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1206.
/usr/include/c++/11/bits/vector.tcc:461:34: optimized:  Inlining static std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_S_relocate(std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::_Tp_alloc_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1206 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067.
/usr/include/c++/11/bits/vector.tcc:461:63: note: Considering inline candidate const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1207.
/usr/include/c++/11/bits/vector.tcc:461:63: optimized:  Inlining const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1207 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067.
/usr/include/c++/11/bits/vector.tcc:462:39: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/985.
/usr/include/c++/11/bits/vector.tcc:462:39: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/985 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067.
/usr/include/c++/11/bits/vector.tcc:449:28: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>]/1062.
/usr/include/c++/11/bits/vector.tcc:449:28: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>]/1062 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067.
/usr/include/c++/11/bits/vector.tcc:449:28: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061.
/usr/include/c++/11/bits/vector.tcc:449:28: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067.
/usr/include/c++/11/bits/vector.tcc:440:44: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1174.
/usr/include/c++/11/bits/vector.tcc:440:44: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1174 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067.
/usr/include/c++/11/bits/vector.tcc:439:51: note: Considering inline candidate typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1205.
/usr/include/c++/11/bits/vector.tcc:439:51: optimized:  Inlining typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/1205 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067.
/usr/include/c++/11/bits/vector.tcc:439:58: note: Considering inline candidate std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1204.
/usr/include/c++/11/bits/vector.tcc:439:58: optimized:  Inlining std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1204 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067.
/usr/include/c++/11/bits/vector.tcc:436:14: note: Considering inline candidate std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1203.
/usr/include/c++/11/bits/vector.tcc:436:14: missed:   will not early inline: void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067->std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1203, growth 11 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_vector.h:1198:21: note: Considering inline candidate void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067.
/usr/include/c++/11/bits/stl_vector.h:1198:21: missed:   will not early inline: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/903->void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067, call is cold and code would grow at least by 95
/usr/include/c++/11/bits/stl_vector.h:1198:21: note: Considering inline candidate std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1063.
/usr/include/c++/11/bits/stl_vector.h:1198:21: optimized:  Inlining std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1063 into void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/903.
/usr/include/c++/11/bits/stl_vector.h:1192:30: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>]/1062.
/usr/include/c++/11/bits/stl_vector.h:1192:30: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>]/1062 into void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/903.
/usr/include/c++/11/ext/aligned_buffer.h:119:47: note: Considering inline candidate const void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() const [with _Tp = std::__cxx11::basic_string<char>]/1568.
/usr/include/c++/11/ext/aligned_buffer.h:119:47: optimized:  Inlining const void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() const [with _Tp = std::__cxx11::basic_string<char>]/1568 into const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = std::__cxx11::basic_string<char>]/1563.
/usr/include/c++/11/bits/hashtable_policy.h:242:33: note: Considering inline candidate const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = std::__cxx11::basic_string<char>]/1563.
/usr/include/c++/11/bits/hashtable_policy.h:242:33: optimized:  Inlining const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = std::__cxx11::basic_string<char>]/1563 into const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = std::__cxx11::basic_string<char>]/1555.
/usr/include/c++/11/bits/hashtable_policy.h:250:26: note: Considering inline candidate const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = std::__cxx11::basic_string<char>]/1555.
/usr/include/c++/11/bits/hashtable_policy.h:250:26: optimized:  Inlining const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = std::__cxx11::basic_string<char>]/1555 into const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::__cxx11::basic_string<char>]/1537.
/usr/include/c++/11/bits/hashtable_policy.h:1617:39: note: Considering inline candidate constexpr bool std::equal_to<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = std::__cxx11::basic_string<char>]/1463.
/usr/include/c++/11/bits/hashtable_policy.h:1617:39: optimized:  Inlining constexpr bool std::equal_to<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = std::__cxx11::basic_string<char>]/1463 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1507.
/usr/include/c++/11/bits/hashtable_policy.h:1617:39: note: Considering inline candidate _Tp&& std::__detail::_Identity::operator()(_Tp&&) const [with _Tp = const std::__cxx11::basic_string<char>&]/1302.
/usr/include/c++/11/bits/hashtable_policy.h:1617:39: optimized:  Inlining _Tp&& std::__detail::_Identity::operator()(_Tp&&) const [with _Tp = const std::__cxx11::basic_string<char>&]/1302 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1507.
/usr/include/c++/11/bits/hashtable_policy.h:1617:39: note: Considering inline candidate const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::__cxx11::basic_string<char>]/1537.
/usr/include/c++/11/bits/hashtable_policy.h:1617:39: optimized:  Inlining const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::__cxx11::basic_string<char>]/1537 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1507.
/usr/include/c++/11/bits/hashtable_policy.h:1617:37: note: Considering inline candidate const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_eq() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1536.
/usr/include/c++/11/bits/hashtable_policy.h:1617:37: optimized:  Inlining const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_eq() const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1536 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1507.
/usr/include/c++/11/bits/hashtable_policy.h:1617:18: note: Considering inline candidate static bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_S_equals(std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_code_cache<true>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1535.
/usr/include/c++/11/bits/hashtable_policy.h:1617:18: optimized:  Inlining static bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_S_equals(std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_code_cache<true>&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1535 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1507.
/usr/include/c++/11/bits/hashtable.h:1838:23: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::__cxx11::basic_string<char>; bool _Cache_hash_code = true]/1298.
/usr/include/c++/11/bits/hashtable.h:1838:23: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::__cxx11::basic_string<char>; bool _Cache_hash_code = true]/1298 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1432.
/usr/include/c++/11/bits/hashtable.h:1843:39: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1508.
/usr/include/c++/11/bits/hashtable.h:1843:39: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1508 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1432.
/usr/include/c++/11/bits/hashtable.h:1843:53: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::__cxx11::basic_string<char>; bool _Cache_hash_code = true]/1298.
/usr/include/c++/11/bits/hashtable.h:1843:53: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::__cxx11::basic_string<char>; bool _Cache_hash_code = true]/1298 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1432.
/usr/include/c++/11/bits/hashtable.h:1840:23: note: Considering inline candidate bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1507.
/usr/include/c++/11/bits/hashtable.h:1840:23: optimized:  Inlining bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1507 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1432.
/usr/include/c++/11/bits/hashtable.h:810:50: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1432.
/usr/include/c++/11/bits/hashtable.h:810:50: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1305->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1432, growth 17 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/hashtable.h:2113:7: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1318.
/usr/include/c++/11/bits/hashtable.h:2113:7: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1318 into std::pair<typename std::__detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type) [with _Arg = const std::__cxx11::basic_string<char>&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1198.
/usr/include/c++/11/bits/hashtable.h:2113:7: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1318.
/usr/include/c++/11/bits/hashtable.h:2113:7: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1318 into std::pair<typename std::__detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type) [with _Arg = const std::__cxx11::basic_string<char>&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1198.
/usr/include/c++/11/bits/hashtable.h:2112:23: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>&; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>; _T2 = bool]/1323.
/usr/include/c++/11/bits/hashtable.h:2112:23: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>&; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>; _T2 = bool]/1323 into std::pair<typename std::__detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type) [with _Arg = const std::__cxx11::basic_string<char>&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1198.
/usr/include/c++/11/bits/hashtable.h:2110:27: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1320.
/usr/include/c++/11/bits/hashtable.h:2110:27: missed:   will not early inline: std::pair<typename std::__detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type) [with _Arg = const std::__cxx11::basic_string<char>&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1198->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1320, call is cold and code would grow at least by 18
/usr/include/c++/11/bits/hashtable.h:2108:15: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1315.
/usr/include/c++/11/bits/hashtable.h:2108:15: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1315 into std::pair<typename std::__detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type) [with _Arg = const std::__cxx11::basic_string<char>&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1198.
/usr/include/c++/11/bits/hashtable.h:2108:15: note: Considering inline candidate std::__detail::_AllocNode<_NodeAlloc>::__node_type* std::__detail::_AllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::__cxx11::basic_string<char>&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1313.
/usr/include/c++/11/bits/hashtable.h:2108:15: optimized:  Inlining std::__detail::_AllocNode<_NodeAlloc>::__node_type* std::__detail::_AllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::__cxx11::basic_string<char>&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1313 into std::pair<typename std::__detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type) [with _Arg = const std::__cxx11::basic_string<char>&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1198.
/usr/include/c++/11/bits/hashtable.h:2108:15: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061.
/usr/include/c++/11/bits/hashtable.h:2108:15: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__cxx11::basic_string<char>&]/1061 into std::pair<typename std::__detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type) [with _Arg = const std::__cxx11::basic_string<char>&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1198.
/usr/include/c++/11/bits/hashtable.h:2106:37: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>; _T2 = bool]/1311.
/usr/include/c++/11/bits/hashtable.h:2106:37: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::__detail::_Node_iterator<std::__cxx11::basic_string<char>, true, true>; _T2 = bool]/1311 into std::pair<typename std::__detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type) [with _Arg = const std::__cxx11::basic_string<char>&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1198.
/usr/include/c++/11/bits/hashtable.h:2106:13: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::__cxx11::basic_string<char>; bool __constant_iterators = true; bool __cache = true]/1307.
/usr/include/c++/11/bits/hashtable.h:2106:13: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::__cxx11::basic_string<char>; bool __constant_iterators = true; bool __cache = true]/1307 into std::pair<typename std::__detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type) [with _Arg = const std::__cxx11::basic_string<char>&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1198.
/usr/include/c++/11/bits/hashtable.h:2105:38: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1305.
/usr/include/c++/11/bits/hashtable.h:2105:38: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1305 into std::pair<typename std::__detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type) [with _Arg = const std::__cxx11::basic_string<char>&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1198.
/usr/include/c++/11/bits/hashtable.h:2103:35: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1304.
/usr/include/c++/11/bits/hashtable.h:2103:35: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1304 into std::pair<typename std::__detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type) [with _Arg = const std::__cxx11::basic_string<char>&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1198.
/usr/include/c++/11/bits/hashtable.h:2102:41: note: Considering inline candidate std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1303.
/usr/include/c++/11/bits/hashtable.h:2102:41: optimized:  Inlining std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _ExtractKey = std::__detail::_Identity; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = true]/1303 into std::pair<typename std::__detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type) [with _Arg = const std::__cxx11::basic_string<char>&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1198.
/usr/include/c++/11/bits/hashtable.h:2101:37: note: Considering inline candidate _Tp&& std::__detail::_Identity::operator()(_Tp&&) const [with _Tp = const std::__cxx11::basic_string<char>&]/1302.
/usr/include/c++/11/bits/hashtable.h:2101:37: optimized:  Inlining _Tp&& std::__detail::_Identity::operator()(_Tp&&) const [with _Tp = const std::__cxx11::basic_string<char>&]/1302 into std::pair<typename std::__detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type) [with _Arg = const std::__cxx11::basic_string<char>&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1198.
/usr/include/c++/11/bits/hashtable_policy.h:844:22: note: Considering inline candidate std::pair<typename std::__detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type) [with _Arg = const std::__cxx11::basic_string<char>&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1198.
/usr/include/c++/11/bits/hashtable_policy.h:844:22: missed:   will not early inline: std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__ireturn_type std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::insert(const value_type&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1060->std::pair<typename std::__detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type) [with _Arg = const std::__cxx11::basic_string<char>&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1198, call is cold and code would grow at least by 35
/usr/include/c++/11/bits/hashtable_policy.h:843:18: note: Considering inline candidate std::__detail::_AllocNode<_NodeAlloc>::_AllocNode(std::__detail::_AllocNode<_NodeAlloc>::__hashtable_alloc&) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1184.
/usr/include/c++/11/bits/hashtable_policy.h:843:18: optimized:  Inlining std::__detail::_AllocNode<_NodeAlloc>::_AllocNode(std::__detail::_AllocNode<_NodeAlloc>::__hashtable_alloc&) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1184 into std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__ireturn_type std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::insert(const value_type&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1060.
/usr/include/c++/11/bits/hashtable_policy.h:842:41: note: Considering inline candidate std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable& std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_conjure_hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1182.
/usr/include/c++/11/bits/hashtable_policy.h:842:41: optimized:  Inlining std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable& std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_conjure_hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1182 into std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__ireturn_type std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::insert(const value_type&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1060.
/usr/include/c++/11/bits/unordered_set.h:422:27: note: Considering inline candidate std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__ireturn_type std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::insert(const value_type&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1060.
/usr/include/c++/11/bits/unordered_set.h:422:27: optimized:  Inlining std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__ireturn_type std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::insert(const value_type&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1060 into std::pair<typename std::_Hashtable<_Value, _Value, _Alloc, std::__detail::_Identity, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Tp&> > >::value, true, true> >::iterator, bool> std::unordered_set<_Value, _Hash, _Pred, _Alloc>::insert(const value_type&) [with _Value = std::__cxx11::basic_string<char>; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/901.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:30:1: note: Considering inline candidate std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/843.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:30:1: missed:   will not early inline: std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580->std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/843, growth 9 exceeds --param early-inlining-insns divided by number of calls
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:28:5: note: Considering inline candidate std::unordered_set<std::__cxx11::basic_string<char> >::~unordered_set()/571.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:28:5: optimized:  Inlining std::unordered_set<std::__cxx11::basic_string<char> >::~unordered_set()/571 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:27:9: note: Considering inline candidate std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/843.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:27:9: missed:   will not early inline: std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580->std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/843, growth 9 exceeds --param early-inlining-insns divided by number of calls
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/853.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/853 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:28:5: note: Considering inline candidate std::unordered_set<std::__cxx11::basic_string<char> >::~unordered_set()/571.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:28:5: optimized:  Inlining std::unordered_set<std::__cxx11::basic_string<char> >::~unordered_set()/571 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:19:39: note: Considering inline candidate int LdapOperation::waitForResult(int, int)/545.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:19:39: missed:   will not early inline: std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580->int LdapOperation::waitForResult(int, int)/545, growth 9 exceeds --param early-inlining-insns divided by number of calls
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:27:9: note: Considering inline candidate std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/843.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:27:9: missed:   will not early inline: std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580->std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/843, growth 9 exceeds --param early-inlining-insns divided by number of calls
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:21:38: note: Considering inline candidate bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/898.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:21:38: optimized:  Inlining bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/898 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:21:38: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/899.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:21:38: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/899 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:24:38: note: Considering inline candidate void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/903.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:24:38: missed:   will not early inline: std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580->void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/903, growth 15 exceeds --param early-inlining-insns
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:23:39: note: Considering inline candidate std::pair<typename std::_Hashtable<_Value, _Value, _Alloc, std::__detail::_Identity, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Tp&> > >::value, true, true> >::iterator, bool> std::unordered_set<_Value, _Hash, _Pred, _Alloc>::insert(const value_type&) [with _Value = std::__cxx11::basic_string<char>; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/901.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:23:39: optimized:  Inlining std::pair<typename std::_Hashtable<_Value, _Value, _Alloc, std::__detail::_Identity, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Tp&> > >::value, true, true> >::iterator, bool> std::unordered_set<_Value, _Hash, _Pred, _Alloc>::insert(const value_type&) [with _Value = std::__cxx11::basic_string<char>; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/901 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:21:38: note: Considering inline candidate __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/900.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:21:38: optimized:  Inlining __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const std::__cxx11::basic_string<char>*; _Container = std::vector<std::__cxx11::basic_string<char> >]/900 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:21:38: note: Considering inline candidate std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/897.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:21:38: optimized:  Inlining std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/897 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:21:38: note: Considering inline candidate std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/896.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:21:38: optimized:  Inlining std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/896 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:20:69: note: Considering inline candidate std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:20:69: missed:   will not early inline: std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580->std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535, call is cold and code would grow at least by 54
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:20:50: note: Considering inline candidate const LdapObject& LdapOperation::object() const/546.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:20:50: optimized:  Inlining const LdapObject& LdapOperation::object() const/546 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:18:41: note: Considering inline candidate std::unordered_set<_Value, _Hash, _Pred, _Alloc>::unordered_set() [with _Value = std::__cxx11::basic_string<char>; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/568.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:18:41: optimized:  Inlining std::unordered_set<_Value, _Hash, _Pred, _Alloc>::unordered_set() [with _Value = std::__cxx11::basic_string<char>; _Hash = std::hash<std::__cxx11::basic_string<char> >; _Pred = std::equal_to<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/568 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/691 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/853.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__cxx11::basic_string<char>]/853 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: note: Considering inline candidate std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/843.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: missed:   will not early inline: std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580->std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/843, growth 9 exceeds --param early-inlining-insns divided by number of calls
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: note: Considering inline candidate int LdapOperation::search(const string&, int, const string&, const std::vector<std::__cxx11::basic_string<char> >&)/542.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: optimized:  Inlining int LdapOperation::search(const string&, int, const string&, const std::vector<std::__cxx11::basic_string<char> >&)/542 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: note: Considering inline candidate std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/879.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: missed:   will not early inline: std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580->std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/879, growth 14 exceeds --param early-inlining-insns divided by number of calls
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__cxx11::basic_string<char>]/873.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__cxx11::basic_string<char>]/873 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/859 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:14:30: note: Considering inline candidate std::vector<_Tp, _Alloc>::vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/533.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:14:30: optimized:  Inlining std::vector<_Tp, _Alloc>::vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/533 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580.
/usr/include/c++/11/bits/hashtable_policy.h:1922:5: optimized: Semantic equality hit:std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1287->std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char>, true> >]/1556
/usr/include/c++/11/bits/hashtable_policy.h:1922:5: optimized: Assembler symbol names:_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EEELb1EEEEE19_M_allocate_bucketsEm/1287->_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEEE19_M_allocate_bucketsEm/1556
/usr/include/c++/11/bits/char_traits.h:389:25: missed:   not inlinable: operator==.isra/1863 -> int __builtin_memcmp(const void*, const void*, long unsigned int)/1618, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_deallocate_nodes.isra/1862 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/bits/stl_vector.h:1770:24: missed:   not inlinable: _M_range_initialize.isra/1861 -> void std::__throw_length_error(const char*)/1610, function body not available
/usr/include/c++/11/bits/stl_vector.h:1759:24: missed:   not inlinable: _M_check_len.isra/1860 -> void std::__throw_length_error(const char*)/1610, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:1929:23: missed:   not inlinable: _M_allocate_buckets.isra/1859 -> void* __builtin_memset(void*, int, long unsigned int)/1620, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed:   not inlinable: _M_allocate_node.isra/1858 -> void* __builtin_eh_pointer(int)/1604, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed:   not inlinable: _M_allocate_node.isra/1858 -> void* __cxa_begin_catch(void*)/1605, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_allocate_node.isra/1858 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:1886:6: missed:   not inlinable: _M_allocate_node.isra/1858 -> void __cxa_rethrow()/1606, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed:   not inlinable: _M_allocate_node.isra/1858 -> void __cxa_end_catch()/1607, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.isra/1857 -> long int __builtin_expect(long int, long int)/1611, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.isra/1857 -> void std::__throw_bad_array_new_length()/1612, function body not available
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.isra/1857 -> void std::__throw_bad_alloc()/1613, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.isra/1857 -> void* operator new(std::size_t)/1614, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed:   not inlinable: _M_allocate_node.isra/1856 -> void* __builtin_eh_pointer(int)/1604, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed:   not inlinable: _M_allocate_node.isra/1856 -> void* __cxa_begin_catch(void*)/1605, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_allocate_node.isra/1856 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:1886:6: missed:   not inlinable: _M_allocate_node.isra/1856 -> void __cxa_rethrow()/1606, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed:   not inlinable: _M_allocate_node.isra/1856 -> void __cxa_end_catch()/1607, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.isra/1855 -> long int __builtin_expect(long int, long int)/1611, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.isra/1855 -> void std::__throw_bad_array_new_length()/1612, function body not available
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.isra/1855 -> void std::__throw_bad_alloc()/1613, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.isra/1855 -> void* operator new(std::size_t)/1614, function body not available
/usr/include/c++/11/bits/hashtable.h:434:22: missed:   not inlinable: _M_rehash_aux.isra/1854 -> long int __builtin_expect(long int, long int)/1611, function body not available
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: _M_rehash_aux.isra/1854 -> long int __builtin_expect(long int, long int)/1611, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_rehash_aux.isra/1854 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:1929:23: missed:   not inlinable: _M_allocate_buckets.isra/1853 -> void* __builtin_memset(void*, int, long unsigned int)/1620, function body not available
/usr/include/c++/11/bits/functional_hash.h:198:25: missed:   not inlinable: _M_insert.constprop.isra/1852 -> std::size_t std::_Hash_bytes(const void*, std::size_t, std::size_t)/1615, function body not available
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed:   not inlinable: _M_construct.constprop/1851 -> void std::__throw_logic_error(const char*)/1602, function body not available
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed:   not inlinable: _M_construct.constprop/1851 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_create(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1603, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.constprop/1850 -> long int __builtin_expect(long int, long int)/1611, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.constprop/1850 -> void __builtin_unreachable()/1847, unreachable
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.constprop/1850 -> void std::__throw_bad_alloc()/1613, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.constprop/1850 -> void* operator new(std::size_t)/1614, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_deallocate_node.constprop/1848 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_deallocate_node.constprop/1848 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.constprop/1846 -> long int __builtin_expect(long int, long int)/1611, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.constprop/1846 -> void __builtin_unreachable()/1847, unreachable
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.constprop/1846 -> void std::__throw_bad_alloc()/1613, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.constprop/1846 -> void* operator new(std::size_t)/1614, function body not available
/usr/include/c++/11/bits/char_traits.h:437:49: missed:   not inlinable: static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1628 -> void* __builtin_memcpy(void*, const void*, long unsigned int)/1608, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/1496 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/bits/hashtable.h:2363:7: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1440 -> void __cxa_end_catch()/1607, function body not available
/usr/include/c++/11/bits/hashtable.h:2368:4: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1440 -> void __cxa_rethrow()/1606, function body not available
/usr/include/c++/11/bits/hashtable.h:2363:7: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1440 -> void* __cxa_begin_catch(void*)/1605, function body not available
/usr/include/c++/11/bits/hashtable.h:2363:7: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1440 -> void* __builtin_eh_pointer(int)/1604, function body not available
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1422 -> void __cxa_end_catch()/1607, function body not available
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1422 -> void __cxa_rethrow()/1606, function body not available
/usr/include/c++/11/bits/stl_construct.h:196:11: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1422 -> static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/1263, call is unlikely and code size would grow
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1422 -> void* __cxa_begin_catch(void*)/1605, function body not available
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1422 -> void* __builtin_eh_pointer(int)/1604, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/1397 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/bits/hashtable.h:2016:35: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1320 -> std::pair<bool, long unsigned int> std::__detail::_Prime_rehash_policy::_M_need_rehash(std::size_t, std::size_t, std::size_t) const/1619, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed:   not inlinable: std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294 -> void __cxa_end_catch()/1607, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:140:5: missed:   not inlinable: std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294 -> void __cxa_rethrow()/1606, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed:   not inlinable: std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294 -> void* __cxa_begin_catch(void*)/1605, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed:   not inlinable: std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294 -> void* __builtin_eh_pointer(int)/1604, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/1263 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1261 -> void __cxa_end_catch()/1607, function body not available
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1261 -> void __cxa_rethrow()/1606, function body not available
/usr/include/c++/11/bits/stl_construct.h:196:11: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1261 -> static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/1263, call is unlikely and code size would grow
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1261 -> void* __cxa_begin_catch(void*)/1605, function body not available
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed:   not inlinable: static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1261 -> void* __builtin_eh_pointer(int)/1604, function body not available
/usr/include/c++/11/bits/hashtable.h:1323:2: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172 -> void __cxa_end_catch()/1607, function body not available
/usr/include/c++/11/bits/hashtable.h:1328:6: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172 -> void __cxa_rethrow()/1606, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172 -> long int __builtin_expect(long int, long int)/1611, function body not available
/usr/include/c++/11/bits/hashtable.h:1323:2: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172 -> void* __cxa_begin_catch(void*)/1605, function body not available
/usr/include/c++/11/bits/hashtable.h:1323:2: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172 -> void* __builtin_eh_pointer(int)/1604, function body not available
/usr/include/c++/11/bits/hashtable.h:434:22: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172 -> long int __builtin_expect(long int, long int)/1611, function body not available
/usr/include/c++/11/bits/hashtable.h:2321:23: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1165 -> void* __builtin_memset(void*, int, long unsigned int)/1620, function body not available
/usr/include/c++/11/bits/vector.tcc:485:7: missed:   not inlinable: void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067 -> void __cxa_end_catch()/1607, function body not available
/usr/include/c++/11/bits/vector.tcc:493:4: missed:   not inlinable: void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067 -> void __cxa_rethrow()/1606, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/bits/stl_construct.h:196:11: missed:   not inlinable: void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067 -> static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/1263, call is unlikely and code size would grow
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/bits/vector.tcc:485:7: missed:   not inlinable: void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067 -> void* __cxa_begin_catch(void*)/1605, function body not available
/usr/include/c++/11/bits/vector.tcc:485:7: missed:   not inlinable: void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067 -> void* __builtin_eh_pointer(int)/1604, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/bits/hashtable.h:2321:23: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1054 -> void* __builtin_memset(void*, int, long unsigned int)/1620, function body not available
/usr/include/c++/11/bits/hashtable.h:1267:2: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037 -> void __cxa_end_catch()/1607, function body not available
/usr/include/c++/11/bits/hashtable.h:1279:6: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037 -> void __cxa_rethrow()/1606, function body not available
/usr/include/c++/11/bits/hashtable.h:1277:22: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037 -> void* __builtin_memset(void*, int, long unsigned int)/1620, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037 -> long int __builtin_expect(long int, long int)/1611, function body not available
/usr/include/c++/11/bits/hashtable.h:1267:2: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037 -> void* __cxa_begin_catch(void*)/1605, function body not available
/usr/include/c++/11/bits/hashtable.h:1267:2: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037 -> void* __builtin_eh_pointer(int)/1604, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:119:33: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037 -> _M_deallocate_nodes.isra/1862, call is unlikely and code size would grow
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037 -> long int __builtin_expect(long int, long int)/1611, function body not available
/usr/include/c++/11/bits/hashtable.h:1263:15: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037 -> void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/hashtable.h:1253:20: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037 -> void* __builtin_memset(void*, int, long unsigned int)/1620, function body not available
/usr/include/c++/11/bits/hashtable.h:434:22: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037 -> long int __builtin_expect(long int, long int)/1611, function body not available
/usr/include/c++/11/bits/functional_hash.h:198:25: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::find(const key_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/976 -> std::size_t std::_Hash_bytes(const void*, std::size_t, std::size_t)/1615, function body not available
/usr/include/c++/11/bits/stl_vector.h:1198:21: missed:   not inlinable: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/903 -> void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067, --param max-inline-insns-auto limit reached
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/894 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/894 -> long int __builtin_expect(long int, long int)/1611, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/879 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/843 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840 -> void operator delete(void*, std::size_t)/1609, function body not available
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:30:1: missed:   not inlinable: std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580 -> std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/844, call is unlikely and code size would grow
/usr/include/c++/11/bits/unordered_set.h:97:11: missed:   not inlinable: std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580 -> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/895, call is unlikely and code size would grow
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:27:9: missed:   not inlinable: std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580 -> std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/844, call is unlikely and code size would grow
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580 -> void operator delete(void*, std::size_t)/1609, function body not available
/workspace/benchmarks/dataset_659/ldap.hpp:30:95: missed:   not inlinable: static std::string LdapObject::to_lower(const string&)/539 -> int tolower(int)/1616, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535 -> void operator delete(void*, std::size_t)/1609, function body not available
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.constprop/1850 into _M_allocate_node.isra/1858 which now has time 26.300000 and size 30, net change of -8.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.constprop/1846 into _M_allocate_node.isra/1856 which now has time 32.300000 and size 36, net change of -8.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:24:38: optimized:  Inlined void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/903 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580 which now has time 2284.800396 and size 116, net change of -9.
/usr/include/c++/11/bits/hashtable.h:1228:25: missed:   not inlinable: waitForResult.constprop/1849 -> void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037, --param max-inline-insns-auto limit reached
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:19:39: optimized:  Inlined waitForResult.constprop/1849 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580 which now has time 2191.884396 and size 125, net change of -10.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.isra/1864 into _M_allocate_buckets.isra/1859 which now has time 30.900000 and size 18, net change of +5.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.isra/1855 into _M_allocate_buckets.isra/1853 which now has time 30.900000 and size 18, net change of -8.
optimized:  Inlined static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1628 into _M_construct.constprop/1851 which now has time 28.402128 and size 37, net change of -7.
/usr/include/c++/11/bits/hashtable_policy.h:1916:22: optimized:  Inlined _M_deallocate_node.constprop/1865 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1054 which now has time 222.994734 and size 26, net change of +7.
/usr/include/c++/11/bits/stl_vector.h:305:26: optimized:  Inlined void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1122 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840 which now has time 42.153800 and size 42, net change of -7.
/usr/include/c++/11/bits/stl_vector.h:629:21: optimized:  Inlined _M_range_initialize.isra/1861 into std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/879 which now has time 39.147739 and size 41, net change of -9.
/usr/include/c++/11/bits/hashtable_policy.h:844:22: optimized:  Inlined _M_insert.constprop.isra/1852 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580 which now has time 5223.045555 and size 161, net change of -11.
/usr/include/c++/11/bits/hashtable.h:810:50: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1432 into _M_insert.constprop.isra/1852 which now has time 10115.800186 and size 47, net change of -10.
/usr/include/c++/11/bits/hashtable.h:2110:27: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1320 into _M_insert.constprop.isra/1852 which now has time 10993.731689 and size 47, net change of -13.
/usr/include/c++/11/bits/hashtable.h:2028:29: optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1442 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1320 which now has time 10954.344345 and size 32, net change of -11.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: optimized:  Inlined static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1261 into std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840 which now has time 208.153802 and size 69, net change of -10.
/usr/include/c++/11/bits/vector.tcc:436:14: optimized:  Inlined _M_check_len.isra/1860 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067 which now has time 274.230639 and size 118, net change of -10.
/usr/include/c++/11/ext/new_allocator.h:168:13: optimized:  Inlined std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/1866 into _M_deallocate_nodes.isra/1862 which now has time 292.994734 and size 18, net change of +7.
/usr/include/c++/11/bits/hashtable_policy.h:168:32: optimized:  Inlined _M_allocate_node.isra/1856 into _M_insert.constprop.isra/1852 which now has time 11463.879120 and size 47, net change of -8.
/usr/include/c++/11/bits/stl_uninitialized.h:151:15: optimized:  Inlined static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1422 into _M_range_initialize.isra/1861 which now has time 205.081341 and size 25, net change of -8.
/usr/include/c++/11/bits/hashtable.h:2021:13: optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1440 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1320 which now has time 11463.879120 and size 32, net change of -8.
/usr/include/c++/11/bits/hashtable.h:810:50: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1256 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::find(const key_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/976 which now has time 124.584402 and size 39, net change of -10.
/usr/include/c++/11/bits/hashtable.h:1532:12: optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1054 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/894 which now has time 236.194733 and size 32, net change of -7.
/usr/include/c++/11/bits/hashtable.h:440:47: optimized:  Inlined _M_allocate_buckets.isra/1853 into _M_rehash_aux.isra/1854 which now has time 250.280005 and size 57, net change of -7.
/usr/include/c++/11/bits/stl_function.h:370:20: optimized:  Inlined operator==.isra/1867 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1432 which now has time 10953.063049 and size 27, net change of +9.
/usr/include/c++/11/bits/hashtable.h:2361:17: optimized:  Inlined _M_rehash_aux.isra/1854 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1440 which now has time 13323.646973 and size 25, net change of -11.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.isra/1868 into _M_range_initialize.isra/1861 which now has time 205.573174 and size 25, net change of +5.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.isra/1869 into void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1122 which now has time 208.645832 and size 15, net change of +5.
/usr/include/c++/11/bits/hashtable.h:440:47: optimized:  Inlined _M_allocate_buckets.isra/1870 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037 which now has time 82.236936 and size 104, net change of +11.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.isra/1857 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067 which now has time 274.722669 and size 123, net change of -8.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: optimized:  Inlined std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/879 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580 which now has time 13509.720139 and size 372, net change of -13.
/usr/include/c++/11/bits/unordered_map.h:880:25: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::find(const key_type&) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/976 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535 which now has time 253.994124 and size 93, net change of -8.
/usr/include/c++/11/bits/hashtable.h:440:47: optimized:  Inlined _M_allocate_buckets.isra/1859 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172 which now has time 243.309855 and size 90, net change of -7.
/usr/include/c++/11/ext/new_allocator.h:168:13: optimized:  Inlined std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/1397 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294 which now has time 30.856102 and size 45, net change of -6.
/workspace/benchmarks/dataset_659/ldap.hpp:22:36: optimized:  Inlined operator==.isra/1872 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535 which now has time 229.057254 and size 102, net change of +9.
/usr/include/c++/11/bits/stl_pair.h:211:12: optimized:  Inlined std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1873 into std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/1866 which now has time 393.454699 and size 13, net change of +9.
/usr/include/c++/11/bits/stl_construct.h:196:11: optimized:  Inlined static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/1874 into std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1873 which now has time 1195.363983 and size 16, net change of +8.
/usr/include/c++/11/bits/stl_function.h:370:20: optimized:  Inlined operator==.isra/1863 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1256 which now has time 221.254106 and size 27, net change of -9.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:20:69: optimized:  Inlined std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580 which now has time 15162.107132 and size 474, net change of -9.
/workspace/benchmarks/dataset_659/ldap.hpp:22:25: optimized:  Inlined static std::string LdapObject::to_lower(const string&)/1875 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535 which now has time 18293.633972 and size 111, net change of +14.
/usr/include/c++/11/bits/stl_construct.h:196:11: optimized:  Inlined static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::__cxx11::basic_string<char>*; bool <anonymous> = false]/1876 into std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/843 which now has time 126.528783 and size 24, net change of +8.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlined std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/1877 into _M_allocate_node.isra/1858 which now has time 42.800000 and size 47, net change of +17.
/usr/include/c++/11/bits/hashtable.h:1325:11: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172 -> void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1165, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/hashtable.h:2320:32: optimized:  Inlined _M_deallocate_nodes.isra/1878 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1165 which now has time 1214.363981 and size 45, net change of +29.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlined std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/1496 into std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294 which now has time 39.863452 and size 62, net change of -8.
/workspace/benchmarks/dataset_659/ldap.hpp:20:42: optimized:  Inlined static std::string LdapObject::to_lower(const string&)/539 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535 which now has time 18648.126129 and size 111, net change of -8.
/usr/include/c++/11/bits/hashtable_policy.h:119:33: optimized:  Inlined _M_deallocate_nodes.isra/1882 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign_elements(_Ht&&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1037 which now has time 1263.600918 and size 133, net change of +29.
/usr/include/c++/11/bits/hashtable.h:1314:24: optimized:  Inlined std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1886 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172 which now has time 364.119747 and size 143, net change of +53.
/usr/include/c++/11/bits/stl_pair.h:211:12: optimized:  Inlined std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1889 into std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/1887 which now has time 704.262383 and size 13, net change of +17.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:27:9: optimized:  Inlined std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1891 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580 which now has time 19550.495361 and size 520, net change of +17.
/usr/include/c++/11/bits/unordered_set.h:97:11: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = std::__cxx11::basic_string<char>; _Value = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, true, true>]/1893 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580 which now has time 19772.190125 and size 545, net change of +25.
/usr/include/c++/11/bits/stl_pair.h:211:12: optimized:  Inlined std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1896 into std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >::~pair()/1397 which now has time 100.747015 and size 13, net change of +17.
/usr/include/c++/11/bits/stl_pair.h:314:17: optimized:  Inlined std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1898 into std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/1888 which now has time 1284.172815 and size 25, net change of +62.
/workspace/benchmarks/dataset_659/ldap.hpp:18:43: optimized:  Inlined std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1902 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535 which now has time 20849.106934 and size 111, net change of +62.
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed:   not inlinable: std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294 -> _M_allocate_node.isra/1858, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/stl_pair.h:314:17: optimized:  Inlined std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1906 into std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/1877 which now has time 232.945832 and size 25, net change of +62.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: optimized:  Inlined std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1910 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580 which now has time 20960.635742 and size 624, net change of +17.
/usr/include/c++/11/bits/stl_pair.h:314:17: optimized:  Inlined std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1912 into std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/1496 which now has time 204.547625 and size 25, net change of +62.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/1916 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1901 which now has time 1540.865591 and size 37, net change of +26.
/workspace/benchmarks/dataset_659/ldap.hpp:22:56: optimized:  Inlined std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/840 into std::vector<std::__cxx11::basic_string<char> > LdapObject::values(const string&) const/535 which now has time 21184.878052 and size 111, net change of -12.
/usr/include/c++/11/bits/hashtable.h:1306:20: optimized:  Inlined std::__detail::_ReuseOrAllocNode<_NodeAlloc>::__node_type* std::__detail::_ReuseOrAllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> >]/1294 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_assign(_Ht&&, const _NodeGenerator&) [with _Ht = const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&; _NodeGenerator = std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >; _Key = std::__cxx11::basic_string<char>; _Value = std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<std::__cxx11::basic_string<char> >; _Hash = std::hash<std::__cxx11::basic_string<char> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]/1172 which now has time 1671.057726 and size 380, net change of -9.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/1918 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1905 which now has time 21661.566803 and size 37, net change of +26.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/1920 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1909 which now has time 317.112384 and size 37, net change of +26.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/1922 into _M_allocate_node.isra/1856 which now has time 21986.750214 and size 36, net change of +26.
/usr/include/c++/11/bits/hashtable.h:308:57: optimized:  Inlined _M_deallocate_node.constprop/1848 into _M_insert.constprop.isra/1852 which now has time 21986.750214 and size 47, net change of -7.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/1924 into static std::string LdapObject::to_lower(const string&)/1875 which now has time 22209.804352 and size 23, net change of +26.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/1926 into void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/903 which now has time 22367.111664 and size 24, net change of +26.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/1928 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1261 which now has time 22466.370758 and size 37, net change of +26.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/1930 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1422 which now has time 22550.503632 and size 35, net change of +26.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/1932 into std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/1888 which now has time 1702.783796 and size 25, net change of +26.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/1934 into static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]/1915 which now has time 1734.509867 and size 37, net change of +26.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/1936 into void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]/1067 which now has time 285.125276 and size 149, net change of +26.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/1938 into std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/1877 which now has time 327.514991 and size 25, net change of +26.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/1940 into static std::string LdapObject::to_lower(const string&)/539 which now has time 22575.753601 and size 23, net change of +26.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/1942 into std::vector<std::__cxx11::basic_string<char> > queryAttributes(LdapOperation&, const string&, const string&, const string&, int)/580 which now has time 22586.156219 and size 901, net change of +26.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.constprop/1851 into std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = std::vector<std::__cxx11::basic_string<char> >]/1496 which now has time 1738.431067 and size 25, net change of -11.
Unit growth for small function inlining: 1327->1952 (47%)

Inlined 598 calls, eliminated 311 functions

/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_14, _17);
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_vector.h:678:7: note: vectorized 0 loops in function.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_14, _17);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_14, _17);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_28, _9);
/usr/include/c++/11/bits/stl_vector.h:683:7: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:683:7: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_26, _29);
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable.h:2316:5: note: vectorized 0 loops in function.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_26, _29);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_26, _29);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_51, _24);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_15, _18);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_49, 72);
/usr/include/c++/11/bits/hashtable.h:2321:23: missed: statement clobbers memory: __builtin_memset (_3, 0, _2);
/usr/include/c++/11/bits/hashtable.h:2325:5: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:2325:5: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_6, _10);
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_construct.h:160:2: note: vectorized 0 loops in function.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_6, _10);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_6, _10);
/usr/include/c++/11/bits/stl_construct.h:164:2: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_construct.h:164:2: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
consider run-time aliasing test between MEM[(const struct basic_string *)__first_8]._M_dataplus._M_p and *__cur_18.D.55603._M_allocated_capacity
consider run-time aliasing test between MEM[(const struct basic_string *)__first_8]._M_dataplus._M_p and MEM <__int128 unsigned> [(char * {ref-all})__cur_18 + 16B]
consider run-time aliasing test between MEM <__int128 unsigned> [(char * {ref-all})__first_8 + 16B] and MEM <__int128 unsigned> [(char * {ref-all})__cur_18 + 16B]
/usr/include/c++/11/bits/stl_uninitialized.h:1031:22: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_uninitialized.h:1031:22: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_uninitialized.h:1031:22: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_uninitialized.h:1031:22: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/vector.tcc:426:7: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/vector.tcc:426:7: missed: splitting region at control altering definition _115 = std::__cxx11::basic_string<char>::_M_create (_2, &__dnew, 0);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _112 = operator new (prephitmp_70);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _115 = std::__cxx11::basic_string<char>::_M_create (_2, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb11
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb15
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb16
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_128, _22, _21);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at dominance boundary bb7
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_94, _32);
/usr/include/c++/11/bits/vector.tcc:502:30: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/vector.tcc:502:30: note: SLPing BB part
/usr/include/c++/11/bits/vector.tcc:502:30: note: Costing subgraph: 
/usr/include/c++/11/bits/vector.tcc:502:30: note: node 0x19186398 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/vector.tcc:502:30: note: op template: this_10(D)->D.65105._M_impl.D.64419._M_start = iftmp.12_15;
/usr/include/c++/11/bits/vector.tcc:502:30: note: 	stmt 0 this_10(D)->D.65105._M_impl.D.64419._M_start = iftmp.12_15;
/usr/include/c++/11/bits/vector.tcc:502:30: note: 	stmt 1 this_10(D)->D.65105._M_impl.D.64419._M_finish = __cur_113;
/usr/include/c++/11/bits/vector.tcc:502:30: note: 	children 0x19186410
/usr/include/c++/11/bits/vector.tcc:502:30: note: node (external) 0x19186410 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/vector.tcc:502:30: note: 	{ iftmp.12_15, __cur_113 }
/usr/include/c++/11/bits/vector.tcc:502:30: note: Cost model analysis: 
/usr/include/c++/11/bits/vector.tcc:502:30: note: Cost model analysis for part in loop 0:
  Vector cost: 20
  Scalar cost: 24
/usr/include/c++/11/bits/vector.tcc:502:30: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/vector.tcc:502:30: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/vector.tcc:502:30: note: node 0x19186398 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/vector.tcc:502:30: note: op template: this_10(D)->D.65105._M_impl.D.64419._M_start = iftmp.12_15;
/usr/include/c++/11/bits/vector.tcc:502:30: note: 	stmt 0 this_10(D)->D.65105._M_impl.D.64419._M_start = iftmp.12_15;
/usr/include/c++/11/bits/vector.tcc:502:30: note: 	stmt 1 this_10(D)->D.65105._M_impl.D.64419._M_finish = __cur_113;
/usr/include/c++/11/bits/vector.tcc:502:30: note: 	children 0x19186410
/usr/include/c++/11/bits/vector.tcc:502:30: note: node (external) 0x19186410 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/vector.tcc:502:30: note: 	{ iftmp.12_15, __cur_113 }
/usr/include/c++/11/bits/vector.tcc:502:30: note: ------>vectorizing SLP node starting from: this_10(D)->D.65105._M_impl.D.64419._M_start = iftmp.12_15;
/usr/include/c++/11/bits/vector.tcc:502:30: note: vect_is_simple_use: operand __cur_113 = PHI <__cur_183(43), __new_finish_20(21)>, type of def: internal
/usr/include/c++/11/bits/vector.tcc:502:30: note: transform store. ncopies = 1
/usr/include/c++/11/bits/vector.tcc:502:30: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: this_10(D)->D.65105._M_impl.D.64419._M_start
/usr/include/c++/11/bits/vector.tcc:502:30: note: created vectp.497_154
/usr/include/c++/11/bits/vector.tcc:502:30: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)vectp.497_154] = _158;
/usr/include/c++/11/bits/vector.tcc:502:30: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/vector.tcc:502:30: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/vector.tcc:502:30: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/vector.tcc:502:30: missed: splitting region at dominance boundary bb30
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb3
/usr/include/c++/11/bits/vector.tcc:485:7: missed: statement clobbers memory: _3 = __builtin_eh_pointer (2);
/usr/include/c++/11/bits/vector.tcc:485:7: missed: statement clobbers memory: __cxa_begin_catch (_3);
/usr/include/c++/11/bits/stl_construct.h:196:11: missed: statement clobbers memory: std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char>*> (iftmp.12_15, iftmp.12_15);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (iftmp.12_15, prephitmp_172);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_54, _56);
/usr/include/c++/11/bits/vector.tcc:493:4: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/vector.tcc:485:7: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/vector.tcc:485:7: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/vector.tcc:485:7: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_vector.h:1759:24: missed: statement clobbers memory: std::__throw_length_error ("vector::_M_realloc_insert");
/usr/include/c++/11/bits/stl_vector.h:1759:24: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:456:7: missed: couldn't vectorize loop
/usr/include/c++/11/bits/basic_string.h:456:7: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable_policy.h:1870:7: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_43, _67, _68);
/usr/include/c++/11/bits/hashtable_policy.h:1870:7: missed: splitting region at control altering definition _32 = std::__cxx11::basic_string<char>::_M_create (_3, &__dnew, 0);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _29 = operator new (72);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _32 = std::__cxx11::basic_string<char>::_M_create (_3, &__dnew, 0);
/usr/include/c++/11/bits/hashtable_policy.h:219:34: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable_policy.h:219:34: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/hashtable_policy.h:219:34: note: ***** Re-trying analysis with vector mode V8QI
/usr/include/c++/11/bits/hashtable_policy.h:219:34: note: ***** Analysis failed with vector mode V8QI
/usr/include/c++/11/bits/hashtable_policy.h:219:34: missed: splitting region at dominance boundary bb7
/usr/include/c++/11/bits/hashtable_policy.h:219:34: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:219:34: missed: splitting region at dominance boundary bb11
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb12
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_44, _17, _18);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at control altering definition _62 = operator new (_25);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: not vectorized: statement can throw an exception: _62 = operator new (_25);
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:98:4: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0x191963a8 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)_29 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)_29 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)_29 + 40B]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0x19196420
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0x19196420 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis for part in loop 0:
  Vector cost: 24
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0x191963a8 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)_29 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)_29 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)_29 + 40B]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0x19196420
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0x19196420 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_impl_data *)_29 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vect_is_simple_use: operand 0B, type of def: constant
/usr/include/c++/11/bits/stl_vector.h:98:4: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:98:4: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_impl_data *)_29 + 40B]._M_start
/usr/include/c++/11/bits/stl_vector.h:98:4: note: created vectp.524_31
/usr/include/c++/11/bits/stl_vector.h:98:4: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)vectp.524_31] = { 0, 0 };
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:98:4: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb21
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb22
/usr/include/c++/11/bits/stl_iterator.h:1028:9: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_iterator.h:1028:9: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_iterator.h:1028:9: missed: splitting region at control altering definition _78 = std::__cxx11::basic_string<char>::_M_create (__cur_126, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _78 = std::__cxx11::basic_string<char>::_M_create (__cur_126, &__dnew, 0);
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:361:25: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node 0x191963a8 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: op template: MEM[(struct _Vector_base *)_29 + 40B]._M_impl.D.64419._M_start = iftmp.12_55;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 0 MEM[(struct _Vector_base *)_29 + 40B]._M_impl.D.64419._M_start = iftmp.12_55;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 1 MEM[(struct _Vector_base *)_29 + 40B]._M_impl.D.64419._M_finish = iftmp.12_55;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	children 0x19196420
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node (external) 0x19196420 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	{ iftmp.12_55, iftmp.12_55 }
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Cost model analysis for part in loop 0:
  Vector cost: 16
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node 0x191963a8 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: op template: MEM[(struct _Vector_base *)_29 + 40B]._M_impl.D.64419._M_start = iftmp.12_55;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 0 MEM[(struct _Vector_base *)_29 + 40B]._M_impl.D.64419._M_start = iftmp.12_55;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 1 MEM[(struct _Vector_base *)_29 + 40B]._M_impl.D.64419._M_finish = iftmp.12_55;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	children 0x19196420
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node (external) 0x19196420 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	{ iftmp.12_55, iftmp.12_55 }
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_base *)_29 + 40B]._M_impl.D.64419._M_start = iftmp.12_55;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: vect_is_simple_use: operand iftmp.12_55 = PHI <0B(13), _62(21)>, type of def: external
/usr/include/c++/11/bits/stl_vector.h:361:25: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:361:25: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_base *)_29 + 40B]._M_impl.D.64419._M_start
/usr/include/c++/11/bits/stl_vector.h:361:25: note: created vectp.526_56
/usr/include/c++/11/bits/stl_vector.h:361:25: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)vectp.526_56] = _37;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:361:25: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:361:25: missed: splitting region at dominance boundary bb28
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:361:25: missed: splitting region at dominance boundary bb32
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb33
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_43, _67, _68);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at loop 1 exit at bb57
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: splitting region at dominance boundary bb34
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: splitting region at dominance boundary bb51
/usr/include/c++/11/bits/hashtable_policy.h:1881:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable_policy.h:1881:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable_policy.h:1881:13: missed: splitting region at dominance boundary bb24
/usr/include/c++/11/bits/hashtable_policy.h:1881:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:1881:13: missed: splitting region at dominance boundary bb36
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb15
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: _74 = __builtin_eh_pointer (8);
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_begin_catch (_74);
/usr/include/c++/11/bits/stl_construct.h:196:11: missed: statement clobbers memory: std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char>*> (iftmp.12_55, __cur_34);
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/hashtable_policy.h:1870:7: missed: not vectorized: statement can throw an exception: resx 7
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_50, _52);
/usr/include/c++/11/bits/hashtable_policy.h:1870:7: missed: not vectorized: statement can throw an exception: resx 5
/usr/include/c++/11/bits/stl_vector.h:337:7: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:337:7: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_vector.h:337:7: missed: splitting region at dominance boundary bb43
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: not vectorized: statement can throw an exception: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: not vectorized: statement can throw an exception: std::__throw_bad_array_new_length ();
/usr/include/c++/11/ext/new_allocator.h:116:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: splitting region at dominance boundary bb3
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_22, _24);
/usr/include/c++/11/bits/hashtable_policy.h:1870:7: missed: not vectorized: statement can throw an exception: resx 4
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb48
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed: statement clobbers memory: _5 = __builtin_eh_pointer (3);
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed: statement clobbers memory: __cxa_begin_catch (_5);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_29, 72);
/usr/include/c++/11/bits/hashtable_policy.h:1886:6: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_193, _196);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_104, _107);
/usr/include/c++/11/bits/hashtable_policy.h:125:8: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:125:8: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/usr/include/c++/11/bits/basic_string.h:456:7: missed: couldn't vectorize loop
/usr/include/c++/11/bits/basic_string.h:456:7: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/basic_string.h:456:7: missed: couldn't vectorize loop
/usr/include/c++/11/bits/basic_string.h:456:7: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable.h:1289:7: note: vectorized 0 loops in function.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_104, _107);
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_278, _146, _147);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_193, _196);
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_35, _235, _236);
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: splitting region at control altering definition _79 = std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >::_M_allocate_node.isra (_22);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _74 = operator new (_73);
/usr/include/c++/11/bits/hashtable_policy.h:1929:23: missed: statement clobbers memory: __builtin_memset (_74, 0, _73);
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: statement clobbers memory: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: statement clobbers memory: std::__throw_bad_array_new_length ();
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed: not vectorized: statement can throw an exception: _79 = std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >::_M_allocate_node.isra (_22);
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed: splitting region at dominance boundary bb167
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed: splitting region at dominance boundary bb14
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed: splitting region at control altering definition _111 = std::__cxx11::basic_string<char>::_M_create (_77, &__dnew, 0);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_104, _107);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_409, _102);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_93, _96);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _111 = std::__cxx11::basic_string<char>::_M_create (_77, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb28
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb32
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb33
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_221, _84, _85);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at control altering definition _141 = operator new (_68);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: not vectorized: statement can throw an exception: _141 = operator new (_68);
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:98:4: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0x18fca338 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)_75 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)_75 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)_75 + 40B]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0x18fca3b0
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0x18fca3b0 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis for part in loop 0:
  Vector cost: 24
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0x18fca338 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)_75 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)_75 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)_75 + 40B]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0x18fca3b0
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0x18fca3b0 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_impl_data *)_75 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vect_is_simple_use: operand 0B, type of def: constant
/usr/include/c++/11/bits/stl_vector.h:98:4: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:98:4: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_impl_data *)_75 + 40B]._M_start
/usr/include/c++/11/bits/stl_vector.h:98:4: note: created vectp.545_486
/usr/include/c++/11/bits/stl_vector.h:98:4: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)vectp.545_486] = { 0, 0 };
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:98:4: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb160
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb42
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at control altering definition _157 = std::__cxx11::basic_string<char>::_M_create (__cur_290, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _157 = std::__cxx11::basic_string<char>::_M_create (__cur_290, &__dnew, 0);
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:361:25: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node 0x18fca338 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: op template: MEM[(struct _Vector_base *)_75 + 40B]._M_impl.D.64419._M_start = iftmp.12_134;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 0 MEM[(struct _Vector_base *)_75 + 40B]._M_impl.D.64419._M_start = iftmp.12_134;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 1 MEM[(struct _Vector_base *)_75 + 40B]._M_impl.D.64419._M_finish = iftmp.12_134;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	children 0x18fca3b0
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node (external) 0x18fca3b0 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	{ iftmp.12_134, iftmp.12_134 }
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Cost model analysis for part in loop 0:
  Vector cost: 16
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node 0x18fca338 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: op template: MEM[(struct _Vector_base *)_75 + 40B]._M_impl.D.64419._M_start = iftmp.12_134;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 0 MEM[(struct _Vector_base *)_75 + 40B]._M_impl.D.64419._M_start = iftmp.12_134;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 1 MEM[(struct _Vector_base *)_75 + 40B]._M_impl.D.64419._M_finish = iftmp.12_134;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	children 0x18fca3b0
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node (external) 0x18fca3b0 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	{ iftmp.12_134, iftmp.12_134 }
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_base *)_75 + 40B]._M_impl.D.64419._M_start = iftmp.12_134;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: vect_is_simple_use: operand iftmp.12_134 = PHI <0B(34), _141(160)>, type of def: external
/usr/include/c++/11/bits/stl_vector.h:361:25: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:361:25: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_base *)_75 + 40B]._M_impl.D.64419._M_start
/usr/include/c++/11/bits/stl_vector.h:361:25: note: created vectp.547_477
/usr/include/c++/11/bits/stl_vector.h:361:25: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)vectp.547_477] = _478;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:361:25: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:361:25: missed: splitting region at dominance boundary bb48
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:361:25: missed: splitting region at dominance boundary bb52
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb53
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_278, _146, _147);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at loop 3 exit at bb164
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: splitting region at dominance boundary bb54
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: splitting region at dominance boundary bb68
/usr/include/c++/11/bits/stl_vector.h:557:26: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:557:26: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_vector.h:557:26: missed: splitting region at control altering definition _168 = std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >::_M_allocate_node.isra (_48);
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed: not vectorized: statement can throw an exception: _168 = std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > >::_M_allocate_node.isra (_48);
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed: splitting region at dominance boundary bb182
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed: splitting region at dominance boundary bb74
/usr/include/c++/11/bits/hashtable_policy.h:144:32: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:144:32: missed: splitting region at control altering definition _200 = std::__cxx11::basic_string<char>::_M_create (_166, &__dnew, 0);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_193, _196);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_155, _191);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_182, _185);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _200 = std::__cxx11::basic_string<char>::_M_create (_166, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb88
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb92
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb93
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_192, _173, _174);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at control altering definition _230 = operator new (_27);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: not vectorized: statement can throw an exception: _230 = operator new (_27);
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:98:4: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0x18fca338 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)_164 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)_164 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)_164 + 40B]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0x18fca3b0
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0x18fca3b0 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis for part in loop 1:
  Vector cost: 24
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0x18fca338 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)_164 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)_164 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)_164 + 40B]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0x18fca3b0
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0x18fca3b0 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_impl_data *)_164 + 40B]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vect_is_simple_use: operand 0B, type of def: constant
/usr/include/c++/11/bits/stl_vector.h:98:4: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:98:4: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_impl_data *)_164 + 40B]._M_start
/usr/include/c++/11/bits/stl_vector.h:98:4: note: created vectp.549_475
/usr/include/c++/11/bits/stl_vector.h:98:4: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)vectp.549_475] = { 0, 0 };
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:98:4: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb175
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb102
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at control altering definition _246 = std::__cxx11::basic_string<char>::_M_create (__cur_328, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _246 = std::__cxx11::basic_string<char>::_M_create (__cur_328, &__dnew, 0);
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:361:25: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node 0x18fca338 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: op template: MEM[(struct _Vector_base *)_164 + 40B]._M_impl.D.64419._M_start = iftmp.12_223;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 0 MEM[(struct _Vector_base *)_164 + 40B]._M_impl.D.64419._M_start = iftmp.12_223;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 1 MEM[(struct _Vector_base *)_164 + 40B]._M_impl.D.64419._M_finish = iftmp.12_223;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	children 0x18fca3b0
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node (external) 0x18fca3b0 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	{ iftmp.12_223, iftmp.12_223 }
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Cost model analysis for part in loop 1:
  Vector cost: 16
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node 0x18fca338 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: op template: MEM[(struct _Vector_base *)_164 + 40B]._M_impl.D.64419._M_start = iftmp.12_223;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 0 MEM[(struct _Vector_base *)_164 + 40B]._M_impl.D.64419._M_start = iftmp.12_223;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 1 MEM[(struct _Vector_base *)_164 + 40B]._M_impl.D.64419._M_finish = iftmp.12_223;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	children 0x18fca3b0
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node (external) 0x18fca3b0 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	{ iftmp.12_223, iftmp.12_223 }
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_base *)_164 + 40B]._M_impl.D.64419._M_start = iftmp.12_223;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: vect_is_simple_use: operand iftmp.12_223 = PHI <0B(94), _230(175)>, type of def: external
/usr/include/c++/11/bits/stl_vector.h:361:25: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:361:25: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_base *)_164 + 40B]._M_impl.D.64419._M_start
/usr/include/c++/11/bits/stl_vector.h:361:25: note: created vectp.551_459
/usr/include/c++/11/bits/stl_vector.h:361:25: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)vectp.551_459] = _460;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:361:25: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:361:25: missed: splitting region at dominance boundary bb108
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:361:25: missed: splitting region at dominance boundary bb112
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb113
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_35, _235, _236);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at loop 5 exit at bb179
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: splitting region at dominance boundary bb114
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: splitting region at dominance boundary bb129
/usr/include/c++/11/bits/stl_vector.h:557:26: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:557:26: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_vector.h:557:26: missed: splitting region at loop 1 exit at bb184
/usr/include/c++/11/bits/hashtable.h:1312:39: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:1312:39: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:1312:39: missed: splitting region at dominance boundary bb147
/usr/include/c++/11/bits/hashtable.h:1312:39: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable.h:1312:39: missed: splitting region at dominance boundary bb148
/usr/include/c++/11/bits/hashtable.h:1312:39: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable.h:1312:39: missed: splitting region at dominance boundary bb104
/usr/include/c++/11/bits/hashtable.h:1312:39: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable.h:1312:39: missed: splitting region at dominance boundary bb116
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb96
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: _242 = __builtin_eh_pointer (19);
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_begin_catch (_242);
/usr/include/c++/11/bits/stl_construct.h:196:11: missed: statement clobbers memory: std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char>*> (iftmp.12_489, __cur_487);
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: not vectorized: statement can throw an exception: resx 18
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_218, _220);
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: not vectorized: statement can throw an exception: resx 16
/usr/include/c++/11/bits/stl_vector.h:337:7: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:337:7: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_vector.h:337:7: missed: splitting region at dominance boundary bb123
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: not vectorized: statement can throw an exception: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: not vectorized: statement can throw an exception: std::__throw_bad_array_new_length ();
/usr/include/c++/11/ext/new_allocator.h:116:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: splitting region at dominance boundary bb84
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_178, _180);
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: not vectorized: statement can throw an exception: resx 15
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb131
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb149
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: statement clobbers memory: _170 = __builtin_eh_pointer (14);
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: statement clobbers memory: __cxa_begin_catch (_170);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_492, 72);
/usr/include/c++/11/bits/hashtable_policy.h:140:5: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: not vectorized: statement can throw an exception: resx 13
/usr/include/c++/11/bits/hashtable_policy.h:137:8: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: splitting region at dominance boundary bb150
/usr/include/c++/11/bits/hashtable_policy.h:137:8: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: splitting region at dominance boundary bb44
/usr/include/c++/11/bits/hashtable_policy.h:137:8: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: splitting region at dominance boundary bb56
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb36
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: _153 = __builtin_eh_pointer (11);
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_begin_catch (_153);
/usr/include/c++/11/bits/stl_construct.h:196:11: missed: statement clobbers memory: std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char>*> (iftmp.12_134, __cur_488);
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: not vectorized: statement can throw an exception: resx 10
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_129, _131);
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: not vectorized: statement can throw an exception: resx 8
/usr/include/c++/11/bits/stl_vector.h:337:7: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:337:7: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_vector.h:337:7: missed: splitting region at dominance boundary bb63
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: not vectorized: statement can throw an exception: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: not vectorized: statement can throw an exception: std::__throw_bad_array_new_length ();
/usr/include/c++/11/ext/new_allocator.h:116:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: splitting region at dominance boundary bb24
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_89, _91);
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: not vectorized: statement can throw an exception: resx 7
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb70
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb137
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: statement clobbers memory: _81 = __builtin_eh_pointer (6);
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: statement clobbers memory: __cxa_begin_catch (_81);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_75, 72);
/usr/include/c++/11/bits/hashtable_policy.h:140:5: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/hashtable.h:1289:7: missed: not vectorized: statement can throw an exception: resx 5
/usr/include/c++/11/bits/hashtable_policy.h:137:8: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:137:8: missed: splitting region at dominance boundary bb151
/usr/include/c++/11/bits/hashtable.h:1323:2: missed: statement clobbers memory: _8 = __builtin_eh_pointer (1);
/usr/include/c++/11/bits/hashtable.h:1323:2: missed: statement clobbers memory: __cxa_begin_catch (_8);
/usr/include/c++/11/bits/hashtable.h:1325:11: missed: statement clobbers memory: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear (this_19(D));
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_54, _59);
/usr/include/c++/11/bits/hashtable.h:1328:6: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/hashtable.h:1323:2: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/hashtable.h:1323:2: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:1323:2: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:1323:2: missed: splitting region at dominance boundary bb153
/usr/include/c++/11/bits/hashtable.h:1323:2: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable.h:1323:2: missed: splitting region at dominance boundary bb12
/usr/include/c++/11/bits/hashtable.h:1323:2: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable.h:1323:2: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_94, _97);
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable.h:1238:7: note: vectorized 0 loops in function.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_94, _97);
/usr/include/c++/11/bits/hashtable.h:1253:20: missed: statement clobbers memory: __builtin_memset (pretmp_165, 0, _3);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _78 = operator new (_77);
/usr/include/c++/11/bits/hashtable_policy.h:1929:23: missed: statement clobbers memory: __builtin_memset (_78, 0, _77);
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: statement clobbers memory: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: statement clobbers memory: std::__throw_bad_array_new_length ();
/usr/include/c++/11/bits/hashtable.h:1260:6: missed: not vectorized: more than one data ref in stmt: this_15(D)->_M_rehash_policy = __ht_18(D)->_M_rehash_policy;
/usr/include/c++/11/bits/hashtable.h:1263:15: missed: not vectorized: statement can throw an exception: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign<const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&, std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, true> > > > (this_15(D), __ht_18(D), &__roan);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__former_buckets_10, _46);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_94, _97);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_155, _92);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_83, _86);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_75, 72);
/usr/include/c++/11/bits/hashtable.h:1238:7: missed: not vectorized: statement can throw an exception: resx 4
/usr/include/c++/11/bits/hashtable.h:1267:2: missed: statement clobbers memory: _6 = __builtin_eh_pointer (2);
/usr/include/c++/11/bits/hashtable.h:1267:2: missed: statement clobbers memory: __cxa_begin_catch (_6);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_52, _57);
/usr/include/c++/11/bits/hashtable.h:1277:22: missed: statement clobbers memory: __builtin_memset (_9, 0, _8);
/usr/include/c++/11/bits/hashtable.h:1279:6: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/hashtable.h:1267:2: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_110, _112);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_103, _106);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_99, 72);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_114, _117);
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: SLPing BB part
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: Costing subgraph: 
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: node 0x191fa948 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: op template: MEM[(struct _ReuseOrAllocNode *)&__roan]._M_nodes = _41;
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: 	stmt 0 MEM[(struct _ReuseOrAllocNode *)&__roan]._M_nodes = _41;
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: 	stmt 1 MEM[(struct _ReuseOrAllocNode *)&__roan]._M_h = this_15(D);
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: 	children 0x191fa9c0
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: node (external) 0x191fa9c0 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: 	{ _41, this_15(D) }
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: Cost model analysis: 
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: Cost model analysis for part in loop 0:
  Vector cost: 20
  Scalar cost: 24
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: node 0x191fa948 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: op template: MEM[(struct _ReuseOrAllocNode *)&__roan]._M_nodes = _41;
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: 	stmt 0 MEM[(struct _ReuseOrAllocNode *)&__roan]._M_nodes = _41;
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: 	stmt 1 MEM[(struct _ReuseOrAllocNode *)&__roan]._M_h = this_15(D);
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: 	children 0x191fa9c0
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: node (external) 0x191fa9c0 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: 	{ _41, this_15(D) }
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: ------>vectorizing SLP node starting from: MEM[(struct _ReuseOrAllocNode *)&__roan]._M_nodes = _41;
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: vect_is_simple_use: operand this_15(D), type of def: external
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: conflicting alias set types.
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: transform store. ncopies = 1
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _ReuseOrAllocNode *)&__roan]._M_nodes
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: created &MEM[(struct _ReuseOrAllocNode *)&__roan]._M_nodes
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: add new stmt: MEM <vector(2) long unsigned int> [(void *)&__roan] = _147;
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/hashtable_policy.h:115:9: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/hashtable_policy.h:115:9: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: optimized: loop with 1 iterations completely unrolled (header execution count 0)
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:16:30: optimized: loop with 1 iterations completely unrolled (header execution count 13779434)
/workspace/benchmarks/dataset_659/ldap.hpp:22:25: optimized: sinking common stores with same value to D.93844
/usr/include/c++/11/bits/basic_string.h:672:23: optimized: sinking common stores with same value to D.93844
/workspace/benchmarks/dataset_659/ldap.hpp:22:25: optimized: sinking common stores with same value to D.93844
/usr/include/c++/11/bits/basic_string.h:672:23: optimized: sinking common stores with same value to D.93844
/workspace/benchmarks/dataset_659/ldap.hpp:30:95: missed: statement clobbers memory: _273 = tolower (_272);
/workspace/benchmarks/dataset_659/ldap.hpp:30:95: missed: statement clobbers memory: _297 = tolower (_296);
/usr/include/c++/11/bits/hashtable_policy.h:283:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/basic_string.h:195:28: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/basic_string.h:240:14: missed: failed: evolution of base is not affine.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_543, _546);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_513, _516);
/usr/include/c++/11/bits/hashtable_policy.h:283:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1251:33: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2391:22: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:44: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:21: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:37: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2393:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2395:29: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2396:17: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2397:31: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: not vectorized: control flow in loop.
/workspace/benchmarks/dataset_659/ldap.hpp:53:36: missed: couldn't vectorize loop
/workspace/benchmarks/dataset_659/ldap.hpp:53:36: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable_policy.h:162:7: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:162:7: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/usr/include/c++/11/bits/hashtable.h:2386:14: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable.h:2386:14: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable_policy.h:1617:29: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1617:29: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/basic_string.h:456:7: missed: couldn't vectorize loop
/usr/include/c++/11/bits/basic_string.h:456:7: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/basic_string.h:168:36: missed: couldn't vectorize loop
/usr/include/c++/11/bits/basic_string.h:168:36: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_algo.h:4295:22: missed: couldn't vectorize loop
/workspace/benchmarks/dataset_659/ldap.hpp:30:95: missed: statement clobbers memory: _297 = tolower (_296);
/usr/include/c++/11/bits/stl_algo.h:4295:22: missed: couldn't vectorize loop
/workspace/benchmarks/dataset_659/ldap.hpp:30:95: missed: statement clobbers memory: _273 = tolower (_272);
/usr/include/c++/11/bits/basic_string.h:456:7: missed: couldn't vectorize loop
/usr/include/c++/11/bits/basic_string.h:456:7: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable_policy.h:1617:29: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1617:29: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable_policy.h:1617:29: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1617:29: missed: not vectorized: control flow in loop.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: note: vectorized 0 loops in function.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:1843:14: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1251:33: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_125, _243, _244);
/workspace/benchmarks/dataset_659/ldap.hpp:30:95: missed: statement clobbers memory: _273 = tolower (_272);
/workspace/benchmarks/dataset_659/ldap.hpp:30:95: missed: statement clobbers memory: _297 = tolower (_296);
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_984, _343, _344);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: failed: evolution of base is not affine.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/char_traits.h:389:25: missed: statement clobbers memory: _396 = __builtin_memcmp (_388, _390, _389);
/usr/include/c++/11/bits/hashtable_policy.h:283:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1251:33: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2391:22: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:44: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:21: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:37: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2393:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2395:29: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2396:17: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2397:31: missed: failed: evolution of base is not affine.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_513, _516);
/usr/include/c++/11/bits/hashtable_policy.h:283:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/basic_string.h:195:28: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/basic_string.h:240:14: missed: failed: evolution of base is not affine.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_543, _546);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: failed: evolution of base is not affine.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/char_traits.h:389:25: missed: statement clobbers memory: _985 = __builtin_memcmp (pretmp_1054, _986, pretmp_1056);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: splitting region at control altering definition _96 = std::__cxx11::basic_string<char>::_M_create (&D.76061[0], &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _96 = std::__cxx11::basic_string<char>::_M_create (&D.76061[0], &__dnew, 0);
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:98:4: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0x19353608 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)entries_14(D)]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)entries_14(D)]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)entries_14(D)]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0x19353680
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0x19353680 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis for part in loop 0:
  Vector cost: 24
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0x19353608 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)entries_14(D)]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)entries_14(D)]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)entries_14(D)]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0x19353680
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0x19353680 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_impl_data *)entries_14(D)]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vect_is_simple_use: operand 0B, type of def: constant
/usr/include/c++/11/bits/stl_vector.h:98:4: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:98:4: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_impl_data *)entries_14(D)]._M_start
/usr/include/c++/11/bits/stl_vector.h:98:4: note: created vectp.632_960
/usr/include/c++/11/bits/stl_vector.h:98:4: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)vectp.632_960] = { 0, 0 };
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:98:4: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb7
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb11
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb12
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_575, _35, _38);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at control altering definition _124 = operator new (32);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: not vectorized: statement can throw an exception: _124 = operator new (32);
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: splitting region at dominance boundary bb13
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: splitting region at control altering definition _138 = std::__cxx11::basic_string<char>::_M_create (_124, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _138 = std::__cxx11::basic_string<char>::_M_create (_124, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb18
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb22
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb23
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_570, _128, _129);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at control altering definition _238 = operator new (_1059);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_152, _155);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_124, 32);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_186, _285);
/usr/include/c++/11/bits/hashtable.h:1228:25: missed: not vectorized: statement can throw an exception: std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign_elements<const std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::basic_string<char> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >&> (pretmp_56, _527);
/usr/include/c++/11/bits/functional_hash.h:198:25: missed: statement clobbers memory: _183 = std::_Hash_bytes (_182, _181, 3339675911);
/usr/include/c++/11/bits/char_traits.h:389:25: missed: statement clobbers memory: _985 = __builtin_memcmp (pretmp_1054, _986, pretmp_1056);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: not vectorized: statement can throw an exception: _238 = operator new (_1059);
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:98:4: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0x19353608 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)&D.78699]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)&D.78699]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)&D.78699]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0x19353680
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0x19353680 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis for part in loop 2:
  Vector cost: 24
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0x19353608 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)&D.78699]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)&D.78699]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)&D.78699]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0x19353680
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0x19353680 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_impl_data *)&D.78699]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vect_is_simple_use: operand 0B, type of def: constant
/usr/include/c++/11/bits/stl_vector.h:98:4: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:98:4: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_impl_data *)&D.78699]._M_start
/usr/include/c++/11/bits/stl_vector.h:98:4: note: created &MEM[(struct _Vector_impl_data *)&D.78699]._M_start
/usr/include/c++/11/bits/stl_vector.h:98:4: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)&D.78699] = { 0, 0 };
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:98:4: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb57
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb58
/usr/include/c++/11/bits/stl_iterator.h:1028:9: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_iterator.h:1028:9: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_iterator.h:1028:9: missed: splitting region at control altering definition _254 = std::__cxx11::basic_string<char>::_M_create (__cur_84, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _254 = std::__cxx11::basic_string<char>::_M_create (__cur_84, &__dnew, 0);
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:361:25: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node 0x19353608 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: op template: MEM[(struct _Vector_base *)&D.78699]._M_impl.D.64419._M_start = iftmp.12_231;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 0 MEM[(struct _Vector_base *)&D.78699]._M_impl.D.64419._M_start = iftmp.12_231;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 1 MEM[(struct _Vector_base *)&D.78699]._M_impl.D.64419._M_finish = iftmp.12_231;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	children 0x19353680
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node (external) 0x19353680 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	{ iftmp.12_231, iftmp.12_231 }
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Cost model analysis for part in loop 2:
  Vector cost: 16
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node 0x19353608 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: op template: MEM[(struct _Vector_base *)&D.78699]._M_impl.D.64419._M_start = iftmp.12_231;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 0 MEM[(struct _Vector_base *)&D.78699]._M_impl.D.64419._M_start = iftmp.12_231;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 1 MEM[(struct _Vector_base *)&D.78699]._M_impl.D.64419._M_finish = iftmp.12_231;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	children 0x19353680
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node (external) 0x19353680 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	{ iftmp.12_231, iftmp.12_231 }
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_base *)&D.78699]._M_impl.D.64419._M_start = iftmp.12_231;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: vect_is_simple_use: operand iftmp.12_231 = PHI <0B(49), _238(57)>, type of def: external
/usr/include/c++/11/bits/stl_vector.h:361:25: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:361:25: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_base *)&D.78699]._M_impl.D.64419._M_start
/usr/include/c++/11/bits/stl_vector.h:361:25: note: created &MEM[(struct _Vector_base *)&D.78699]._M_impl.D.64419._M_start
/usr/include/c++/11/bits/stl_vector.h:361:25: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)&D.78699] = _204;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:361:25: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:361:25: missed: splitting region at dominance boundary bb64
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:361:25: missed: splitting region at dominance boundary bb68
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb69
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_125, _243, _244);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at dominance boundary bb70
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: splitting region at dominance boundary bb286
/usr/include/c++/11/bits/stl_vector.h:557:26: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:557:26: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_vector.h:557:26: missed: splitting region at dominance boundary bb60
/usr/include/c++/11/bits/stl_vector.h:557:26: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:557:26: missed: splitting region at dominance boundary bb72
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb51
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: _250 = __builtin_eh_pointer (32);
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_begin_catch (_250);
/usr/include/c++/11/bits/stl_construct.h:196:11: missed: statement clobbers memory: std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char>*> (iftmp.12_1001, __cur_1002);
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_end_catch ();
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: not vectorized: statement can throw an exception: resx 31
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (iftmp.12_1001, _991);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: not vectorized: statement can throw an exception: resx 29
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: splitting region at dominance boundary bb78
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: not vectorized: statement can throw an exception: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: not vectorized: statement can throw an exception: std::__throw_bad_array_new_length ();
/usr/include/c++/11/ext/new_allocator.h:116:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: splitting region at dominance boundary bb79
/usr/include/c++/11/ext/new_allocator.h:116:41: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/ext/new_allocator.h:116:41: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: splitting region at dominance boundary bb82
/usr/include/c++/11/bits/basic_string.tcc:211:42: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.tcc:211:42: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.tcc:211:42: missed: splitting region at control altering definition _278 = std::__cxx11::basic_string<char>::_M_create (&lower, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _278 = std::__cxx11::basic_string<char>::_M_create (&lower, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb85
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb89
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb90
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_127, _972, _974);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at control altering definition _302 = std::__cxx11::basic_string<char>::_M_create (&D.93844, &__dnew, 0);
/workspace/benchmarks/dataset_659/ldap.hpp:30:95: missed: statement clobbers memory: _273 = tolower (_272);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _302 = std::__cxx11::basic_string<char>::_M_create (&D.93844, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb99
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb103
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb104
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_954, _287, _288);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at dominance boundary bb93
/workspace/benchmarks/dataset_659/ldap.hpp:30:95: missed: statement clobbers memory: _297 = tolower (_296);
/usr/include/c++/11/bits/char_traits.h:389:25: missed: statement clobbers memory: _313 = __builtin_memcmp (prephitmp_111, _179, prephitmp_95);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_111, _865);
/workspace/benchmarks/dataset_659/ldap.hpp:21:31: note: ***** Analysis failed with vector mode V2DI
/workspace/benchmarks/dataset_659/ldap.hpp:21:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/workspace/benchmarks/dataset_659/ldap.hpp:21:31: missed: splitting region at dominance boundary bb283
/workspace/benchmarks/dataset_659/ldap.hpp:24:17: note: ***** Analysis failed with vector mode VOID
/workspace/benchmarks/dataset_659/ldap.hpp:24:17: missed: splitting region at dominance boundary bb262
/workspace/benchmarks/dataset_659/ldap.hpp:24:17: note: ***** Analysis failed with vector mode VOID
/workspace/benchmarks/dataset_659/ldap.hpp:24:17: missed: splitting region at control altering definition _338 = operator new (_1058);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_966, _650);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: not vectorized: statement can throw an exception: _338 = operator new (_1058);
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:98:4: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0x19353608 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)&D.78699]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)&D.78699]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)&D.78699]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0x19353680
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0x19353680 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Cost model analysis for part in loop 2:
  Vector cost: 24
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:98:4: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node 0x19353608 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: op template: MEM[(struct _Vector_impl_data *)&D.78699]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 0 MEM[(struct _Vector_impl_data *)&D.78699]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	stmt 1 MEM[(struct _Vector_impl_data *)&D.78699]._M_finish = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	children 0x19353680
/usr/include/c++/11/bits/stl_vector.h:98:4: note: node (constant) 0x19353680 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:98:4: note: 	{ 0B, 0B }
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_impl_data *)&D.78699]._M_start = 0B;
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vect_is_simple_use: operand 0B, type of def: constant
/usr/include/c++/11/bits/stl_vector.h:98:4: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:98:4: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_impl_data *)&D.78699]._M_start
/usr/include/c++/11/bits/stl_vector.h:98:4: note: created &MEM[(struct _Vector_impl_data *)&D.78699]._M_start
/usr/include/c++/11/bits/stl_vector.h:98:4: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)&D.78699] = { 0, 0 };
/usr/include/c++/11/bits/stl_vector.h:98:4: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:98:4: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb121
/usr/include/c++/11/bits/stl_vector.h:98:4: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:98:4: missed: splitting region at dominance boundary bb122
/usr/include/c++/11/bits/stl_iterator.h:1028:9: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_iterator.h:1028:9: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_iterator.h:1028:9: missed: splitting region at control altering definition _354 = std::__cxx11::basic_string<char>::_M_create (__cur_679, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _354 = std::__cxx11::basic_string<char>::_M_create (__cur_679, &__dnew, 0);
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** Analysis succeeded with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:361:25: note: SLPing BB part
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Costing subgraph: 
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node 0x19353608 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: op template: MEM[(struct _Vector_base *)&D.78699]._M_impl.D.64419._M_start = iftmp.12_331;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 0 MEM[(struct _Vector_base *)&D.78699]._M_impl.D.64419._M_start = iftmp.12_331;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 1 MEM[(struct _Vector_base *)&D.78699]._M_impl.D.64419._M_finish = iftmp.12_331;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	children 0x19353680
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node (external) 0x19353680 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	{ iftmp.12_331, iftmp.12_331 }
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Cost model analysis: 
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Cost model analysis for part in loop 2:
  Vector cost: 16
  Scalar cost: 24
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Basic block will be vectorized using SLP
/usr/include/c++/11/bits/stl_vector.h:361:25: note: Vectorizing SLP tree:
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node 0x19353608 (max_nunits=2, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: op template: MEM[(struct _Vector_base *)&D.78699]._M_impl.D.64419._M_start = iftmp.12_331;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 0 MEM[(struct _Vector_base *)&D.78699]._M_impl.D.64419._M_start = iftmp.12_331;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	stmt 1 MEM[(struct _Vector_base *)&D.78699]._M_impl.D.64419._M_finish = iftmp.12_331;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	children 0x19353680
/usr/include/c++/11/bits/stl_vector.h:361:25: note: node (external) 0x19353680 (max_nunits=1, refcnt=1)
/usr/include/c++/11/bits/stl_vector.h:361:25: note: 	{ iftmp.12_331, iftmp.12_331 }
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ------>vectorizing SLP node starting from: MEM[(struct _Vector_base *)&D.78699]._M_impl.D.64419._M_start = iftmp.12_331;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: vect_is_simple_use: operand iftmp.12_331 = PHI <0B(112), _338(121)>, type of def: external
/usr/include/c++/11/bits/stl_vector.h:361:25: note: transform store. ncopies = 1
/usr/include/c++/11/bits/stl_vector.h:361:25: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: MEM[(struct _Vector_base *)&D.78699]._M_impl.D.64419._M_start
/usr/include/c++/11/bits/stl_vector.h:361:25: note: created &MEM[(struct _Vector_base *)&D.78699]._M_impl.D.64419._M_start
/usr/include/c++/11/bits/stl_vector.h:361:25: note: add new stmt: MEM <vector(2) long unsigned int> [(struct basic_string * *)&D.78699] = _956;
/usr/include/c++/11/bits/stl_vector.h:361:25: note: vectorizing stmts using SLP.
/usr/include/c++/11/bits/stl_vector.h:361:25: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_vector.h:361:25: missed: splitting region at dominance boundary bb128
/usr/include/c++/11/bits/stl_vector.h:361:25: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:361:25: missed: splitting region at dominance boundary bb132
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb133
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_984, _343, _344);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at dominance boundary bb134
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: splitting region at dominance boundary bb143
/usr/include/c++/11/bits/stl_vector.h:557:26: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:557:26: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_vector.h:557:26: missed: splitting region at dominance boundary bb146
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_171, _173);
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at control altering definition _410 = operator new (48);
/usr/include/c++/11/bits/functional_hash.h:198:25: missed: statement clobbers memory: _363 = std::_Hash_bytes (_362, _361, 3339675911);
/usr/include/c++/11/bits/char_traits.h:389:25: missed: statement clobbers memory: _396 = __builtin_memcmp (_388, _390, _389);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: not vectorized: statement can throw an exception: _410 = operator new (48);
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: splitting region at dominance boundary bb163
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: splitting region at control altering definition _413 = std::__cxx11::basic_string<char>::_M_create (_400, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _413 = std::__cxx11::basic_string<char>::_M_create (_400, &__dnew, 0);
/usr/include/c++/11/bits/hashtable_policy.h:219:34: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable_policy.h:219:34: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/hashtable_policy.h:219:34: note: ***** Re-trying analysis with vector mode V8QI
/usr/include/c++/11/bits/hashtable_policy.h:219:34: note: ***** Analysis failed with vector mode V8QI
/usr/include/c++/11/bits/hashtable_policy.h:219:34: missed: splitting region at dominance boundary bb168
/usr/include/c++/11/bits/hashtable_policy.h:219:34: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:219:34: missed: splitting region at dominance boundary bb172
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb173
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_983, _402, _403);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at control altering definition __do_rehash = std::__detail::_Prime_rehash_policy::_M_need_rehash (&MEM[(struct _Hashtable *)&seen_values]._M_rehash_policy, _423, _422, 1);
/usr/include/c++/11/bits/hashtable.h:2016:35: missed: not vectorized: statement can throw an exception: __do_rehash = std::__detail::_Prime_rehash_policy::_M_need_rehash (&MEM[(struct _Hashtable *)&seen_values]._M_rehash_policy, _423, _422, 1);
/usr/include/c++/11/bits/hashtable.h:2016:35: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:2016:35: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:2016:35: missed: splitting region at dominance boundary bb178
/usr/include/c++/11/bits/hashtable.h:2016:35: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable.h:2016:35: missed: splitting region at control altering definition _470 = operator new (_469);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: not vectorized: statement can throw an exception: _470 = operator new (_469);
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Analysis failed with vector mode V16QI
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V16QI
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: splitting region at dominance boundary bb188
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: splitting region at dominance boundary bb182
/usr/include/c++/11/bits/hashtable_policy.h:1929:23: missed: statement clobbers memory: __builtin_memset (_470, 0, _469);
/usr/include/c++/11/bits/hashtable_policy.h:1929:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:1929:23: missed: splitting region at dominance boundary bb199
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: not vectorized: statement can throw an exception: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: not vectorized: statement can throw an exception: std::__throw_bad_array_new_length ();
/usr/include/c++/11/ext/new_allocator.h:116:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: splitting region at dominance boundary bb210
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: statement clobbers memory: _431 = __builtin_eh_pointer (44);
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: statement clobbers memory: __cxa_begin_catch (_431);
/usr/include/c++/11/bits/hashtable.h:2368:4: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: statement clobbers memory: __cxa_end_catch ();
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: not vectorized: statement can throw an exception: resx 43
/usr/include/c++/11/bits/hashtable.h:2363:7: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:2363:7: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: splitting region at dominance boundary bb180
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_485, _488);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_995, 48);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: not vectorized: statement can throw an exception: resx 38
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: splitting region at dominance boundary bb189
/usr/include/c++/11/bits/hashtable.h:436:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:436:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:436:23: missed: splitting region at dominance boundary bb203
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_456, _461);
/usr/include/c++/11/bits/hashtable.h:1890:21: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:1890:21: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:1890:21: missed: splitting region at loop 3 exit at bb227
/usr/include/c++/11/bits/stl_vector.h:1198:21: missed: not vectorized: statement can throw an exception: std::vector<std::__cxx11::basic_string<char> >::_M_realloc_insert<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&> (entries_14(D), D.94065, SR.445_550);
/usr/include/c++/11/bits/stl_vector.h:1198:21: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:1198:21: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_vector.h:1198:21: missed: splitting region at dominance boundary bb214
/usr/include/c++/11/bits/stl_vector.h:1198:21: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:1198:21: missed: splitting region at control altering definition _499 = std::__cxx11::basic_string<char>::_M_create (_489, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _499 = std::__cxx11::basic_string<char>::_M_create (_489, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb220
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb224
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb225
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_982, _492, _493);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at dominance boundary bb228
/usr/include/c++/11/bits/stl_vector.h:1194:6: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_vector.h:1194:6: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_vector.h:1194:6: missed: splitting region at loop 3 exit at bb268
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:21:38: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:21:38: missed: splitting region at dominance boundary bb147
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_513, _516);
/usr/include/c++/11/bits/stl_construct.h:162:19: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_construct.h:162:19: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: splitting region at loop 2 exit at bb237
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (prephitmp_1012, _511);
/workspace/benchmarks/dataset_659/ldap.hpp:52:9: note: ***** Analysis failed with vector mode V2DI
/workspace/benchmarks/dataset_659/ldap.hpp:52:9: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/workspace/benchmarks/dataset_659/ldap.hpp:52:9: missed: splitting region at dominance boundary bb243
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_543, _546);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_771, 48);
/usr/include/c++/11/bits/hashtable.h:2321:24: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:2321:24: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:2321:24: missed: splitting region at dominance boundary bb276
/usr/include/c++/11/bits/hashtable.h:2321:23: missed: statement clobbers memory: __builtin_memset (prephitmp_1053, 0, prephitmp_1050);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_531, _536);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:29:12: note: ***** Analysis failed with vector mode V2DI
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:29:12: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:29:12: missed: splitting region at dominance boundary bb277
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:29:12: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:29:12: missed: splitting region at dominance boundary bb278
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:29:12: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:29:12: missed: splitting region at dominance boundary bb279
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:29:12: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:29:12: missed: splitting region at dominance boundary bb215
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:29:12: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:29:12: missed: splitting region at dominance boundary bb280
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb164
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb175
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb247
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed: statement clobbers memory: _405 = __builtin_eh_pointer (39);
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed: statement clobbers memory: __cxa_begin_catch (_405);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_997, 48);
/usr/include/c++/11/bits/hashtable_policy.h:1886:6: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed: statement clobbers memory: __cxa_end_catch ();
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: not vectorized: statement can throw an exception: resx 40
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable_policy.h:1883:2: missed: splitting region at dominance boundary bb282
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:27:9: missed: statement clobbers memory: std::vector<std::__cxx11::basic_string<char> >::~vector (&D.78699);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: not vectorized: statement can throw an exception: resx 15
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:27:9: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:27:9: missed: splitting region at dominance boundary bb124
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:27:9: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:27:9: missed: splitting region at dominance boundary bb136
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb114
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: _350 = __builtin_eh_pointer (36);
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_begin_catch (_350);
/usr/include/c++/11/bits/stl_construct.h:196:11: missed: statement clobbers memory: std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char>*> (iftmp.12_1000, __cur_993);
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_end_catch ();
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: not vectorized: statement can throw an exception: resx 35
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (iftmp.12_1000, _992);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: not vectorized: statement can throw an exception: resx 33
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: splitting region at dominance boundary bb284
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: not vectorized: statement can throw an exception: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: not vectorized: statement can throw an exception: std::__throw_bad_array_new_length ();
/usr/include/c++/11/ext/new_allocator.h:116:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: splitting region at dominance boundary bb95
/usr/include/c++/11/ext/new_allocator.h:116:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: splitting region at dominance boundary bb149
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb285
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_174, _176);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: not vectorized: statement can throw an exception: resx 27
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb80
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb250
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb14
/usr/include/c++/11/bits/hashtable.h:2321:23: missed: statement clobbers memory: __builtin_memset (_559, 0, _558);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_548, _553);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: not vectorized: statement can throw an exception: resx 13
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_560, _563);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_555, 48);
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: splitting region at dominance boundary bb25
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: splitting region at dominance boundary bb29
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: _134 = __builtin_eh_pointer (26);
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_begin_catch (_134);
/usr/include/c++/11/bits/stl_construct.h:196:11: missed: statement clobbers memory: std::_Destroy_aux<false>::__destroy<std::__cxx11::basic_string<char>*> (_124, _124);
/usr/include/c++/11/bits/stl_uninitialized.h:98:8: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/stl_uninitialized.h:95:4: missed: statement clobbers memory: __cxa_end_catch ();
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: not vectorized: statement can throw an exception: resx 25
/usr/include/c++/11/bits/stl_vector.h:1583:61: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_vector.h:1583:61: missed: splitting region at dominance boundary bb3
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (SR.625_509, _110);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: not vectorized: statement can throw an exception: resx 23
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_116, _209);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:8:26: missed: not vectorized: statement can throw an exception: resx 3
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: splitting region at dominance boundary bb260
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/basic_string.tcc:212:28: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:30:1: missed: statement clobbers memory: std::vector<std::__cxx11::basic_string<char> >::~vector (entries_14(D));
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:30:1: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_construct.h:162:19: missed: missed loop optimization: niters analysis ends up with assumptions.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/dataset_659/step_3.cpp:21:38: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: missed loop optimization: niters analysis ends up with assumptions.
/usr/include/c++/11/bits/stl_uninitialized.h:91:23: missed: missed loop optimization: niters analysis ends up with assumptions.

From 1159c81b4840b2cc7cde24f861cc465f3446e327 Mon Sep 17 00:00:00 2001
From: Michael Rehme <michael.rehme@ipvs.uni-stuttgart.de>
Date: Tue, 19 Dec 2017 17:24:00 +0100
Subject: [PATCH] OperationMatrix..Bspline parallelization with OpenMP works
 (this time for real)

Former-commit-id: 5bab8c53bac2cc0552e576e2ecdcde9bcc5d8d48
---
 .../OperationMatrixLTwoDotNakBsplineBoundaryCombigrid.cpp | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

diff --git a/pde/src/sgpp/pde/operation/hash/OperationMatrixLTwoDotNakBsplineBoundaryCombigrid.cpp b/pde/src/sgpp/pde/operation/hash/OperationMatrixLTwoDotNakBsplineBoundaryCombigrid.cpp
index 0db35158ef..5eb51969cd 100644
--- a/pde/src/sgpp/pde/operation/hash/OperationMatrixLTwoDotNakBsplineBoundaryCombigrid.cpp
+++ b/pde/src/sgpp/pde/operation/hash/OperationMatrixLTwoDotNakBsplineBoundaryCombigrid.cpp
@@ -50,9 +50,7 @@ void OperationMatrixLTwoDotNakBsplineBoundaryCombigrid::mult(sgpp::base::DataVec
 
   result.setAll(0.0);
 
-// use either schedule static or set #pragma omp atomic before the two result[j/i] =
-// tempij*alpha[i/j] lines
-#pragma omp parallel for schedule(static)
+#pragma omp parallel for schedule(dynamic)
   for (size_t i = 0; i < gridSize; i++) {
     for (size_t j = i; j < gridSize; j++) {
       double temp_ij = 1;
@@ -152,10 +150,10 @@ void OperationMatrixLTwoDotNakBsplineBoundaryCombigrid::mult(sgpp::base::DataVec
         temp_ij *= scaling * temp_res;
       }
 
-      //#pragma omp atomic
+#pragma omp atomic
       result[i] += temp_ij * alpha[j];
       if (i != j) {
-        //#pragma omp atomic
+#pragma omp atomic
         result[j] += temp_ij * alpha[i];
       }
     }

/usr/include/c++/11/bits/basic_string.h:2321:23: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605.
/usr/include/c++/11/bits/basic_string.h:2321:23: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605 into const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1356.
/usr/include/c++/11/bits/basic_string.h:340:39: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450.
/usr/include/c++/11/bits/basic_string.h:340:39: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_limit(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1736.
/usr/include/c++/11/bits/basic_string.h:339:44: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450.
/usr/include/c++/11/bits/basic_string.h:339:44: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_limit(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1736.
/usr/include/c++/11/bits/basic_string.h:321:28: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450.
/usr/include/c++/11/bits/basic_string.h:321:28: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1687.
/usr/include/c++/11/bits/basic_string.h:320:24: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450.
/usr/include/c++/11/bits/basic_string.h:320:24: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1687.
/usr/include/c++/11/bits/basic_string.h:225:21: note: Considering inline candidate static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/854.
/usr/include/c++/11/bits/basic_string.h:225:21: optimized:  Inlining static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/854 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1626.
/usr/include/c++/11/bits/basic_string.h:225:29: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605.
/usr/include/c++/11/bits/basic_string.h:225:29: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1626.
/usr/include/c++/11/bits/basic_string.h:224:11: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1625.
/usr/include/c++/11/bits/basic_string.h:224:11: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1625 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1626.
/usr/include/c++/11/bits/char_traits.h:171:17: note: Considering inline candidate static constexpr bool __gnu_cxx::char_traits<_CharT>::eq(const char_type&, const char_type&) [with _CharT = char]/860.
/usr/include/c++/11/bits/char_traits.h:171:17: optimized:  Inlining static constexpr bool __gnu_cxx::char_traits<_CharT>::eq(const char_type&, const char_type&) [with _CharT = char]/860 into static constexpr std::size_t __gnu_cxx::char_traits<_CharT>::length(const char_type*) [with _CharT = char]/861.
/usr/include/c++/11/bits/char_traits.h:396:25: optimized:   Inlining constexpr bool std::__constant_string_p(const _CharT*) [with _CharT = char]/859 into static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862 (always_inline).
/usr/include/c++/11/bits/char_traits.h:397:52: note: Considering inline candidate static constexpr std::size_t __gnu_cxx::char_traits<_CharT>::length(const char_type*) [with _CharT = char]/861.
/usr/include/c++/11/bits/char_traits.h:397:52: optimized:  Inlining static constexpr std::size_t __gnu_cxx::char_traits<_CharT>::length(const char_type*) [with _CharT = char]/861 into static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862.
/usr/include/c++/11/bits/basic_string.h:1459:19: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450.
/usr/include/c++/11/bits/basic_string.h:1459:19: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1686.
/usr/include/c++/11/bits/basic_string.h:1459:19: note: Considering inline candidate static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862.
/usr/include/c++/11/bits/basic_string.h:1459:19: optimized:  Inlining static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1686.
/usr/include/c++/11/bits/basic_string.h:690:28: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1686.
/usr/include/c++/11/bits/basic_string.h:690:28: missed:   will not early inline: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1595->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1686, growth 7 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/basic_string.h:2494:20: note: Considering inline candidate static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862.
/usr/include/c++/11/bits/basic_string.h:2494:20: optimized:  Inlining static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1596.
/usr/include/c++/11/bits/basic_string.h:359:21: note: Considering inline candidate static std::char_traits<char>::char_type* std::char_traits<char>::copy(std::char_traits<char>::char_type*, const char_type*, std::size_t)/866.
/usr/include/c++/11/bits/basic_string.h:359:21: optimized:  Inlining static std::char_traits<char>::char_type* std::char_traits<char>::copy(std::char_traits<char>::char_type*, const char_type*, std::size_t)/866 into static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1779.
/usr/include/c++/11/bits/basic_string.h:357:23: note: Considering inline candidate static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/854.
/usr/include/c++/11/bits/basic_string.h:357:23: optimized:  Inlining static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/854 into static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1779.
/usr/include/c++/11/bits/basic_string.h:406:16: note: Considering inline candidate static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1779.
/usr/include/c++/11/bits/basic_string.h:406:16: optimized:  Inlining static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1779 into static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1735.
/usr/include/c++/11/bits/basic_ios.h:158:20: note: Considering inline candidate constexpr std::_Ios_Iostate std::operator|(std::_Ios_Iostate, std::_Ios_Iostate)/1225.
/usr/include/c++/11/bits/basic_ios.h:158:20: optimized:  Inlining constexpr std::_Ios_Iostate std::operator|(std::_Ios_Iostate, std::_Ios_Iostate)/1225 into void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/1691.
/usr/include/c++/11/bits/basic_ios.h:158:20: note: Considering inline candidate std::ios_base::iostate std::basic_ios<_CharT, _Traits>::rdstate() const [with _CharT = char; _Traits = std::char_traits<char>]/1737.
/usr/include/c++/11/bits/basic_ios.h:158:20: optimized:  Inlining std::ios_base::iostate std::basic_ios<_CharT, _Traits>::rdstate() const [with _CharT = char; _Traits = std::char_traits<char>]/1737 into void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/1691.
/usr/include/c++/11/ostream:617:44: note: Considering inline candidate static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862.
/usr/include/c++/11/ostream:617:44: optimized:  Inlining static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862 into std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600.
/usr/include/c++/11/ostream:614:16: note: Considering inline candidate void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/1691.
/usr/include/c++/11/ostream:614:16: optimized:  Inlining void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/1691 into std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600.
/usr/include/c++/11/chrono:666:9: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::duration(const _Rep2&) [with _Rep2 = long int; <template-parameter-2-2> = void; _Rep = long int; _Period = std::ratio<1, 1000000000>]/688.
/usr/include/c++/11/chrono:666:9: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::duration(const _Rep2&) [with _Rep2 = long int; <template-parameter-2-2> = void; _Rep = long int; _Period = std::ratio<1, 1000000000>]/688 into constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1308.
/usr/include/c++/11/chrono:666:53: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/680.
/usr/include/c++/11/chrono:666:53: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/680 into constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1308.
/usr/include/c++/11/chrono:666:31: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/680.
/usr/include/c++/11/chrono:666:31: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/680 into constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1308.
/usr/include/c++/11/chrono:1044:41: note: Considering inline candidate constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1308.
/usr/include/c++/11/chrono:1044:41: optimized:  Inlining constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1308 into constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1309.
/usr/include/c++/11/chrono:1044:38: note: Considering inline candidate constexpr std::chrono::time_point<_Clock, _Dur>::duration std::chrono::time_point<_Clock, _Dur>::time_since_epoch() const [with _Clock = std::chrono::_V2::system_clock; _Dur = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/699.
/usr/include/c++/11/chrono:1044:38: optimized:  Inlining constexpr std::chrono::time_point<_Clock, _Dur>::duration std::chrono::time_point<_Clock, _Dur>::time_since_epoch() const [with _Clock = std::chrono::_V2::system_clock; _Dur = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/699 into constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1309.
/usr/include/c++/11/chrono:1044:65: note: Considering inline candidate constexpr std::chrono::time_point<_Clock, _Dur>::duration std::chrono::time_point<_Clock, _Dur>::time_since_epoch() const [with _Clock = std::chrono::_V2::system_clock; _Dur = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/699.
/usr/include/c++/11/chrono:1044:65: optimized:  Inlining constexpr std::chrono::time_point<_Clock, _Dur>::duration std::chrono::time_point<_Clock, _Dur>::time_since_epoch() const [with _Clock = std::chrono::_V2::system_clock; _Dur = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/699 into constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1309.
/usr/include/c++/11/ext/string_conversions.h:94:5: note: Considering inline candidate __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1361.
/usr/include/c++/11/ext/string_conversions.h:94:5: optimized:  Inlining __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1361 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365.
/usr/include/c++/11/ext/string_conversions.h:94:5: note: Considering inline candidate __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1361.
/usr/include/c++/11/ext/string_conversions.h:94:5: optimized:  Inlining __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1361 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365.
/usr/include/c++/11/ext/string_conversions.h:85:25: note: Considering inline candidate static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1364.
/usr/include/c++/11/ext/string_conversions.h:85:25: optimized:  Inlining static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1364 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365.
/usr/include/c++/11/ext/string_conversions.h:66:15: note: Considering inline candidate __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1358.
/usr/include/c++/11/ext/string_conversions.h:66:15: optimized:  Inlining __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1358 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365.
/usr/include/c++/11/bits/basic_string.h:6620:40: note: Considering inline candidate _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365.
/usr/include/c++/11/bits/basic_string.h:6620:40: missed:   will not early inline: int std::__cxx11::stoi(const string&, std::size_t*, int)/1086->_Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365, call is cold and code would grow at least by 26
/usr/include/c++/11/bits/basic_string.h:6620:40: note: Considering inline candidate const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1356.
/usr/include/c++/11/bits/basic_string.h:6620:40: optimized:  Inlining const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1356 into int std::__cxx11::stoi(const string&, std::size_t*, int)/1086.
/usr/include/c++/11/chrono:226:13: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::duration(const _Rep2&) [with _Rep2 = long int; <template-parameter-2-2> = void; _Rep = long int; _Period = std::ratio<1, 1000>]/1603.
/usr/include/c++/11/chrono:226:13: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::duration(const _Rep2&) [with _Rep2 = long int; <template-parameter-2-2> = void; _Rep = long int; _Period = std::ratio<1, 1000>]/1603 into static constexpr _ToDur std::chrono::__duration_cast_impl<_ToDur, _CF, _CR, true, false>::__cast(const std::chrono::duration<_Rep, _Period>&) [with _Rep = long int; _Period = std::ratio<1, 1000000000>; _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _CF = std::ratio<1, 1000000>; _CR = long int]/1306.
/usr/include/c++/11/chrono:227:34: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/680.
/usr/include/c++/11/chrono:227:34: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/680 into static constexpr _ToDur std::chrono::__duration_cast_impl<_ToDur, _CF, _CR, true, false>::__cast(const std::chrono::duration<_Rep, _Period>&) [with _Rep = long int; _Period = std::ratio<1, 1000000000>; _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _CF = std::ratio<1, 1000000>; _CR = long int]/1306.
/usr/include/c++/11/chrono:276:21: note: Considering inline candidate static constexpr _ToDur std::chrono::__duration_cast_impl<_ToDur, _CF, _CR, true, false>::__cast(const std::chrono::duration<_Rep, _Period>&) [with _Rep = long int; _Period = std::ratio<1, 1000000000>; _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _CF = std::ratio<1, 1000000>; _CR = long int]/1306.
/usr/include/c++/11/chrono:276:21: optimized:  Inlining static constexpr _ToDur std::chrono::__duration_cast_impl<_ToDur, _CF, _CR, true, false>::__cast(const std::chrono::duration<_Rep, _Period>&) [with _Rep = long int; _Period = std::ratio<1, 1000000000>; _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _CF = std::ratio<1, 1000000>; _CR = long int]/1306 into constexpr std::chrono::__enable_if_is_duration<_ToDur> std::chrono::duration_cast(const std::chrono::duration<_Rep, _Period>&) [with _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _Rep = long int; _Period = std::ratio<1, 1000000000>]/1307.
/usr/include/c++/11/bits/allocator.h:156:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = char]/1607.
/usr/include/c++/11/bits/allocator.h:156:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = char]/1607 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = char]/1610.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = char]/1610 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
/usr/include/c++/11/bits/basic_string.h:158:14: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
/usr/include/c++/11/bits/basic_string.h:158:14: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433 into std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:141:29: note: Considering inline candidate constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const char*]/1683.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:141:29: optimized:  Inlining constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const char*]/1683 into constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char*]/1684.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = char]/1692.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = char]/1692 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = char]/1693.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = char]/1693.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = char]/1693 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = char]/1694.
/usr/include/c++/11/bits/basic_string.h:201:49: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = char]/1694.
/usr/include/c++/11/bits/basic_string.h:201:49: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = char]/1694 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1612.
/usr/include/c++/11/bits/basic_string.tcc:232:15: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1626.
/usr/include/c++/11/bits/basic_string.tcc:232:15: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1626 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.tcc:225:25: note: Considering inline candidate static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1735.
/usr/include/c++/11/bits/basic_string.tcc:225:25: optimized:  Inlining static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1735 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.tcc:225:25: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605.
/usr/include/c++/11/bits/basic_string.tcc:225:25: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.tcc:220:17: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1624.
/usr/include/c++/11/bits/basic_string.tcc:220:17: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1624 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1623.
/usr/include/c++/11/bits/basic_string.tcc:219:13: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1623 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.tcc:215:57: note: Considering inline candidate constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char*]/1684.
/usr/include/c++/11/bits/basic_string.tcc:215:57: optimized:  Inlining constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char*]/1684 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.tcc:211:34: note: Considering inline candidate bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = const char]/1734.
/usr/include/c++/11/bits/basic_string.tcc:211:34: optimized:  Inlining bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = const char]/1734 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.h:255:23: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.h:255:23: missed:   will not early inline: void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1704->void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685, growth 24 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/basic_string.h:274:20: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1704.
/usr/include/c++/11/bits/basic_string.h:274:20: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1704 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1637.
/usr/include/c++/11/bits/allocator.h:160:34: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = char]/1739.
/usr/include/c++/11/bits/allocator.h:160:34: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = char]/1739 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1696.
/usr/include/c++/11/bits/basic_string.h:165:35: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1696.
/usr/include/c++/11/bits/basic_string.h:165:35: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1696 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1614.
/usr/include/c++/11/bits/basic_string.h:540:7: note: Considering inline candidate std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436.
/usr/include/c++/11/bits/basic_string.h:540:7: optimized:  Inlining std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592.
/usr/include/c++/11/bits/basic_string.h:539:14: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.h:539:14: missed:   will not early inline: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592->void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685, growth 24 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/basic_string.h:536:55: note: Considering inline candidate static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862.
/usr/include/c++/11/bits/basic_string.h:536:55: optimized:  Inlining static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592.
/usr/include/c++/11/bits/basic_string.h:534:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1614.
/usr/include/c++/11/bits/basic_string.h:534:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1614 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592.
/usr/include/c++/11/bits/basic_string.h:534:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1612.
/usr/include/c++/11/bits/basic_string.h:534:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1612 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592.
/usr/include/c++/11/bits/basic_string.h:168:46: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1696.
/usr/include/c++/11/bits/basic_string.h:168:46: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1696 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1620.
/usr/include/c++/11/bits/basic_string.h:168:28: note: Considering inline candidate constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<char>&]/1618.
/usr/include/c++/11/bits/basic_string.h:168:28: optimized:  Inlining constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<char>&]/1618 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1620.
/usr/include/c++/11/bits/basic_string.h:491:7: note: Considering inline candidate std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436.
/usr/include/c++/11/bits/basic_string.h:491:7: optimized:  Inlining std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:490:14: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1637.
/usr/include/c++/11/bits/basic_string.h:490:14: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1637 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:490:48: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_limit(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1736.
/usr/include/c++/11/bits/basic_string.h:490:48: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_limit(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1736 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:489:20: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1687.
/usr/include/c++/11/bits/basic_string.h:489:20: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1687 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:488:39: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605.
/usr/include/c++/11/bits/basic_string.h:488:39: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:486:9: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
/usr/include/c++/11/bits/basic_string.h:486:9: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:486:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1620.
/usr/include/c++/11/bits/basic_string.h:486:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1620 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:486:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1612.
/usr/include/c++/11/bits/basic_string.h:486:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1612 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:486:9: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430.
/usr/include/c++/11/bits/basic_string.h:486:9: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:2856:52: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:2856:52: missed:   will not early inline: std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689, growth 13 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/basic_string.h:2856:52: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1687.
/usr/include/c++/11/bits/basic_string.h:2856:52: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1687 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = const char]/1742.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = const char]/1742 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = const char]/1743.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = const char]/1743.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = const char]/1743 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const char]/1744.
/usr/include/c++/11/bits/basic_string.h:211:55: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const char]/1744.
/usr/include/c++/11/bits/basic_string.h:211:55: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const char]/1744 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1699.
/usr/include/c++/11/bits/basic_string.h:230:42: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1699.
/usr/include/c++/11/bits/basic_string.h:230:42: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1699 into bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1622.
/usr/include/c++/11/bits/basic_string.h:230:23: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605.
/usr/include/c++/11/bits/basic_string.h:230:23: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605 into bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1622.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = char]/1780.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = char]/1780 into static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = char]/1741.
/usr/include/c++/11/bits/basic_string.h:245:34: note: Considering inline candidate static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = char]/1741.
/usr/include/c++/11/bits/basic_string.h:245:34: optimized:  Inlining static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = char]/1741 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1698.
/usr/include/c++/11/bits/basic_string.h:245:51: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1617.
/usr/include/c++/11/bits/basic_string.h:245:51: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1617 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1698.
/usr/include/c++/11/bits/basic_string.h:245:34: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605.
/usr/include/c++/11/bits/basic_string.h:245:34: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1698.
/usr/include/c++/11/bits/basic_string.h:240:14: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1698.
/usr/include/c++/11/bits/basic_string.h:240:14: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1698 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1616.
/usr/include/c++/11/bits/basic_string.h:239:18: note: Considering inline candidate bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1622.
/usr/include/c++/11/bits/basic_string.h:239:18: optimized:  Inlining bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1622 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1616.
/usr/include/c++/11/bits/basic_string.h:672:23: note: Considering inline candidate std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436.
/usr/include/c++/11/bits/basic_string.h:672:23: optimized:  Inlining std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
/usr/include/c++/11/bits/basic_string.h:672:19: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1616.
/usr/include/c++/11/bits/basic_string.h:672:19: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1616 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:40:1: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:40:1: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:19:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:19:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:18:76: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:18:76: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:17:72: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:17:72: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:8:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
harness.cpp:8:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433 into int main(int, char**)/1310.
harness.cpp:8:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
harness.cpp:8:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433 into int main(int, char**)/1310.
harness.cpp:40:1: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:40:1: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:38:43: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600.
harness.cpp:38:43: missed:   will not early inline: int main(int, char**)/1310->std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600, growth 4 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:37:18: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600.
harness.cpp:37:18: missed:   will not early inline: int main(int, char**)/1310->std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600, growth 4 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:36:87: note: Considering inline candidate std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>]/1601.
harness.cpp:36:87: optimized:  Inlining std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>]/1601 into int main(int, char**)/1310.
harness.cpp:36:87: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000>]/1299.
harness.cpp:36:87: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000>]/1299 into int main(int, char**)/1310.
harness.cpp:36:71: note: Considering inline candidate constexpr std::chrono::__enable_if_is_duration<_ToDur> std::chrono::duration_cast(const std::chrono::duration<_Rep, _Period>&) [with _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _Rep = long int; _Period = std::ratio<1, 1000000000>]/1307.
harness.cpp:36:71: optimized:  Inlining constexpr std::chrono::__enable_if_is_duration<_ToDur> std::chrono::duration_cast(const std::chrono::duration<_Rep, _Period>&) [with _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _Rep = long int; _Period = std::ratio<1, 1000000000>]/1307 into int main(int, char**)/1310.
harness.cpp:36:77: note: Considering inline candidate constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1309.
harness.cpp:36:77: optimized:  Inlining constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1309 into int main(int, char**)/1310.
harness.cpp:35:18: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600.
harness.cpp:35:18: optimized:  Inlining std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600 into int main(int, char**)/1310.
harness.cpp:23:29: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char) [with _Traits = std::char_traits<char>]/1599.
harness.cpp:23:29: optimized:  Inlining std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char) [with _Traits = std::char_traits<char>]/1599 into int main(int, char**)/1310.
harness.cpp:23:22: note: Considering inline candidate std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>]/1598.
harness.cpp:23:22: optimized:  Inlining std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>]/1598 into int main(int, char**)/1310.
harness.cpp:21:14: note: Considering inline candidate bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1594.
harness.cpp:21:14: optimized:  Inlining bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1594 into int main(int, char**)/1310.
harness.cpp:19:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:19:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:18:76: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:18:76: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:18:65: note: Considering inline candidate int std::__cxx11::stoi(const string&, std::size_t*, int)/1086.
harness.cpp:18:65: optimized:  Inlining int std::__cxx11::stoi(const string&, std::size_t*, int)/1086 into int main(int, char**)/1310.
harness.cpp:18:76: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597.
harness.cpp:18:76: missed:   will not early inline: int main(int, char**)/1310->std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597, growth 7 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:18:27: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1596.
harness.cpp:18:27: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1596 into int main(int, char**)/1310.
harness.cpp:17:72: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:17:72: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:17:61: note: Considering inline candidate int std::__cxx11::stoi(const string&, std::size_t*, int)/1086.
harness.cpp:17:61: optimized:  Inlining int std::__cxx11::stoi(const string&, std::size_t*, int)/1086 into int main(int, char**)/1310.
harness.cpp:17:72: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597.
harness.cpp:17:72: missed:   will not early inline: int main(int, char**)/1310->std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597, growth 7 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:17:27: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1596.
harness.cpp:17:27: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1596 into int main(int, char**)/1310.
harness.cpp:16:47: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1595.
harness.cpp:16:47: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1595 into int main(int, char**)/1310.
harness.cpp:16:22: note: Considering inline candidate bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1594.
harness.cpp:16:22: optimized:  Inlining bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1594 into int main(int, char**)/1310.
harness.cpp:15:45: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1595.
harness.cpp:15:45: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1595 into int main(int, char**)/1310.
harness.cpp:15:17: note: Considering inline candidate bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1594.
harness.cpp:15:17: optimized:  Inlining bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1594 into int main(int, char**)/1310.
harness.cpp:8:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
harness.cpp:8:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433 into int main(int, char**)/1310.
harness.cpp:14:33: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592.
harness.cpp:14:33: missed:   will not early inline: int main(int, char**)/1310->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592, growth 8 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:14:33: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430.
harness.cpp:14:33: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430 into int main(int, char**)/1310.
harness.cpp:8:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
harness.cpp:8:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433 into int main(int, char**)/1310.
harness.cpp:9:24: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592.
harness.cpp:9:24: missed:   will not early inline: int main(int, char**)/1310->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592, growth 6 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:9:24: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430.
harness.cpp:9:24: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430 into int main(int, char**)/1310.
harness.cpp:40:1: note: Considering inline candidate void __static_initialization_and_destruction_0(int, int)/1869.
harness.cpp:40:1: optimized:  Inlining void __static_initialization_and_destruction_0(int, int)/1869 into (static initializers for harness.cpp)/2018.
/usr/include/c++/11/bits/char_traits.h:399:25: missed:   not inlinable: operator<<.isra/2097 -> long unsigned int __builtin_strlen(const char*)/2024, function body not available
/usr/include/c++/11/ostream:616:18: missed:   not inlinable: operator<<.isra/2097 -> std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char; _Traits = std::char_traits<char>]/2042, function body not available
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed:   not inlinable: _M_construct.isra/2096 -> void std::__throw_logic_error(const char*)/2025, function body not available
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed:   not inlinable: _M_construct.isra/2096 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_create(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2026, function body not available
/usr/include/c++/11/bits/char_traits.h:399:25: missed:   not inlinable: assign.isra/2095 -> long unsigned int __builtin_strlen(const char*)/2024, function body not available
/usr/include/c++/11/bits/basic_string.h:1459:19: missed:   not inlinable: assign.isra/2095 -> std::__cxx11::basic_string<_CharT, _Traits, _Allocator>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2033, function body not available
/usr/include/c++/11/bits/char_traits.h:399:25: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2094 -> long unsigned int __builtin_strlen(const char*)/2024, function body not available
/usr/include/c++/11/bits/basic_ios.h:158:20: missed:   not inlinable: std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/2060 -> void std::basic_ios<_CharT, _Traits>::clear(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/2044, function body not available
/usr/include/c++/11/bits/char_traits.h:437:49: missed:   not inlinable: static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2058 -> void* __builtin_memcpy(void*, const void*, long unsigned int)/2031, function body not available
/usr/include/c++/11/iostream:74:25: missed:   not inlinable: (static initializers for harness.cpp)/2018 -> int __cxxabiv1::__cxa_atexit(void (*)(void*), void*, void*)/2046, function body not available
/usr/include/c++/11/iostream:74:25: missed:   not inlinable: (static initializers for harness.cpp)/2018 -> std::ios_base::Init::Init()/2045, function body not available
/usr/include/c++/11/bits/basic_string.h:321:28: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689 -> void std::__throw_out_of_range_fmt(const char*, ...)/2035, function body not available
/usr/include/c++/11/bits/basic_string.h:321:28: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597 -> void std::__throw_out_of_range_fmt(const char*, ...)/2035, function body not available
/usr/include/c++/11/ext/string_conversions.h:86:27: missed:   not inlinable: _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365 -> void std::__throw_out_of_range(const char*)/2039, function body not available
/usr/include/c++/11/ext/string_conversions.h:83:31: missed:   not inlinable: _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365 -> void std::__throw_invalid_argument(const char*)/2037, function body not available
/usr/include/c++/11/ext/string_conversions.h:63:27: missed:   not inlinable: _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365 -> int* __errno_location()/2038, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/ostream:167:25: missed:   not inlinable: int main(int, char**)/1310 -> std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::_M_insert(_ValueT) [with _ValueT = long int; _CharT = char; _Traits = std::char_traits<char>]/2043, function body not available
/usr/include/c++/11/ostream:616:18: missed:   not inlinable: int main(int, char**)/1310 -> std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char; _Traits = std::char_traits<char>]/2042, function body not available
harness.cpp:33:25: missed:   not inlinable: int main(int, char**)/1310 -> static std::chrono::_V2::system_clock::time_point std::chrono::_V2::system_clock::now()/2021, function body not available
harness.cpp:31:47: missed:   not inlinable: int main(int, char**)/1310 -> unsigned int CalculateTwoElectronIntegrals(bool, int)/2019, function body not available
harness.cpp:28:25: missed:   not inlinable: int main(int, char**)/1310 -> static std::chrono::_V2::system_clock::time_point std::chrono::_V2::system_clock::now()/2021, function body not available
/usr/include/c++/11/ostream:525:30: missed:   not inlinable: int main(int, char**)/1310 -> std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char; _Traits = std::char_traits<char>]/2042, function body not available
/usr/include/c++/11/ostream:196:18: missed:   not inlinable: int main(int, char**)/1310 -> std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::_M_insert(_ValueT) [with _ValueT = long unsigned int; _CharT = char; _Traits = std::char_traits<char>]/2041, function body not available
harness.cpp:22:57: missed:   not inlinable: int main(int, char**)/1310 -> unsigned int CalculateTwoElectronIntegrals(bool, int)/2019, function body not available
/usr/include/c++/11/bits/basic_string.h:6250:27: missed:   not inlinable: int main(int, char**)/1310 -> int std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::compare(const _CharT*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2040, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/bits/basic_string.h:6620:40: missed:   not inlinable: int main(int, char**)/1310 -> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365, call is unlikely and code size would grow
harness.cpp:18:76: missed:   not inlinable: int main(int, char**)/1310 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597, call is unlikely and code size would grow
/usr/include/c++/11/bits/basic_string.h:2494:20: missed:   not inlinable: int main(int, char**)/1310 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2034, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/bits/basic_string.h:6620:40: missed:   not inlinable: int main(int, char**)/1310 -> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365, call is unlikely and code size would grow
harness.cpp:17:72: missed:   not inlinable: int main(int, char**)/1310 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597, call is unlikely and code size would grow
/usr/include/c++/11/bits/basic_string.h:2494:20: missed:   not inlinable: int main(int, char**)/1310 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2034, function body not available
/usr/include/c++/11/bits/basic_string.h:6250:27: missed:   not inlinable: int main(int, char**)/1310 -> int std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::compare(const _CharT*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2040, function body not available
/usr/include/c++/11/bits/basic_string.h:6250:27: missed:   not inlinable: int main(int, char**)/1310 -> int std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::compare(const _CharT*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2040, function body not available
harness.cpp:9:24: missed:   not inlinable: int main(int, char**)/1310 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2094, call is unlikely and code size would grow
optimized:  Inlined static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2058 into _M_construct.isra/2096 which now has time 28.402128 and size 37, net change of -7.
harness.cpp:14:33: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2098 into int main(int, char**)/1310 which now has time 897.452622 and size 210, net change of +8.
optimized:  Inlined std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/2060 into operator<<.isra/2097 which now has time 26.450000 and size 20, net change of -5.
harness.cpp:37:18: optimized:  Inlined operator<<.isra/2099 into int main(int, char**)/1310 which now has time 901.082623 and size 214, net change of +4.
harness.cpp:38:43: optimized:  Inlined operator<<.isra/2097 into int main(int, char**)/1310 which now has time 901.817335 and size 218, net change of -16.
/usr/include/c++/11/bits/basic_string.h:690:28: optimized:  Inlined assign.isra/2102 into int main(int, char**)/1310 which now has time 966.544609 and size 225, net change of +7.
/usr/include/c++/11/bits/basic_string.h:690:28: optimized:  Inlined assign.isra/2095 into int main(int, char**)/1310 which now has time 998.908246 and size 233, net change of -6.
/usr/include/c++/11/bits/basic_string.h:539:14: optimized:  Inlined _M_construct.isra/2103 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2098 which now has time 1083.074800 and size 15, net change of +26.
/usr/include/c++/11/bits/basic_string.h:539:14: optimized:  Inlined _M_construct.isra/2105 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2094 which now has time 38.502608 and size 41, net change of +26.
harness.cpp:9:24: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2094 into int main(int, char**)/1310 which now has time 1101.476088 and size 284, net change of -16.
/usr/include/c++/11/bits/basic_string.h:2856:52: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597 which now has time 26.494601 and size 29, net change of +0.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.isra/2096 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689 which now has time 36.888888 and size 22, net change of -37.
Unit growth for small function inlining: 349->333 (-5%)

Inlined 124 calls, eliminated 46 functions

/usr/include/c++/11/ext/string_conversions.h:54:5: missed: splitting region at control altering definition _13 = __convf_9(D) (__str_10(D), &__endptr, __base#0_11(D));
/usr/include/c++/11/ext/string_conversions.h:80:34: missed: not vectorized: statement can throw an exception: _13 = __convf_9(D) (__str_10(D), &__endptr, __base#0_11(D));
/usr/include/c++/11/ext/string_conversions.h:80:34: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/ext/string_conversions.h:80:34: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
/usr/include/c++/11/ext/string_conversions.h:80:34: missed: splitting region at dominance boundary bb16
/usr/include/c++/11/ext/string_conversions.h:86:27: missed: not vectorized: statement can throw an exception: std::__throw_out_of_range (__name_19(D));
/usr/include/c++/11/ext/string_conversions.h:83:31: missed: not vectorized: statement can throw an exception: std::__throw_invalid_argument (__name_19(D));
/usr/include/c++/11/ext/string_conversions.h:83:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/ext/string_conversions.h:83:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ext/string_conversions.h:83:31: missed: splitting region at dominance boundary bb13
/usr/include/c++/11/ext/string_conversions.h:83:31: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/string_conversions.h:64:41: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/ext/string_conversions.h:64:41: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
harness.cpp:31:47: missed: couldn't vectorize loop
harness.cpp:31:47: missed: not vectorized: control flow in loop.
harness.cpp:14:32: missed: couldn't vectorize loop
harness.cpp:14:32: missed: not vectorized: control flow in loop.
harness.cpp:8:5: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/char_traits.h:399:25: missed: statement clobbers memory: _145 = __builtin_strlen (_4);
harness.cpp:31:47: missed: statement clobbers memory: _28 = CalculateTwoElectronIntegrals (1, size_142);
harness.cpp:8:5: missed: splitting region at control altering definition _150 = std::__cxx11::basic_string<char>::_M_create (&arg, &__dnew, 0);
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (&mode.D.32018._M_local_buf, "perf", 4);
/usr/include/c++/11/bits/basic_string.h:6250:27: missed: statement clobbers memory: _9 = std::__cxx11::basic_string<char>::compare (&mode, "correct");
harness.cpp:28:25: missed: statement clobbers memory: t1 = std::chrono::_V2::system_clock::now ();
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/char_traits.h:399:25: missed: statement clobbers memory: _145 = __builtin_strlen (_4);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _150 = std::__cxx11::basic_string<char>::_M_create (&arg, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb8
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb12
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb13
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_131, _4, _145);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at control altering definition D.51794 = std::__cxx11::basic_string<char>::substr (&arg, 9, 18446744073709551615); [return slot optimization]
/usr/include/c++/11/bits/basic_string.h:6250:27: missed: statement clobbers memory: _51 = std::__cxx11::basic_string<char>::compare (&arg, "--mode=correct");
/usr/include/c++/11/bits/basic_string.h:6250:27: missed: statement clobbers memory: _39 = std::__cxx11::basic_string<char>::compare (&arg, "--mode=perf");
/usr/include/c++/11/bits/basic_string.h:2494:20: missed: statement clobbers memory: _54 = std::__cxx11::basic_string<char>::rfind (&arg, "--size=", 0, 7);
/usr/include/c++/11/bits/basic_string.h:2494:20: missed: statement clobbers memory: _60 = std::__cxx11::basic_string<char>::rfind (&arg, "--repeat=", 0, 9);
harness.cpp:18:76: missed: not vectorized: statement can throw an exception: D.51794 = std::__cxx11::basic_string<char>::substr (&arg, 9, 18446744073709551615); [return slot optimization]
harness.cpp:18:76: note: ***** Analysis failed with vector mode V2DI
harness.cpp:18:76: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:18:76: missed: splitting region at control altering definition _62 = __gnu_cxx::__stoa<long int, int, char, int> (strtol, "stoi", _61, 0B, 10);
/usr/include/c++/11/bits/basic_string.h:6620:40: missed: not vectorized: statement can throw an exception: _62 = __gnu_cxx::__stoa<long int, int, char, int> (strtol, "stoi", _61, 0B, 10);
/usr/include/c++/11/bits/basic_string.h:6620:40: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:6620:40: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:6620:40: missed: splitting region at dominance boundary bb29
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_83, _85);
harness.cpp:8:5: missed: not vectorized: statement can throw an exception: resx 20
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb27
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_63, _65);
harness.cpp:18:76: note: ***** Analysis failed with vector mode V2DI
harness.cpp:18:76: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:18:76: missed: splitting region at dominance boundary bb19
harness.cpp:18:76: note: ***** Analysis failed with vector mode VOID
harness.cpp:18:76: missed: splitting region at control altering definition D.51623 = std::__cxx11::basic_string<char>::substr (&arg, 7, 18446744073709551615); [return slot optimization]
harness.cpp:17:72: missed: not vectorized: statement can throw an exception: D.51623 = std::__cxx11::basic_string<char>::substr (&arg, 7, 18446744073709551615); [return slot optimization]
harness.cpp:17:72: note: ***** Analysis failed with vector mode VOID
harness.cpp:17:72: missed: splitting region at control altering definition _56 = __gnu_cxx::__stoa<long int, int, char, int> (strtol, "stoi", _55, 0B, 10);
/usr/include/c++/11/bits/basic_string.h:6620:40: missed: not vectorized: statement can throw an exception: _56 = __gnu_cxx::__stoa<long int, int, char, int> (strtol, "stoi", _55, 0B, 10);
/usr/include/c++/11/bits/basic_string.h:6620:40: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:6620:40: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:6620:40: missed: splitting region at dominance boundary bb22
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_80, _82);
harness.cpp:8:5: missed: not vectorized: statement can throw an exception: resx 16
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb20
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_57, _59);
harness.cpp:17:72: note: ***** Analysis failed with vector mode V2DI
harness.cpp:17:72: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:17:72: missed: splitting region at dominance boundary bb16
harness.cpp:17:72: note: ***** Analysis failed with vector mode VOID
harness.cpp:17:72: missed: splitting region at loop 1 exit at bb17
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: not vectorized: statement can throw an exception: std::__cxx11::basic_string<char>::_M_replace (&mode, 0, _161, "perf", 4);
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at dominance boundary bb88
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at dominance boundary bb14
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at loop 1 exit at bb68
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: not vectorized: statement can throw an exception: std::__cxx11::basic_string<char>::_M_replace (&mode, 0, _158, "correct", 7);
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at dominance boundary bb69
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at dominance boundary bb87
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_86, _88);
harness.cpp:8:5: missed: not vectorized: statement can throw an exception: resx 14
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb32
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at loop 1 exit at bb35
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_66, _68);
harness.cpp:13:23: note: ***** Analysis failed with vector mode V2DI
harness.cpp:13:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:13:23: missed: splitting region at dominance boundary bb44
/usr/include/c++/11/bits/basic_string.h:6250:27: missed: statement clobbers memory: _69 = std::__cxx11::basic_string<char>::compare (&mode, "correct");
harness.cpp:28:25: missed: statement clobbers memory: t1 = std::chrono::_V2::system_clock::now ();
harness.cpp:30:23: note: ***** Analysis failed with vector mode VOID
harness.cpp:30:23: missed: splitting region at control altering definition _28 = CalculateTwoElectronIntegrals (1, size_142);
harness.cpp:31:47: missed: not vectorized: statement can throw an exception: _28 = CalculateTwoElectronIntegrals (1, size_142);
harness.cpp:31:47: note: ***** Analysis failed with vector mode VOID
harness.cpp:31:47: missed: splitting region at loop 2 exit at bb96
harness.cpp:30:23: note: ***** Analysis failed with vector mode VOID
harness.cpp:30:23: missed: splitting region at dominance boundary bb48
harness.cpp:30:23: note: ***** Analysis failed with vector mode VOID
harness.cpp:30:23: missed: splitting region at control altering definition _72 = std::basic_ostream<char>::_M_insert<long int> (&cout, _73);
harness.cpp:33:25: missed: statement clobbers memory: t2 = std::chrono::_V2::system_clock::now ();
/usr/include/c++/11/ostream:616:18: missed: not vectorized: statement can throw an exception: std::__ostream_insert<char, std::char_traits<char> > (&cout, "Time: ", 6);
/usr/include/c++/11/ostream:167:25: missed: not vectorized: statement can throw an exception: _72 = std::basic_ostream<char>::_M_insert<long int> (&cout, _73);
/usr/include/c++/11/ostream:167:25: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/ostream:167:25: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ostream:167:25: missed: splitting region at dominance boundary bb51
/usr/include/c++/11/ostream:167:25: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:167:25: missed: splitting region at dominance boundary bb74
/usr/include/c++/11/ostream:616:18: missed: not vectorized: statement can throw an exception: std::__ostream_insert<char, std::char_traits<char> > (_72, " ms\n", 4);
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at dominance boundary bb53
harness.cpp:8:5: missed: not vectorized: statement can throw an exception: resx 25
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at dominance boundary bb83
/usr/include/c++/11/ostream:616:18: missed: not vectorized: statement can throw an exception: std::__ostream_insert<char, std::char_traits<char> > (&cerr, "", 0);
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at dominance boundary bb46
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at dominance boundary bb93
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at dominance boundary bb36
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at control altering definition _32 = CalculateTwoElectronIntegrals (0, size_147);
harness.cpp:22:57: missed: not vectorized: statement can throw an exception: _32 = CalculateTwoElectronIntegrals (0, size_147);
harness.cpp:22:57: note: ***** Analysis failed with vector mode VOID
harness.cpp:22:57: missed: splitting region at control altering definition _71 = std::basic_ostream<char>::_M_insert<long unsigned int> (&cout, _70);
/usr/include/c++/11/ostream:196:18: missed: not vectorized: statement can throw an exception: _71 = std::basic_ostream<char>::_M_insert<long unsigned int> (&cout, _70);
/usr/include/c++/11/ostream:196:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:196:18: missed: splitting region at dominance boundary bb40
/usr/include/c++/11/ostream:196:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:196:18: missed: splitting region at dominance boundary bb57
/usr/include/c++/11/ostream:525:30: missed: not vectorized: statement can throw an exception: std::__ostream_insert<char, std::char_traits<char> > (_71, &__c, 1);
harness.cpp:23:29: note: ***** Analysis failed with vector mode V16QI
harness.cpp:23:29: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V16QI
harness.cpp:23:29: missed: splitting region at dominance boundary bb37
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_77, _79);
harness.cpp:8:5: note: ***** Analysis failed with vector mode V2DI
harness.cpp:8:5: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:8:5: missed: splitting region at dominance boundary bb77
harness.cpp:8:5: note: ***** Analysis failed with vector mode VOID
harness.cpp:8:5: missed: splitting region at dominance boundary bb84
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_89, _91);
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/iostream:74:25: missed: statement clobbers memory: std::ios_base::Init::Init (&__ioinit);
/usr/include/c++/11/iostream:74:25: missed: statement clobbers memory: __cxxabiv1::__cxa_atexit (__dt_comp , &__ioinit, &__dso_handle);
harness.cpp:40:1: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_tree.h:176:15: note: Considering inline candidate void std::_Rb_tree_header::_M_reset()/1030.
/usr/include/c++/11/bits/stl_tree.h:176:15: optimized:  Inlining void std::_Rb_tree_header::_M_reset()/1030 into std::_Rb_tree_header::_Rb_tree_header()/1024.
/usr/include/c++/11/bits/hashtable_policy.h:1210:7: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash<int>]/1211.
/usr/include/c++/11/bits/hashtable_policy.h:1210:7: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash<int>]/1211 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_Hash_code_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1119.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::equal_to<int>]/1214.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::equal_to<int>]/1214 into std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1122.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: note: Considering inline candidate std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_Hash_code_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1119.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: optimized:  Inlining std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_Hash_code_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1119 into std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1122.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::_Rb_tree_node<int>]/1302.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::_Rb_tree_node<int>]/1302 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::_Rb_tree_node<int>]/1205.
/usr/include/c++/11/bits/stl_tree.h:660:9: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::_Rb_tree_node<int>]/1205.
/usr/include/c++/11/bits/stl_tree.h:660:9: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::_Rb_tree_node<int>]/1205 into std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl<std::less<int>, true>::~_Rb_tree_impl()/1106.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1310.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1310 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1220.
/usr/include/c++/11/bits/hashtable_policy.h:1124:12: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1220.
/usr/include/c++/11/bits/hashtable_policy.h:1124:12: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1220 into std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >, true>::~_Hashtable_ebo_helper()/1125.
/usr/include/c++/11/bits/hashtable_policy.h:1802:12: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >, true>::~_Hashtable_ebo_helper()/1125.
/usr/include/c++/11/bits/hashtable_policy.h:1802:12: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >, true>::~_Hashtable_ebo_helper()/1125 into std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> > >::~_Hashtable_alloc()/1131.
/usr/include/c++/11/bits/allocator.h:156:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = int]/1315.
/usr/include/c++/11/bits/allocator.h:156:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = int]/1315 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = int]/1226.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = int]/1318.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = int]/1318 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = int]/1229.
/usr/include/c++/11/bits/stl_vector.h:128:14: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = int]/1229.
/usr/include/c++/11/bits/stl_vector.h:128:14: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = int]/1229 into std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()/1322.
/usr/include/c++/11/bits/stl_set.h:420:25: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size() const [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1355.
/usr/include/c++/11/bits/stl_set.h:420:25: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size() const [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1355 into std::set<_Key, _Compare, _Alloc>::size_type std::set<_Key, _Compare, _Alloc>::size() const [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1250.
/usr/include/c++/11/bits/unordered_map.h:311:25: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1356.
/usr/include/c++/11/bits/unordered_map.h:311:25: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1356 into std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size() const [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1251.
/usr/include/c++/11/bits/allocator.h:156:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::_Rb_tree_node<int>]/1378.
/usr/include/c++/11/bits/allocator.h:156:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::_Rb_tree_node<int>]/1378 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::_Rb_tree_node<int>]/1296.
/usr/include/c++/11/bits/stl_tree.h:671:22: note: Considering inline candidate std::_Rb_tree_header::_Rb_tree_header()/1024.
/usr/include/c++/11/bits/stl_tree.h:671:22: optimized:  Inlining std::_Rb_tree_header::_Rb_tree_header()/1024 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, <anonymous> >::_Rb_tree_impl() [with _Key_compare = std::less<int>; bool <anonymous> = true; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1202.
/usr/include/c++/11/bits/stl_tree.h:671:22: note: Considering inline candidate std::_Rb_tree_key_compare<_Key_compare>::_Rb_tree_key_compare() [with _Key_compare = std::less<int>]/1299.
/usr/include/c++/11/bits/stl_tree.h:671:22: optimized:  Inlining std::_Rb_tree_key_compare<_Key_compare>::_Rb_tree_key_compare() [with _Key_compare = std::less<int>]/1299 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, <anonymous> >::_Rb_tree_impl() [with _Key_compare = std::less<int>; bool <anonymous> = true; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1202.
/usr/include/c++/11/bits/stl_tree.h:671:22: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::_Rb_tree_node<int>]/1296.
/usr/include/c++/11/bits/stl_tree.h:671:22: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::_Rb_tree_node<int>]/1296 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, <anonymous> >::_Rb_tree_impl() [with _Key_compare = std::less<int>; bool <anonymous> = true; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1202.
/usr/include/c++/11/bits/stl_tree.h:928:7: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, <anonymous> >::_Rb_tree_impl() [with _Key_compare = std::less<int>; bool <anonymous> = true; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1202.
/usr/include/c++/11/bits/stl_tree.h:928:7: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, <anonymous> >::_Rb_tree_impl() [with _Key_compare = std::less<int>; bool <anonymous> = true; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1202 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1109.
/usr/include/c++/11/bits/stl_set.h:167:7: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1109.
/usr/include/c++/11/bits/stl_set.h:167:7: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1109 into std::set<_Key, _Compare, _Alloc>::set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1112.
/usr/include/c++/11/bits/stl_tree.h:739:25: note: Considering inline candidate std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_mbegin() const [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1383.
/usr/include/c++/11/bits/stl_tree.h:739:25: optimized:  Inlining std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_mbegin() const [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1383 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1305.
/usr/include/c++/11/bits/allocator.h:156:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1385.
/usr/include/c++/11/bits/allocator.h:156:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1385 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1307.
/usr/include/c++/11/bits/hashtable_policy.h:1127:63: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1307.
/usr/include/c++/11/bits/hashtable_policy.h:1127:63: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1307 into std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1217.
/usr/include/c++/11/bits/hashtable_policy.h:1823:7: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1217.
/usr/include/c++/11/bits/hashtable_policy.h:1823:7: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1217 into std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1128.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)/977.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)/977 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1134.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Hash_node_base::_Hash_node_base()/970.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Hash_node_base::_Hash_node_base()/970 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1134.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1128.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1128 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1134.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1122.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1122 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1134.
/usr/include/c++/11/bits/unordered_map.h:141:7: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1134.
/usr/include/c++/11/bits/unordered_map.h:141:7: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1134 into std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map() [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1137.
/usr/include/c++/11/bits/stl_pair.h:353:59: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool]/1192.
/usr/include/c++/11/bits/stl_pair.h:353:59: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool]/1192 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_iterator<int>; _T2 = bool]/1424.
/usr/include/c++/11/bits/stl_pair.h:353:27: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_iterator<int>]/1422.
/usr/include/c++/11/bits/stl_pair.h:353:27: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_iterator<int>]/1422 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_iterator<int>; _T2 = bool]/1424.
/usr/include/c++/11/bits/stl_pair.h:353:59: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool&]/1344.
/usr/include/c++/11/bits/stl_pair.h:353:59: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool&]/1344 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>&; _U2 = bool&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_const_iterator<int>; _T2 = bool]/1346.
/usr/include/c++/11/bits/stl_pair.h:353:4: note: Considering inline candidate std::_Rb_tree_const_iterator<_Tp>::_Rb_tree_const_iterator(const iterator&) [with _Tp = int]/1430.
/usr/include/c++/11/bits/stl_pair.h:353:4: optimized:  Inlining std::_Rb_tree_const_iterator<_Tp>::_Rb_tree_const_iterator(const iterator&) [with _Tp = int]/1430 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>&; _U2 = bool&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_const_iterator<int>; _T2 = bool]/1346.
/usr/include/c++/11/bits/stl_pair.h:353:27: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_iterator<int>&]/1343.
/usr/include/c++/11/bits/stl_pair.h:353:27: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_iterator<int>&]/1343 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>&; _U2 = bool&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_const_iterator<int>; _T2 = bool]/1346.
/usr/include/c++/11/tuple:435:21: note: Considering inline candidate constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(const _Head&) [with long unsigned int _Idx = 0; _Head = const int&]/1437.
/usr/include/c++/11/tuple:435:21: optimized:  Inlining constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(const _Head&) [with long unsigned int _Idx = 0; _Head = const int&]/1437 into constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(const _Head&) [with long unsigned int _Idx = 0; _Head = const int&]/1440.
/usr/include/c++/11/tuple:729:28: note: Considering inline candidate constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(const _Head&) [with long unsigned int _Idx = 0; _Head = const int&]/1440.
/usr/include/c++/11/tuple:729:28: optimized:  Inlining constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(const _Head&) [with long unsigned int _Idx = 0; _Head = const int&]/1440 into constexpr std::tuple<_Elements>::tuple(const _Elements& ...) [with bool _NotEmpty = true; typename std::enable_if<std::tuple<_Elements>::_TCC<_Dummy>::__is_implicitly_constructible<const _Elements& ...>(), bool>::type <anonymous> = true; _Elements = {const int&}]/1443.
/usr/include/c++/11/bits/allocator.h:160:34: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = int]/1475.
/usr/include/c++/11/bits/allocator.h:160:34: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = int]/1475 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = int]/1392.
/usr/include/c++/11/bits/stl_vector.h:137:22: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_impl_data::_Vector_impl_data() [with _Tp = int; _Alloc = std::allocator<int>]/1478.
/usr/include/c++/11/bits/stl_vector.h:137:22: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_impl_data::_Vector_impl_data() [with _Tp = int; _Alloc = std::allocator<int>]/1478 into std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1395.
/usr/include/c++/11/bits/stl_vector.h:137:22: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = int]/1392.
/usr/include/c++/11/bits/stl_vector.h:137:22: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = int]/1392 into std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1395.
/usr/include/c++/11/bits/stl_construct.h:196:11: note: Considering inline candidate static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = int*]/1483.
/usr/include/c++/11/bits/stl_construct.h:196:11: optimized:  Inlining static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = int*]/1483 into void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = int*]/1401.
/usr/include/c++/11/bits/alloc_traits.h:848:15: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = int*]/1401.
/usr/include/c++/11/bits/alloc_traits.h:848:15: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = int*]/1401 into void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = int*; _Tp = int]/1332.
/usr/include/c++/11/bits/stl_tree.h:996:16: note: Considering inline candidate std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1427.
/usr/include/c++/11/bits/stl_tree.h:996:16: optimized:  Inlining std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1427 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1489.
/usr/include/c++/11/bits/stl_pair.h:353:59: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_node_base*&]/1492.
/usr/include/c++/11/bits/stl_pair.h:353:59: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_node_base*&]/1492 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_node<int>*&; _U2 = std::_Rb_tree_node_base*&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1494.
/usr/include/c++/11/bits/stl_pair.h:353:27: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_node<int>*&]/1491.
/usr/include/c++/11/bits/stl_pair.h:353:27: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_node<int>*&]/1491 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_node<int>*&; _U2 = std::_Rb_tree_node_base*&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1494.
/usr/include/c++/11/bits/stl_pair.h:323:33: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_node_base*&]/1492.
/usr/include/c++/11/bits/stl_pair.h:323:33: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_node_base*&]/1492 into constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = std::_Rb_tree_node_base*&; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1499.
/usr/include/c++/11/bits/hashtable_policy.h:1233:28: note: Considering inline candidate std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/975.
/usr/include/c++/11/bits/hashtable_policy.h:1233:28: optimized:  Inlining std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/975 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1503.
/usr/include/c++/11/bits/hashtable.h:795:49: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1503.
/usr/include/c++/11/bits/hashtable.h:795:49: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1503 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1433.
/usr/include/c++/11/bits/hashtable_policy.h:277:12: note: Considering inline candidate std::__detail::_Hash_node_base::_Hash_node_base()/970.
/usr/include/c++/11/bits/hashtable_policy.h:277:12: optimized:  Inlining std::__detail::_Hash_node_base::_Hash_node_base()/970 into std::__detail::_Hash_node<std::pair<const int, double>, false>::_Hash_node()/1507.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1523.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1523 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1524.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1524.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1524 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/1525.
/usr/include/c++/11/ext/new_allocator.h:155:27: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = int]/1533.
/usr/include/c++/11/ext/new_allocator.h:155:27: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = int]/1533 into __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = int]/1534.
/usr/include/c++/11/bits/alloc_traits.h:550:21: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = int]/1534.
/usr/include/c++/11/bits/alloc_traits.h:550:21: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = int]/1534 into static std::allocator_traits<std::allocator<_Tp1> >::size_type std::allocator_traits<std::allocator<_Tp1> >::max_size(const allocator_type&) [with _Tp = int]/1473.
/usr/include/c++/11/bits/stl_vector.h:1784:19: note: Considering inline candidate constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = long unsigned int]/990.
/usr/include/c++/11/bits/stl_vector.h:1784:19: optimized:  Inlining constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = long unsigned int]/990 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1390.
/usr/include/c++/11/bits/stl_vector.h:1783:51: note: Considering inline candidate static std::allocator_traits<std::allocator<_Tp1> >::size_type std::allocator_traits<std::allocator<_Tp1> >::max_size(const allocator_type&) [with _Tp = int]/1473.
/usr/include/c++/11/bits/stl_vector.h:1783:51: optimized:  Inlining static std::allocator_traits<std::allocator<_Tp1> >::size_type std::allocator_traits<std::allocator<_Tp1> >::max_size(const allocator_type&) [with _Tp = int]/1473 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1390.
/usr/include/c++/11/bits/stl_vector.h:1769:24: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = int]/1229.
/usr/include/c++/11/bits/stl_vector.h:1769:24: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = int]/1229 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1320.
/usr/include/c++/11/bits/stl_vector.h:1769:23: note: Considering inline candidate static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1390.
/usr/include/c++/11/bits/stl_vector.h:1769:23: optimized:  Inlining static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1390 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1320.
/usr/include/c++/11/bits/stl_vector.h:1769:24: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = int]/1392.
/usr/include/c++/11/bits/stl_vector.h:1769:24: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = int]/1392 into static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1320.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = int]/1536.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = int]/1536 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = int]/1481.
/usr/include/c++/11/bits/stl_vector.h:354:19: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = int]/1481.
/usr/include/c++/11/bits/stl_vector.h:354:19: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = int]/1481 into void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = int; _Alloc = std::allocator<int>]/1398.
/usr/include/c++/11/bits/stl_vector.h:337:7: note: Considering inline candidate std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()/1322.
/usr/include/c++/11/bits/stl_vector.h:337:7: optimized:  Inlining std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()/1322 into std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = int; _Alloc = std::allocator<int>]/1328.
/usr/include/c++/11/bits/stl_vector.h:335:15: note: Considering inline candidate void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = int; _Alloc = std::allocator<int>]/1398.
/usr/include/c++/11/bits/stl_vector.h:335:15: optimized:  Inlining void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = int; _Alloc = std::allocator<int>]/1398 into std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = int; _Alloc = std::allocator<int>]/1328.
/usr/include/c++/11/bits/stl_vector.h:683:7: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = int; _Alloc = std::allocator<int>]/1328.
/usr/include/c++/11/bits/stl_vector.h:683:7: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = int; _Alloc = std::allocator<int>]/1328 into std::vector<_Tp, _Alloc>::~vector() [with _Tp = int; _Alloc = std::allocator<int>]/1235.
/usr/include/c++/11/bits/stl_vector.h:680:15: note: Considering inline candidate void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = int*; _Tp = int]/1332.
/usr/include/c++/11/bits/stl_vector.h:680:15: optimized:  Inlining void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = int*; _Tp = int]/1332 into std::vector<_Tp, _Alloc>::~vector() [with _Tp = int; _Alloc = std::allocator<int>]/1235.
/usr/include/c++/11/bits/stl_vector.h:681:28: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = int; _Alloc = std::allocator<int>]/1331.
/usr/include/c++/11/bits/stl_vector.h:681:28: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = int; _Alloc = std::allocator<int>]/1331 into std::vector<_Tp, _Alloc>::~vector() [with _Tp = int; _Alloc = std::allocator<int>]/1235.
/usr/include/c++/11/bits/hashtable_policy.h:1276:51: note: Considering inline candidate const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 1; _Tp = std::hash<int>]/1541.
/usr/include/c++/11/bits/hashtable_policy.h:1276:51: optimized:  Inlining const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 1; _Tp = std::hash<int>]/1541 into const _Hash& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash() const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1502.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: note: Considering inline candidate std::size_t std::hash<int>::operator()(int) const/951.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: optimized:  Inlining std::size_t std::hash<int>::operator()(int) const/951 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1432.
/usr/include/c++/11/bits/hashtable_policy.h:1219:16: note: Considering inline candidate const _Hash& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash() const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1502.
/usr/include/c++/11/bits/hashtable_policy.h:1219:16: optimized:  Inlining const _Hash& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash() const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1502 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1432.
/usr/include/c++/11/bits/hashtable_policy.h:339:24: note: Considering inline candidate std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_Node_iterator_base(std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::__node_type*) [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1551.
/usr/include/c++/11/bits/hashtable_policy.h:339:24: optimized:  Inlining std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_Node_iterator_base(std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::__node_type*) [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1551 into std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1514.
/usr/include/c++/11/bits/alloc_traits.h:535:15: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = int; _Tp = std::_Rb_tree_node<int>]/1554.
/usr/include/c++/11/bits/alloc_traits.h:535:15: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = int; _Tp = std::_Rb_tree_node<int>]/1554 into static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = int; _Tp = std::_Rb_tree_node<int>]/1518.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::_Rb_tree_node<int>]/1555.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::_Rb_tree_node<int>]/1555 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::_Rb_tree_node<int>]/1519.
/usr/include/c++/11/bits/stl_tree.h:565:34: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::_Rb_tree_node<int>]/1519.
/usr/include/c++/11/bits/stl_tree.h:565:34: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::_Rb_tree_node<int>]/1519 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_put_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1467.
/usr/include/c++/11/bits/stl_tree.h:565:56: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1516.
/usr/include/c++/11/bits/stl_tree.h:565:56: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1516 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_put_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1467.
/usr/include/c++/11/bits/hashtable_policy.h:1834:40: note: Considering inline candidate _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_get() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1556.
/usr/include/c++/11/bits/hashtable_policy.h:1834:40: optimized:  Inlining _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_get() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1556 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1520.
/usr/include/c++/11/bits/alloc_traits.h:535:15: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::pair<const int, double>; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1557.
/usr/include/c++/11/bits/alloc_traits.h:535:15: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::pair<const int, double>; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1557 into static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const int, double>; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1521.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1558.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1558 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1559.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1559.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1559 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1560.
/usr/include/c++/11/bits/allocator.h:169:53: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/1562.
/usr/include/c++/11/bits/allocator.h:169:53: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/1562 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const int, double>, false>; _Tp = std::__detail::_Hash_node_base*]/1527.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/1565.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/1565 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1530.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1567.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1567 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1532.
/usr/include/c++/11/bits/hashtable_policy.h:1943:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1530.
/usr/include/c++/11/bits/hashtable_policy.h:1943:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1530 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1472.
/usr/include/c++/11/bits/hashtable_policy.h:1942:41: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1532.
/usr/include/c++/11/bits/hashtable_policy.h:1942:41: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1532 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1472.
/usr/include/c++/11/bits/hashtable_policy.h:1941:28: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const int, double>, false>; _Tp = std::__detail::_Hash_node_base*]/1527.
/usr/include/c++/11/bits/hashtable_policy.h:1941:28: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const int, double>, false>; _Tp = std::__detail::_Hash_node_base*]/1527 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1472.
/usr/include/c++/11/bits/hashtable_policy.h:1941:53: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1520.
/usr/include/c++/11/bits/hashtable_policy.h:1941:53: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1520 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1472.
/usr/include/c++/11/bits/hashtable_policy.h:1940:57: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/1525.
/usr/include/c++/11/bits/hashtable_policy.h:1940:57: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/1525 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1472.
/usr/include/c++/11/bits/hashtable.h:449:42: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1472.
/usr/include/c++/11/bits/hashtable.h:449:42: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1472 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1389.
/usr/include/c++/11/bits/hashtable.h:446:27: note: Considering inline candidate bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_uses_single_bucket(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1471.
/usr/include/c++/11/bits/hashtable.h:446:27: optimized:  Inlining bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_uses_single_bucket(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1471 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1389.
/usr/include/c++/11/bits/hashtable.h:454:30: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1389.
/usr/include/c++/11/bits/hashtable.h:454:30: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1389 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1313.
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = int]/1533.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = int]/1533 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = int]/1568.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = int]/1568.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = int]/1535->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = int]/1568, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_vector.h:346:33: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = int]/1535.
/usr/include/c++/11/bits/stl_vector.h:346:33: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = int]/1535 into std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = int; _Alloc = std::allocator<int>]/1480.
/usr/include/c++/11/bits/stl_vector.h:361:44: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = int; _Alloc = std::allocator<int>]/1480.
/usr/include/c++/11/bits/stl_vector.h:361:44: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = int; _Alloc = std::allocator<int>]/1480 into void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = int; _Alloc = std::allocator<int>]/1397.
/usr/include/c++/11/bits/stl_vector.h:305:33: note: Considering inline candidate std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()/1322.
/usr/include/c++/11/bits/stl_vector.h:305:33: optimized:  Inlining std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()/1322 into std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1325.
/usr/include/c++/11/bits/stl_vector.h:305:26: note: Considering inline candidate void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = int; _Alloc = std::allocator<int>]/1397.
/usr/include/c++/11/bits/stl_vector.h:305:26: missed:   will not early inline: std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1325->void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = int; _Alloc = std::allocator<int>]/1397, growth 8 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_vector.h:304:9: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1395.
/usr/include/c++/11/bits/stl_vector.h:304:9: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1395 into std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1325.
/usr/include/c++/11/bits/stl_construct.h:119:7: note: Considering inline candidate void* operator new(std::size_t, void*)/938.
/usr/include/c++/11/bits/stl_construct.h:119:7: optimized:  Inlining void* operator new(std::size_t, void*)/938 into void std::_Construct(_Tp*, _Args&& ...) [with _Tp = int; _Args = {}]/1569.
/usr/include/c++/11/utility:234:43: note: Considering inline candidate static constexpr const _Tp1& std::__pair_get<0>::__const_get(const std::pair<_T1, _T2>&) [with _Tp1 = const int; _Tp2 = double]/1579.
/usr/include/c++/11/utility:234:43: optimized:  Inlining static constexpr const _Tp1& std::__pair_get<0>::__const_get(const std::pair<_T1, _T2>&) [with _Tp1 = const int; _Tp2 = double]/1579 into constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&) [with long unsigned int _Int = 0; _Tp1 = const int; _Tp2 = double]/1580.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: note: Considering inline candidate constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&) [with long unsigned int _Int = 0; _Tp1 = const int; _Tp2 = double]/1580.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: optimized:  Inlining constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&) [with long unsigned int _Int = 0; _Tp1 = const int; _Tp2 = double]/1580 into decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const int, double>&]/1581.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const int, double>&]/1578.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const int, double>&]/1578 into decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const int, double>&]/1581.
/usr/include/c++/11/ext/aligned_buffer.h:115:41: note: Considering inline candidate void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() [with _Tp = std::pair<const int, double>]/1584.
/usr/include/c++/11/ext/aligned_buffer.h:115:41: optimized:  Inlining void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() [with _Tp = std::pair<const int, double>]/1584 into _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = std::pair<const int, double>]/1544.
/usr/include/c++/11/bits/hashtable_policy.h:238:33: note: Considering inline candidate _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = std::pair<const int, double>]/1544.
/usr/include/c++/11/bits/hashtable_policy.h:238:33: optimized:  Inlining _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = std::pair<const int, double>]/1544 into _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1505.
/usr/include/c++/11/bits/hashtable_policy.h:246:26: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1505.
/usr/include/c++/11/bits/hashtable_policy.h:246:26: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1505 into _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const int, double>]/1435.
/usr/include/c++/11/bits/hashtable_policy.h:347:39: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1505.
/usr/include/c++/11/bits/hashtable_policy.h:347:39: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1505 into std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::pointer std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator->() const [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1455.
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1585.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1585 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1586.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1586.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1545->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1586, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/tuple:756:17: note: Considering inline candidate constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(std::_Tuple_impl<_Idx, _Head>&&) [with long unsigned int _Idx = 0; _Head = const int&]/1588.
/usr/include/c++/11/tuple:756:17: optimized:  Inlining constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(std::_Tuple_impl<_Idx, _Head>&&) [with long unsigned int _Idx = 0; _Head = const int&]/1588 into constexpr std::tuple<_Elements>::tuple(std::tuple<_Elements>&&) [with _Elements = {const int&}]/1591.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1594.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1594 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1548.
/usr/include/c++/11/bits/hashtable_policy.h:1905:38: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1548.
/usr/include/c++/11/bits/hashtable_policy.h:1905:38: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1548 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1522.
/usr/include/c++/11/bits/hashtable_policy.h:1905:56: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1520.
/usr/include/c++/11/bits/hashtable_policy.h:1905:56: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1520 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1522.
/usr/include/c++/11/bits/hashtable_policy.h:1903:57: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1560.
/usr/include/c++/11/bits/hashtable_policy.h:1903:57: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1560 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1522.
/usr/include/c++/11/bits/hashtable_policy.h:1895:29: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1522.
/usr/include/c++/11/bits/hashtable_policy.h:1895:29: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1522 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1470.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const int, double>; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1521.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const int, double>; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1521 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1470.
/usr/include/c++/11/bits/hashtable_policy.h:1894:53: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1520.
/usr/include/c++/11/bits/hashtable_policy.h:1894:53: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1520 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1470.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1505.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1505 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1470.
/usr/include/c++/11/bits/hashtable.h:308:57: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1470.
/usr/include/c++/11/bits/hashtable.h:308:57: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1470 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1452.
/usr/include/c++/11/bits/hashtable_policy.h:1916:22: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1470.
/usr/include/c++/11/bits/hashtable_policy.h:1916:22: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1470 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1388.
/usr/include/c++/11/bits/hashtable_policy.h:1915:22: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1468.
/usr/include/c++/11/bits/hashtable_policy.h:1915:22: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1468 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1388.
/usr/include/c++/11/bits/hashtable.h:2320:32: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1388.
/usr/include/c++/11/bits/hashtable.h:2320:32: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1388 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1312.
/usr/include/c++/11/bits/hashtable.h:2320:32: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1387.
/usr/include/c++/11/bits/hashtable.h:2320:32: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1387 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1312.
/usr/include/c++/11/bits/hashtable.h:1534:5: note: Considering inline candidate std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> > >::~_Hashtable_alloc()/1131.
/usr/include/c++/11/bits/hashtable.h:1534:5: optimized:  Inlining std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> > >::~_Hashtable_alloc()/1131 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223.
/usr/include/c++/11/bits/hashtable.h:1533:28: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1313.
/usr/include/c++/11/bits/hashtable.h:1533:28: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1313 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223.
/usr/include/c++/11/bits/hashtable.h:1532:12: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1312.
/usr/include/c++/11/bits/hashtable.h:1532:12: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1312, growth 12 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/unordered_map.h:102:11: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223.
/usr/include/c++/11/bits/unordered_map.h:102:11: missed:   will not early inline: std::unordered_map<int, double>::~unordered_map()/1140->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223, growth 7 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/ext/aligned_buffer.h:73:41: note: Considering inline candidate void* __gnu_cxx::__aligned_membuf<_Tp>::_M_addr() [with _Tp = int]/1596.
/usr/include/c++/11/ext/aligned_buffer.h:73:41: optimized:  Inlining void* __gnu_cxx::__aligned_membuf<_Tp>::_M_addr() [with _Tp = int]/1596 into _Tp* __gnu_cxx::__aligned_membuf<_Tp>::_M_ptr() [with _Tp = int]/1553.
/usr/include/c++/11/bits/stl_tree.h:235:33: note: Considering inline candidate _Tp* __gnu_cxx::__aligned_membuf<_Tp>::_M_ptr() [with _Tp = int]/1553.
/usr/include/c++/11/bits/stl_tree.h:235:33: optimized:  Inlining _Tp* __gnu_cxx::__aligned_membuf<_Tp>::_M_ptr() [with _Tp = int]/1553 into _Val* std::_Rb_tree_node<_Val>::_M_valptr() [with _Val = int]/1517.
/usr/include/c++/11/bits/stl_tree.h:623:24: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = int; _Tp = std::_Rb_tree_node<int>]/1518.
/usr/include/c++/11/bits/stl_tree.h:623:24: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = int; _Tp = std::_Rb_tree_node<int>]/1518 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1466.
/usr/include/c++/11/bits/stl_tree.h:623:46: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1516.
/usr/include/c++/11/bits/stl_tree.h:623:46: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1516 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1466.
/usr/include/c++/11/bits/stl_tree.h:623:24: note: Considering inline candidate _Val* std::_Rb_tree_node<_Val>::_M_valptr() [with _Val = int]/1517.
/usr/include/c++/11/bits/stl_tree.h:623:24: optimized:  Inlining _Val* std::_Rb_tree_node<_Val>::_M_valptr() [with _Val = int]/1517 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1466.
/usr/include/c++/11/bits/stl_tree.h:632:13: note: Considering inline candidate void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_put_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1467.
/usr/include/c++/11/bits/stl_tree.h:632:13: optimized:  Inlining void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_put_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1467 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_drop_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1382.
/usr/include/c++/11/bits/stl_tree.h:631:17: note: Considering inline candidate void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1466.
/usr/include/c++/11/bits/stl_tree.h:631:17: optimized:  Inlining void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1466 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_drop_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1382.
/usr/include/c++/11/bits/stl_tree.h:1891:16: note: Considering inline candidate void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_drop_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1382.
/usr/include/c++/11/bits/stl_tree.h:1891:16: optimized:  Inlining void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_drop_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1382 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1304.
/usr/include/c++/11/bits/stl_tree.h:1890:28: note: Considering inline candidate static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_left(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1381.
/usr/include/c++/11/bits/stl_tree.h:1890:28: optimized:  Inlining static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_left(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1381 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1304.
/usr/include/c++/11/bits/stl_tree.h:1889:12: note: Considering inline candidate void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1304.
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed:   Not inlining: recursive call.
/usr/include/c++/11/bits/stl_tree.h:1889:12: note: Considering inline candidate static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_right(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1380.
/usr/include/c++/11/bits/stl_tree.h:1889:12: optimized:  Inlining static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_right(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1380 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1304.
/usr/include/c++/11/bits/stl_tree.h:984:31: note: Considering inline candidate std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl<std::less<int>, true>::~_Rb_tree_impl()/1106.
/usr/include/c++/11/bits/stl_tree.h:984:31: optimized:  Inlining std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl<std::less<int>, true>::~_Rb_tree_impl()/1106 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1208.
/usr/include/c++/11/bits/stl_tree.h:984:17: note: Considering inline candidate void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1304.
/usr/include/c++/11/bits/stl_tree.h:984:17: missed:   will not early inline: std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1208->void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1304, growth 7 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_tree.h:984:17: note: Considering inline candidate std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1305.
/usr/include/c++/11/bits/stl_tree.h:984:17: optimized:  Inlining std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1305 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1208.
/usr/include/c++/11/bits/stl_set.h:281:7: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1208.
/usr/include/c++/11/bits/stl_set.h:281:7: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1208 into std::set<_Key, _Compare, _Alloc>::~set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1115.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:62:1: note: Considering inline candidate std::set<_Key, _Compare, _Alloc>::~set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1115.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:62:1: optimized:  Inlining std::set<_Key, _Compare, _Alloc>::~set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1115 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:62:1: note: Considering inline candidate std::unordered_map<int, double>::~unordered_map()/1140.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:62:1: optimized:  Inlining std::unordered_map<int, double>::~unordered_map()/1140 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:61:64: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size() const [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1251.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:61:64: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size() const [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1251 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:61:45: note: Considering inline candidate std::set<_Key, _Compare, _Alloc>::size_type std::set<_Key, _Compare, _Alloc>::size() const [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1250.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:61:45: optimized:  Inlining std::set<_Key, _Compare, _Alloc>::size_type std::set<_Key, _Compare, _Alloc>::size() const [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1250 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:13:36: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map() [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1137.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:13:36: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map() [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1137 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:12:19: note: Considering inline candidate std::set<_Key, _Compare, _Alloc>::set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1112.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:12:19: optimized:  Inlining std::set<_Key, _Compare, _Alloc>::set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1112 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/usr/include/c++/11/ext/aligned_buffer.h:77:47: note: Considering inline candidate const void* __gnu_cxx::__aligned_membuf<_Tp>::_M_addr() const [with _Tp = int]/1598.
/usr/include/c++/11/ext/aligned_buffer.h:77:47: optimized:  Inlining const void* __gnu_cxx::__aligned_membuf<_Tp>::_M_addr() const [with _Tp = int]/1598 into const _Tp* __gnu_cxx::__aligned_membuf<_Tp>::_M_ptr() const [with _Tp = int]/1572.
/usr/include/c++/11/bits/stl_tree.h:239:33: note: Considering inline candidate const _Tp* __gnu_cxx::__aligned_membuf<_Tp>::_M_ptr() const [with _Tp = int]/1572.
/usr/include/c++/11/bits/stl_tree.h:239:33: optimized:  Inlining const _Tp* __gnu_cxx::__aligned_membuf<_Tp>::_M_ptr() const [with _Tp = int]/1572 into const _Val* std::_Rb_tree_node<_Val>::_M_valptr() const [with _Val = int]/1539.
/usr/include/c++/11/bits/stl_tree.h:775:22: note: Considering inline candidate const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = int]/1417.
/usr/include/c++/11/bits/stl_tree.h:775:22: optimized:  Inlining const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = int]/1417 into static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1487.
/usr/include/c++/11/bits/stl_tree.h:775:38: note: Considering inline candidate const _Val* std::_Rb_tree_node<_Val>::_M_valptr() const [with _Val = int]/1539.
/usr/include/c++/11/bits/stl_tree.h:775:38: optimized:  Inlining const _Val* std::_Rb_tree_node<_Val>::_M_valptr() const [with _Val = int]/1539 into static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1487.
/usr/include/c++/11/bits/stl_tree.h:796:22: note: Considering inline candidate static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1487.
/usr/include/c++/11/bits/stl_tree.h:796:22: optimized:  Inlining static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1487 into static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1497.
/usr/include/c++/11/bits/stl_tree.h:2084:14: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = std::_Rb_tree_node_base*&; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1499.
/usr/include/c++/11/bits/stl_tree.h:2084:14: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = std::_Rb_tree_node_base*&; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1499 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416.
/usr/include/c++/11/bits/stl_tree.h:2083:9: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_node<int>*&; _U2 = std::_Rb_tree_node_base*&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1494.
/usr/include/c++/11/bits/stl_tree.h:2083:9: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_node<int>*&; _U2 = std::_Rb_tree_node_base*&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1494 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416.
/usr/include/c++/11/bits/stl_tree.h:2082:33: note: Considering inline candidate constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1488.
/usr/include/c++/11/bits/stl_tree.h:2082:33: optimized:  Inlining constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1488 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416.
/usr/include/c++/11/bits/stl_tree.h:2082:33: note: Considering inline candidate static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1497.
/usr/include/c++/11/bits/stl_tree.h:2082:33: optimized:  Inlining static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1497 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416.
/usr/include/c++/11/bits/stl_tree.h:2080:6: note: Considering inline candidate std::_Rb_tree_iterator<_Tp>::_Self& std::_Rb_tree_iterator<_Tp>::operator--() [with _Tp = int]/1496.
/usr/include/c++/11/bits/stl_tree.h:2080:6: optimized:  Inlining std::_Rb_tree_iterator<_Tp>::_Self& std::_Rb_tree_iterator<_Tp>::operator--() [with _Tp = int]/1496 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416.
/usr/include/c++/11/bits/stl_tree.h:2078:13: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_node<int>*&; _U2 = std::_Rb_tree_node_base*&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1494.
/usr/include/c++/11/bits/stl_tree.h:2078:13: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_node<int>*&; _U2 = std::_Rb_tree_node_base*&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1494 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416.
/usr/include/c++/11/bits/stl_tree.h:2077:12: note: Considering inline candidate bool std::operator==(const _Self&, const _Self&)/1490.
/usr/include/c++/11/bits/stl_tree.h:2077:12: optimized:  Inlining bool std::operator==(const _Self&, const _Self&)/1490 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416.
/usr/include/c++/11/bits/stl_tree.h:2077:20: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1489.
/usr/include/c++/11/bits/stl_tree.h:2077:20: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1489 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416.
/usr/include/c++/11/bits/stl_tree.h:2074:16: note: Considering inline candidate std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1427.
/usr/include/c++/11/bits/stl_tree.h:2074:16: optimized:  Inlining std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1427 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416.
/usr/include/c++/11/bits/stl_tree.h:2072:42: note: Considering inline candidate static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_right(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1380.
/usr/include/c++/11/bits/stl_tree.h:2072:42: optimized:  Inlining static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_right(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1380 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416.
/usr/include/c++/11/bits/stl_tree.h:2072:26: note: Considering inline candidate static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_left(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1381.
/usr/include/c++/11/bits/stl_tree.h:2072:26: optimized:  Inlining static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_left(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1381 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416.
/usr/include/c++/11/bits/stl_tree.h:2071:35: note: Considering inline candidate constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1488.
/usr/include/c++/11/bits/stl_tree.h:2071:35: optimized:  Inlining constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1488 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416.
/usr/include/c++/11/bits/stl_tree.h:2071:35: note: Considering inline candidate static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1487.
/usr/include/c++/11/bits/stl_tree.h:2071:35: optimized:  Inlining static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1487 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416.
/usr/include/c++/11/bits/stl_tree.h:2066:29: note: Considering inline candidate std::_Rb_tree_node_base* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_end() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1484.
/usr/include/c++/11/bits/stl_tree.h:2066:29: optimized:  Inlining std::_Rb_tree_node_base* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_end() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1484 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416.
/usr/include/c++/11/bits/stl_tree.h:2065:32: note: Considering inline candidate std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1305.
/usr/include/c++/11/bits/stl_tree.h:2065:32: optimized:  Inlining std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1305 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416.
/usr/include/c++/11/bits/hashtable_policy.h:1650:48: note: Considering inline candidate const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 0; _Tp = std::equal_to<int>]/1601.
/usr/include/c++/11/bits/hashtable_policy.h:1650:48: optimized:  Inlining const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 0; _Tp = std::equal_to<int>]/1601 into const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_eq() const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1576.
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::_Rb_tree_node<int>]/1608.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::_Rb_tree_node<int>]/1608 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::_Rb_tree_node<int>]/1609.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::_Rb_tree_node<int>]/1609.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::_Rb_tree_node<int>]/1599->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::_Rb_tree_node<int>]/1609, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_tree.h:561:39: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::_Rb_tree_node<int>]/1599.
/usr/include/c++/11/bits/stl_tree.h:561:39: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::_Rb_tree_node<int>]/1599 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_node() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1573.
/usr/include/c++/11/bits/stl_tree.h:561:61: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1516.
/usr/include/c++/11/bits/stl_tree.h:561:61: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1516 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_node() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1573.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate void* operator new(std::size_t, void*)/938.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining void* operator new(std::size_t, void*)/938 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1610.
/usr/include/c++/11/ext/new_allocator.h:162:46: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1341.
/usr/include/c++/11/ext/new_allocator.h:162:46: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1341 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1610.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1610.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1610 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1600.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1341.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1341 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1600.
/usr/include/c++/11/bits/stl_tree.h:595:32: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1600.
/usr/include/c++/11/bits/stl_tree.h:595:32: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1600 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1574.
/usr/include/c++/11/bits/stl_tree.h:595:54: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1516.
/usr/include/c++/11/bits/stl_tree.h:595:54: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1516 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1574.
/usr/include/c++/11/bits/stl_tree.h:595:32: note: Considering inline candidate _Val* std::_Rb_tree_node<_Val>::_M_valptr() [with _Val = int]/1517.
/usr/include/c++/11/bits/stl_tree.h:595:32: optimized:  Inlining _Val* std::_Rb_tree_node<_Val>::_M_valptr() [with _Val = int]/1517 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1574.
/usr/include/c++/11/bits/stl_tree.h:595:32: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1341.
/usr/include/c++/11/bits/stl_tree.h:595:32: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1341 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1574.
/usr/include/c++/11/bits/stl_tree.h:594:8: note: Considering inline candidate void* operator new(std::size_t, void*)/938.
/usr/include/c++/11/bits/stl_tree.h:594:8: optimized:  Inlining void* operator new(std::size_t, void*)/938 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1574.
/usr/include/c++/11/bits/stl_tree.h:612:21: note: Considering inline candidate void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1574.
/usr/include/c++/11/bits/stl_tree.h:612:21: optimized:  Inlining void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1574 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1540.
/usr/include/c++/11/bits/stl_tree.h:612:21: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1341.
/usr/include/c++/11/bits/stl_tree.h:612:21: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1341 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1540.
/usr/include/c++/11/bits/stl_tree.h:611:34: note: Considering inline candidate std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_node() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1573.
/usr/include/c++/11/bits/stl_tree.h:611:34: optimized:  Inlining std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_node() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1573 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1540.
/usr/include/c++/11/bits/stl_tree.h:529:32: note: Considering inline candidate std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1540.
/usr/include/c++/11/bits/stl_tree.h:529:32: optimized:  Inlining std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1540 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::operator()(_Arg&&) const [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1501.
/usr/include/c++/11/bits/stl_tree.h:529:32: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1341.
/usr/include/c++/11/bits/stl_tree.h:529:32: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1341 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::operator()(_Arg&&) const [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1501.
/usr/include/c++/11/bits/stl_tree.h:1789:9: note: Considering inline candidate std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1427.
/usr/include/c++/11/bits/stl_tree.h:1789:9: optimized:  Inlining std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1427 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1421.
/usr/include/c++/11/bits/stl_tree.h:1784:29: note: Considering inline candidate std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::operator()(_Arg&&) const [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1501.
/usr/include/c++/11/bits/stl_tree.h:1784:29: optimized:  Inlining std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::operator()(_Arg&&) const [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1501 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1421.
/usr/include/c++/11/bits/stl_tree.h:1784:29: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1341.
/usr/include/c++/11/bits/stl_tree.h:1784:29: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1341 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1421.
/usr/include/c++/11/bits/stl_tree.h:1781:35: note: Considering inline candidate constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1488.
/usr/include/c++/11/bits/stl_tree.h:1781:35: optimized:  Inlining constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1488 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1421.
/usr/include/c++/11/bits/stl_tree.h:1781:35: note: Considering inline candidate const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = int]/1417.
/usr/include/c++/11/bits/stl_tree.h:1781:35: optimized:  Inlining const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = int]/1417 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1421.
/usr/include/c++/11/bits/stl_tree.h:1781:35: note: Considering inline candidate static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1497.
/usr/include/c++/11/bits/stl_tree.h:1781:35: optimized:  Inlining static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1497 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1421.
/usr/include/c++/11/bits/stl_tree.h:1780:49: note: Considering inline candidate std::_Rb_tree_node_base* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_end() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1484.
/usr/include/c++/11/bits/stl_tree.h:1780:49: optimized:  Inlining std::_Rb_tree_node_base* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_end() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1484 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1421.
/usr/include/c++/11/bits/stl_tree.h:2134:14: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_iterator<int>; _T2 = bool]/1424.
/usr/include/c++/11/bits/stl_tree.h:2134:14: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_iterator<int>; _T2 = bool]/1424 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1342.
/usr/include/c++/11/bits/stl_tree.h:2134:19: note: Considering inline candidate std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1427.
/usr/include/c++/11/bits/stl_tree.h:2134:19: optimized:  Inlining std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1427 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1342.
/usr/include/c++/11/bits/stl_tree.h:2129:11: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_iterator<int>; _T2 = bool]/1424.
/usr/include/c++/11/bits/stl_tree.h:2129:11: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_iterator<int>; _T2 = bool]/1424 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1342.
/usr/include/c++/11/bits/stl_tree.h:2129:26: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1421.
/usr/include/c++/11/bits/stl_tree.h:2129:26: missed:   will not early inline: std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1342->std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1421, growth 15 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/stl_tree.h:2129:26: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1341.
/usr/include/c++/11/bits/stl_tree.h:2129:26: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1341 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1342.
/usr/include/c++/11/bits/stl_tree.h:2128:16: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::_Alloc_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1419.
/usr/include/c++/11/bits/stl_tree.h:2128:16: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::_Alloc_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1419 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1342.
/usr/include/c++/11/bits/stl_tree.h:2124:28: note: Considering inline candidate std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416.
/usr/include/c++/11/bits/stl_tree.h:2124:28: missed:   will not early inline: std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1342->std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416, call is cold and code would grow at least by 20
/usr/include/c++/11/bits/stl_tree.h:2124:42: note: Considering inline candidate const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = int]/1417.
/usr/include/c++/11/bits/stl_tree.h:2124:42: optimized:  Inlining const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = int]/1417 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1342.
/usr/include/c++/11/bits/stl_set.h:513:14: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>&; _U2 = bool&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_const_iterator<int>; _T2 = bool]/1346.
/usr/include/c++/11/bits/stl_set.h:513:14: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>&; _U2 = bool&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_const_iterator<int>; _T2 = bool]/1346 into std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Tp>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1247.
/usr/include/c++/11/bits/stl_set.h:512:25: note: Considering inline candidate std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1342.
/usr/include/c++/11/bits/stl_set.h:512:25: missed:   will not early inline: std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Tp>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1247->std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1342, call is cold and code would grow at least by 17
/usr/include/c++/11/tuple:424:65: note: Considering inline candidate static constexpr _Head& std::_Head_base<_Idx, _Head, false>::_M_head(std::_Head_base<_Idx, _Head, false>&) [with long unsigned int _Idx = 0; _Head = const int&]/1612.
/usr/include/c++/11/tuple:424:65: optimized:  Inlining static constexpr _Head& std::_Head_base<_Idx, _Head, false>::_M_head(std::_Head_base<_Idx, _Head, false>&) [with long unsigned int _Idx = 0; _Head = const int&]/1612 into static constexpr _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(std::_Tuple_impl<_Idx, _Head>&) [with long unsigned int _Idx = 0; _Head = const int&]/1613.
/usr/include/c++/11/tuple:1378:56: note: Considering inline candidate static constexpr _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(std::_Tuple_impl<_Idx, _Head>&) [with long unsigned int _Idx = 0; _Head = const int&]/1613.
/usr/include/c++/11/tuple:1378:56: optimized:  Inlining static constexpr _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(std::_Tuple_impl<_Idx, _Head>&) [with long unsigned int _Idx = 0; _Head = const int&]/1613 into constexpr _Head& std::__get_helper(std::_Tuple_impl<_Idx, _Head, _Tail ...>&) [with long unsigned int __i = 0; _Head = const int&; _Tail = {}]/1614.
/usr/include/c++/11/tuple:1394:36: note: Considering inline candidate constexpr _Head& std::__get_helper(std::_Tuple_impl<_Idx, _Head, _Tail ...>&) [with long unsigned int __i = 0; _Head = const int&; _Tail = {}]/1614.
/usr/include/c++/11/tuple:1394:36: optimized:  Inlining constexpr _Head& std::__get_helper(std::_Tuple_impl<_Idx, _Head, _Tail ...>&) [with long unsigned int __i = 0; _Head = const int&; _Tail = {}]/1614 into constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >& std::get(std::tuple<_UTypes ...>&) [with long unsigned int __i = 0; _Elements = {const int&}]/1615.
/usr/include/c++/11/tuple:1819:35: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1341.
/usr/include/c++/11/tuple:1819:35: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1341 into std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {const int&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const int; _T2 = double]/1617.
/usr/include/c++/11/tuple:1819:55: note: Considering inline candidate constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >& std::get(std::tuple<_UTypes ...>&) [with long unsigned int __i = 0; _Elements = {const int&}]/1615.
/usr/include/c++/11/tuple:1819:55: optimized:  Inlining constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >& std::get(std::tuple<_UTypes ...>&) [with long unsigned int __i = 0; _Elements = {const int&}]/1615 into std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {const int&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const int; _T2 = double]/1617.
/usr/include/c++/11/tuple:1809:63: note: Considering inline candidate std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {const int&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const int; _T2 = double]/1617.
/usr/include/c++/11/tuple:1809:63: optimized:  Inlining std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {const int&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const int; _T2 = double]/1617 into std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {const int&}; _Args2 = {}; _T1 = const int; _T2 = double]/1604.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {const int&}; _Args2 = {}; _T1 = const int; _T2 = double]/1604.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {const int&}; _Args2 = {}; _T1 = const int; _T2 = double]/1604 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1593.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate void* operator new(std::size_t, void*)/938.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining void* operator new(std::size_t, void*)/938 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1593.
/usr/include/c++/11/ext/new_allocator.h:162:46: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1447.
/usr/include/c++/11/ext/new_allocator.h:162:46: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1447 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1593.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate constexpr std::tuple<_Elements>::tuple(std::tuple<_Elements>&&) [with _Elements = {const int&}]/1591.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining constexpr std::tuple<_Elements>::tuple(std::tuple<_Elements>&&) [with _Elements = {const int&}]/1591 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1593.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1446.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1446 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1593.
/usr/include/c++/11/ext/new_allocator.h:162:46: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1445.
/usr/include/c++/11/ext/new_allocator.h:162:46: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1445 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1593.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1593.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1593 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1547.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1445.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1445 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1547.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1446.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1446 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1547.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1447.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1447 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1547.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1547.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1547 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1509.
/usr/include/c++/11/bits/hashtable_policy.h:1878:54: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1520.
/usr/include/c++/11/bits/hashtable_policy.h:1878:54: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1520 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1509.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1505.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1505 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1509.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1445.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1445 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1509.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1446.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1446 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1509.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1447.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1447 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1509.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: note: Considering inline candidate std::__detail::_Hash_node<std::pair<const int, double>, false>::_Hash_node()/1507.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: optimized:  Inlining std::__detail::_Hash_node<std::pair<const int, double>, false>::_Hash_node()/1507 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1509.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: note: Considering inline candidate void* operator new(std::size_t, void*)/938.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: optimized:  Inlining void* operator new(std::size_t, void*)/938 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1509.
/usr/include/c++/11/bits/hashtable_policy.h:1874:36: note: Considering inline candidate constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1546.
/usr/include/c++/11/bits/hashtable_policy.h:1874:36: optimized:  Inlining constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1546 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1509.
/usr/include/c++/11/bits/hashtable_policy.h:1873:45: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1545.
/usr/include/c++/11/bits/hashtable_policy.h:1873:45: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1545 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1509.
/usr/include/c++/11/bits/hashtable_policy.h:1873:63: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1520.
/usr/include/c++/11/bits/hashtable_policy.h:1873:63: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1520 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1509.
/usr/include/c++/11/bits/hashtable.h:304:35: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1509.
/usr/include/c++/11/bits/hashtable.h:304:35: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1509 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1449.
/usr/include/c++/11/bits/hashtable.h:304:35: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1445.
/usr/include/c++/11/bits/hashtable.h:304:35: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1445 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1449.
/usr/include/c++/11/bits/hashtable.h:304:35: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1446.
/usr/include/c++/11/bits/hashtable.h:304:35: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1446 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1449.
/usr/include/c++/11/bits/hashtable.h:304:35: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1447.
/usr/include/c++/11/bits/hashtable.h:304:35: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1447 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1449.
/usr/include/c++/11/bits/stl_algobase.h:969:21: note: Considering inline candidate typename __gnu_cxx::__enable_if<std::__is_scalar<_Tp>::__value, void>::__type std::__fill_a1(_ForwardIterator, _ForwardIterator, const _Tp&) [with _ForwardIterator = int*; _Tp = int]/1621.
/usr/include/c++/11/bits/stl_algobase.h:969:21: optimized:  Inlining typename __gnu_cxx::__enable_if<std::__is_scalar<_Tp>::__value, void>::__type std::__fill_a1(_ForwardIterator, _ForwardIterator, const _Tp&) [with _ForwardIterator = int*; _Tp = int]/1621 into void std::__fill_a(_FIte, _FIte, const _Tp&) [with _FIte = int*; _Tp = int]/1607.
/usr/include/c++/11/bits/stl_algobase.h:1120:20: note: Considering inline candidate void std::__fill_a(_FIte, _FIte, const _Tp&) [with _FIte = int*; _Tp = int]/1607.
/usr/include/c++/11/bits/stl_algobase.h:1120:20: optimized:  Inlining void std::__fill_a(_FIte, _FIte, const _Tp&) [with _FIte = int*; _Tp = int]/1607 into _OutputIterator std::__fill_n_a(_OutputIterator, _Size, const _Tp&, std::random_access_iterator_tag) [with _OutputIterator = int*; _Size = long unsigned int; _Tp = int]/1597.
/usr/include/c++/11/bits/stl_algobase.h:1149:29: note: Considering inline candidate _OutputIterator std::__fill_n_a(_OutputIterator, _Size, const _Tp&, std::random_access_iterator_tag) [with _OutputIterator = int*; _Size = long unsigned int; _Tp = int]/1597.
/usr/include/c++/11/bits/stl_algobase.h:1149:29: optimized:  Inlining _OutputIterator std::__fill_n_a(_OutputIterator, _Size, const _Tp&, std::random_access_iterator_tag) [with _OutputIterator = int*; _Size = long unsigned int; _Tp = int]/1597 into _OI std::fill_n(_OI, _Size, const _Tp&) [with _OI = int*; _Size = long unsigned int; _Tp = int]/1571.
/usr/include/c++/11/bits/stl_algobase.h:1149:29: note: Considering inline candidate constexpr long unsigned int std::__size_to_integer(long unsigned int)/212.
/usr/include/c++/11/bits/stl_algobase.h:1149:29: optimized:  Inlining constexpr long unsigned int std::__size_to_integer(long unsigned int)/212 into _OI std::fill_n(_OI, _Size, const _Tp&) [with _OI = int*; _Size = long unsigned int; _Tp = int]/1571.
/usr/include/c++/11/bits/stl_uninitialized.h:603:29: note: Considering inline candidate _OI std::fill_n(_OI, _Size, const _Tp&) [with _OI = int*; _Size = long unsigned int; _Tp = int]/1571.
/usr/include/c++/11/bits/stl_uninitialized.h:603:29: optimized:  Inlining _OI std::fill_n(_OI, _Size, const _Tp&) [with _OI = int*; _Size = long unsigned int; _Tp = int]/1571 into static _ForwardIterator std::__uninitialized_default_n_1<true>::__uninit_default_n(_ForwardIterator, _Size) [with _ForwardIterator = int*; _Size = long unsigned int]/1538.
/usr/include/c++/11/bits/stl_uninitialized.h:601:23: note: Considering inline candidate void std::_Construct(_Tp*, _Args&& ...) [with _Tp = int; _Args = {}]/1569.
/usr/include/c++/11/bits/stl_uninitialized.h:601:23: optimized:  Inlining void std::_Construct(_Tp*, _Args&& ...) [with _Tp = int; _Args = {}]/1569 into static _ForwardIterator std::__uninitialized_default_n_1<true>::__uninit_default_n(_ForwardIterator, _Size) [with _ForwardIterator = int*; _Size = long unsigned int]/1538.
/usr/include/c++/11/bits/stl_uninitialized.h:600:21: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = int]/1537.
/usr/include/c++/11/bits/stl_uninitialized.h:600:21: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = int]/1537 into static _ForwardIterator std::__uninitialized_default_n_1<true>::__uninit_default_n(_ForwardIterator, _Size) [with _ForwardIterator = int*; _Size = long unsigned int]/1538.
/usr/include/c++/11/bits/stl_uninitialized.h:640:20: note: Considering inline candidate static _ForwardIterator std::__uninitialized_default_n_1<true>::__uninit_default_n(_ForwardIterator, _Size) [with _ForwardIterator = int*; _Size = long unsigned int]/1538.
/usr/include/c++/11/bits/stl_uninitialized.h:640:20: optimized:  Inlining static _ForwardIterator std::__uninitialized_default_n_1<true>::__uninit_default_n(_ForwardIterator, _Size) [with _ForwardIterator = int*; _Size = long unsigned int]/1538 into _ForwardIterator std::__uninitialized_default_n(_ForwardIterator, _Size) [with _ForwardIterator = int*; _Size = long unsigned int]/1482.
/usr/include/c++/11/bits/stl_uninitialized.h:704:44: note: Considering inline candidate _ForwardIterator std::__uninitialized_default_n(_ForwardIterator, _Size) [with _ForwardIterator = int*; _Size = long unsigned int]/1482.
/usr/include/c++/11/bits/stl_uninitialized.h:704:44: optimized:  Inlining _ForwardIterator std::__uninitialized_default_n(_ForwardIterator, _Size) [with _ForwardIterator = int*; _Size = long unsigned int]/1482 into _ForwardIterator std::__uninitialized_default_n_a(_ForwardIterator, _Size, std::allocator<_Tp>&) [with _ForwardIterator = int*; _Size = long unsigned int; _Tp = int]/1399.
/usr/include/c++/11/bits/stl_vector.h:1606:36: note: Considering inline candidate _ForwardIterator std::__uninitialized_default_n_a(_ForwardIterator, _Size, std::allocator<_Tp>&) [with _ForwardIterator = int*; _Size = long unsigned int; _Tp = int]/1399.
/usr/include/c++/11/bits/stl_vector.h:1606:36: optimized:  Inlining _ForwardIterator std::__uninitialized_default_n_a(_ForwardIterator, _Size, std::allocator<_Tp>&) [with _ForwardIterator = int*; _Size = long unsigned int; _Tp = int]/1399 into void std::vector<_Tp, _Alloc>::_M_default_initialize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>]/1330.
/usr/include/c++/11/bits/stl_vector.h:1607:28: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = int; _Alloc = std::allocator<int>]/1331.
/usr/include/c++/11/bits/stl_vector.h:1607:28: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = int; _Alloc = std::allocator<int>]/1331 into void std::vector<_Tp, _Alloc>::_M_default_initialize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>]/1330.
/usr/include/c++/11/bits/stl_vector.h:512:30: note: Considering inline candidate void std::vector<_Tp, _Alloc>::_M_default_initialize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>]/1330.
/usr/include/c++/11/bits/stl_vector.h:512:30: optimized:  Inlining void std::vector<_Tp, _Alloc>::_M_default_initialize(std::vector<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>]/1330 into std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1232.
/usr/include/c++/11/bits/stl_vector.h:511:47: note: Considering inline candidate std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1325.
/usr/include/c++/11/bits/stl_vector.h:511:47: optimized:  Inlining std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1325 into std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1232.
/usr/include/c++/11/bits/stl_vector.h:511:47: note: Considering inline candidate static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1320.
/usr/include/c++/11/bits/stl_vector.h:511:47: optimized:  Inlining static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_check_init_len(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1320 into std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1232.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:38:38: note: Considering inline candidate std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Tp>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1247.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:38:38: optimized:  Inlining std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Tp>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1247 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1647.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:38:51: note: Considering inline candidate std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>]/1237.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:38:51: optimized:  Inlining std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>]/1237 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1647.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:41:9: note: Considering inline candidate std::vector<_Tp, _Alloc>::~vector() [with _Tp = int; _Alloc = std::allocator<int>]/1235.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:41:9: optimized:  Inlining std::vector<_Tp, _Alloc>::~vector() [with _Tp = int; _Alloc = std::allocator<int>]/1235 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1647.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:28:53: note: Considering inline candidate std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>]/1237.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:28:53: optimized:  Inlining std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>]/1237 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1647.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:17:17: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = int]/1229.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:17:17: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = int]/1229 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1647.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:19:66: note: Considering inline candidate std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1232.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:19:66: missed:   will not early inline: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1647->std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1232, growth 12 exceeds --param early-inlining-insns divided by number of calls
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:19:66: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = int]/1226.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:19:66: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = int]/1226 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1647.
/usr/include/c++/11/ext/aligned_buffer.h:119:47: note: Considering inline candidate const void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() const [with _Tp = std::pair<const int, double>]/1622.
/usr/include/c++/11/ext/aligned_buffer.h:119:47: optimized:  Inlining const void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() const [with _Tp = std::pair<const int, double>]/1622 into const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = std::pair<const int, double>]/1611.
/usr/include/c++/11/bits/hashtable_policy.h:242:33: note: Considering inline candidate const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = std::pair<const int, double>]/1611.
/usr/include/c++/11/bits/hashtable_policy.h:242:33: optimized:  Inlining const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = std::pair<const int, double>]/1611 into const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = std::pair<const int, double>]/1602.
/usr/include/c++/11/bits/hashtable_policy.h:250:26: note: Considering inline candidate const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = std::pair<const int, double>]/1602.
/usr/include/c++/11/bits/hashtable_policy.h:250:26: optimized:  Inlining const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = std::pair<const int, double>]/1602 into const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const int, double>]/1577.
/usr/include/c++/11/bits/hashtable_policy.h:1617:39: note: Considering inline candidate constexpr bool std::equal_to<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1582.
/usr/include/c++/11/bits/hashtable_policy.h:1617:39: optimized:  Inlining constexpr bool std::equal_to<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1582 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1542.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: note: Considering inline candidate decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const int, double>&]/1581.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: optimized:  Inlining decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const int, double>&]/1581 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1542.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: note: Considering inline candidate const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const int, double>]/1577.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: optimized:  Inlining const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const int, double>]/1577 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1542.
/usr/include/c++/11/bits/hashtable_policy.h:1617:37: note: Considering inline candidate const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_eq() const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1576.
/usr/include/c++/11/bits/hashtable_policy.h:1617:37: optimized:  Inlining const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_eq() const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1576 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1542.
/usr/include/c++/11/bits/hashtable_policy.h:1617:18: note: Considering inline candidate static bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_S_equals(std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_code_cache<false>&) [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1575.
/usr/include/c++/11/bits/hashtable_policy.h:1617:18: optimized:  Inlining static bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_S_equals(std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_code_cache<false>&) [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1575 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1542.
/usr/include/c++/11/bits/hashtable_policy.h:1242:21: note: Considering inline candidate std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/975.
/usr/include/c++/11/bits/hashtable_policy.h:1242:21: optimized:  Inlining std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/975 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1583.
/usr/include/c++/11/bits/hashtable_policy.h:1242:21: note: Considering inline candidate std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1432.
/usr/include/c++/11/bits/hashtable_policy.h:1242:21: optimized:  Inlining std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1432 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1583.
/usr/include/c++/11/bits/hashtable_policy.h:1242:48: note: Considering inline candidate decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const int, double>&]/1581.
/usr/include/c++/11/bits/hashtable_policy.h:1242:48: optimized:  Inlining decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const int, double>&]/1581 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1583.
/usr/include/c++/11/bits/hashtable_policy.h:1242:48: note: Considering inline candidate const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const int, double>]/1577.
/usr/include/c++/11/bits/hashtable_policy.h:1242:48: optimized:  Inlining const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const int, double>]/1577 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1583.
/usr/include/c++/11/bits/hashtable.h:791:49: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1583.
/usr/include/c++/11/bits/hashtable.h:791:49: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1583 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1543.
/usr/include/c++/11/bits/hashtable.h:1838:23: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1468.
/usr/include/c++/11/bits/hashtable.h:1838:23: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1468 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1504.
/usr/include/c++/11/bits/hashtable.h:1843:39: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1543.
/usr/include/c++/11/bits/hashtable.h:1843:39: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1543 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1504.
/usr/include/c++/11/bits/hashtable.h:1843:53: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1468.
/usr/include/c++/11/bits/hashtable.h:1843:53: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1468 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1504.
/usr/include/c++/11/bits/hashtable.h:1840:23: note: Considering inline candidate bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1542.
/usr/include/c++/11/bits/hashtable.h:1840:23: optimized:  Inlining bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1542 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1504.
/usr/include/c++/11/bits/hashtable.h:810:50: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1504.
/usr/include/c++/11/bits/hashtable.h:810:50: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1504 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1434.
/usr/include/c++/11/bits/hashtable.h:1908:32: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1543.
/usr/include/c++/11/bits/hashtable.h:1908:32: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1543 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1512.
/usr/include/c++/11/bits/hashtable.h:1908:49: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1468.
/usr/include/c++/11/bits/hashtable.h:1908:49: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1468 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1512.
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node_base*]/1623.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node_base*]/1623 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/1624.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/1624.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1619->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/1624, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1530.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1530 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1606.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1530.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1530 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1606.
/usr/include/c++/11/bits/hashtable_policy.h:1928:44: note: Considering inline candidate constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node_base*]/1620.
/usr/include/c++/11/bits/hashtable_policy.h:1928:44: optimized:  Inlining constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node_base*]/1620 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1606.
/usr/include/c++/11/bits/hashtable_policy.h:1927:52: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1619.
/usr/include/c++/11/bits/hashtable_policy.h:1927:52: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1619 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1606.
/usr/include/c++/11/bits/hashtable_policy.h:1925:28: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const int, double>, false>; _Tp = std::__detail::_Hash_node_base*]/1527.
/usr/include/c++/11/bits/hashtable_policy.h:1925:28: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const int, double>, false>; _Tp = std::__detail::_Hash_node_base*]/1527 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1606.
/usr/include/c++/11/bits/hashtable_policy.h:1925:53: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1520.
/usr/include/c++/11/bits/hashtable_policy.h:1925:53: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1520 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1606.
/usr/include/c++/11/bits/hashtable.h:440:47: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1606.
/usr/include/c++/11/bits/hashtable.h:440:47: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1595->std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1606, growth 6 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable.h:2409:28: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1313.
/usr/include/c++/11/bits/hashtable.h:2409:28: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1313 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1549.
/usr/include/c++/11/bits/hashtable.h:2390:41: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1583.
/usr/include/c++/11/bits/hashtable.h:2390:41: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1583 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1549.
/usr/include/c++/11/bits/hashtable.h:2388:36: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1468.
/usr/include/c++/11/bits/hashtable.h:2388:36: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1468 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1549.
/usr/include/c++/11/bits/hashtable.h:2383:32: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1387.
/usr/include/c++/11/bits/hashtable.h:2383:32: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1387 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1549.
/usr/include/c++/11/bits/hashtable.h:2382:56: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1595.
/usr/include/c++/11/bits/hashtable.h:2382:56: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1595 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1549.
/usr/include/c++/11/bits/hashtable.h:2367:29: note: Considering inline candidate void std::__detail::_Prime_rehash_policy::_M_reset(std::__detail::_Prime_rehash_policy::_State)/983.
/usr/include/c++/11/bits/hashtable.h:2367:29: optimized:  Inlining void std::__detail::_Prime_rehash_policy::_M_reset(std::__detail::_Prime_rehash_policy::_State)/983 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1510.
/usr/include/c++/11/bits/hashtable.h:2361:17: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1549.
/usr/include/c++/11/bits/hashtable.h:2361:17: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1510->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1549, call is cold and code would grow at least by 33
/usr/include/c++/11/bits/hashtable.h:2030:14: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1514.
/usr/include/c++/11/bits/hashtable.h:2030:14: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1514 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1454.
/usr/include/c++/11/bits/hashtable.h:2028:29: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1512.
/usr/include/c++/11/bits/hashtable.h:2028:29: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1454->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1512, growth 16 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/hashtable.h:2025:26: note: Considering inline candidate void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1511.
/usr/include/c++/11/bits/hashtable.h:2025:26: optimized:  Inlining void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1511 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1454.
/usr/include/c++/11/bits/hashtable.h:2022:27: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1433.
/usr/include/c++/11/bits/hashtable.h:2022:27: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1433 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1454.
/usr/include/c++/11/bits/hashtable.h:2021:13: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1510.
/usr/include/c++/11/bits/hashtable.h:2021:13: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1454->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1510, call is cold and code would grow at least by 17
/usr/include/c++/11/bits/hashtable.h:2014:70: note: Considering inline candidate std::__detail::_Prime_rehash_policy::_State std::__detail::_Prime_rehash_policy::_M_state() const/981.
/usr/include/c++/11/bits/hashtable.h:2014:70: optimized:  Inlining std::__detail::_Prime_rehash_policy::_State std::__detail::_Prime_rehash_policy::_M_state() const/981 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1454.
/usr/include/c++/11/bits/hashtable_policy.h:717:5: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1452.
/usr/include/c++/11/bits/hashtable_policy.h:717:5: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1452 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1354.
/usr/include/c++/11/bits/hashtable_policy.h:717:5: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1452.
/usr/include/c++/11/bits/hashtable_policy.h:717:5: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1452 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1354.
/usr/include/c++/11/bits/hashtable_policy.h:716:14: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::pointer std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator->() const [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1455.
/usr/include/c++/11/bits/hashtable_policy.h:716:14: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::pointer std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator->() const [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1455 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1354.
/usr/include/c++/11/bits/hashtable_policy.h:714:30: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1454.
/usr/include/c++/11/bits/hashtable_policy.h:714:30: missed:   will not early inline: std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1354->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1454, call is cold and code would grow at least by 17
/usr/include/c++/11/bits/hashtable_policy.h:707:42: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1449.
/usr/include/c++/11/bits/hashtable_policy.h:707:42: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1449 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1354.
/usr/include/c++/11/bits/hashtable_policy.h:710:7: note: Considering inline candidate constexpr std::tuple<_Elements>::tuple(const _Elements& ...) [with bool _NotEmpty = true; typename std::enable_if<std::tuple<_Elements>::_TCC<_Dummy>::__is_implicitly_constructible<const _Elements& ...>(), bool>::type <anonymous> = true; _Elements = {const int&}]/1443.
/usr/include/c++/11/bits/hashtable_policy.h:710:7: optimized:  Inlining constexpr std::tuple<_Elements>::tuple(const _Elements& ...) [with bool _NotEmpty = true; typename std::enable_if<std::tuple<_Elements>::_TCC<_Dummy>::__is_implicitly_constructible<const _Elements& ...>(), bool>::type <anonymous> = true; _Elements = {const int&}]/1443 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1354.
/usr/include/c++/11/bits/hashtable_policy.h:705:21: note: Considering inline candidate _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const int, double>]/1435.
/usr/include/c++/11/bits/hashtable_policy.h:705:21: optimized:  Inlining _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const int, double>]/1435 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1354.
/usr/include/c++/11/bits/hashtable_policy.h:704:42: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1434.
/usr/include/c++/11/bits/hashtable_policy.h:704:42: missed:   will not early inline: std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1354->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1434, growth 15 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/hashtable_policy.h:703:47: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1433.
/usr/include/c++/11/bits/hashtable_policy.h:703:47: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1433 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1354.
/usr/include/c++/11/bits/hashtable_policy.h:702:45: note: Considering inline candidate std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1432.
/usr/include/c++/11/bits/hashtable_policy.h:702:45: optimized:  Inlining std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1432 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1354.
/usr/include/c++/11/bits/unordered_map.h:980:20: note: Considering inline candidate std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1354.
/usr/include/c++/11/bits/unordered_map.h:980:20: missed:   will not early inline: std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](const key_type&) [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1249->std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1354, call is cold and code would grow at least by 26
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:54:42: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](const key_type&) [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1249.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:54:42: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](const key_type&) [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1249 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.1/1648.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:52:53: note: Considering inline candidate constexpr typename __gnu_cxx::__enable_if<std::__is_integer<_Tp>::__value, double>::__type std::sin(_Tp) [with _Tp = int]/1248.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:52:53: optimized:  Inlining constexpr typename __gnu_cxx::__enable_if<std::__is_integer<_Tp>::__value, double>::__type std::sin(_Tp) [with _Tp = int]/1248 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.1/1648.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_erase.isra/1757 -> void operator delete(void*, std::size_t)/1667, function body not available
/usr/include/c++/11/bits/stl_tree.h:1786:31: missed:   not inlinable: _M_insert_.isra/1756 -> void std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)/1672, function body not available
/usr/include/c++/11/bits/hashtable.h:434:22: missed:   not inlinable: _M_rehash_aux.isra/1754 -> long int __builtin_expect(long int, long int)/1663, function body not available
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: _M_rehash_aux.isra/1754 -> long int __builtin_expect(long int, long int)/1663, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_rehash_aux.isra/1754 -> void operator delete(void*, std::size_t)/1667, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.isra/1753 -> long int __builtin_expect(long int, long int)/1663, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.isra/1753 -> void std::__throw_bad_array_new_length()/1664, function body not available
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.isra/1753 -> void std::__throw_bad_alloc()/1665, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.isra/1753 -> void* operator new(std::size_t)/1666, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.isra/1752 -> long int __builtin_expect(long int, long int)/1663, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.isra/1752 -> void std::__throw_bad_array_new_length()/1664, function body not available
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.isra/1752 -> void std::__throw_bad_alloc()/1665, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.isra/1752 -> void* operator new(std::size_t)/1666, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:1929:23: missed:   not inlinable: _M_allocate_buckets.isra/1751 -> void* __builtin_memset(void*, int, long unsigned int)/1669, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.isra/1750 -> long int __builtin_expect(long int, long int)/1663, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.isra/1750 -> void std::__throw_bad_array_new_length()/1664, function body not available
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.isra/1750 -> void std::__throw_bad_alloc()/1665, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.isra/1750 -> void* operator new(std::size_t)/1666, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.constprop/1748 -> long int __builtin_expect(long int, long int)/1663, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.constprop/1748 -> void __builtin_unreachable()/1749, unreachable
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.constprop/1748 -> void std::__throw_bad_alloc()/1665, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.constprop/1748 -> void* operator new(std::size_t)/1666, function body not available
missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.1/1648 -> void __builtin_GOMP_barrier()/1652, function body not available
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:53:55: missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.1/1648 -> double sqrt(double)/1656, function body not available
/usr/include/c++/11/cmath:438:27: missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.1/1648 -> double __builtin_sin(double)/1658, function body not available
missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.1/1648 -> int __builtin_omp_get_thread_num()/1651, function body not available
missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.1/1648 -> int __builtin_omp_get_num_threads()/1650, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1647 -> void operator delete(void*, std::size_t)/1667, function body not available
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:35:21: missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1647 -> void __builtin_GOMP_critical_name_end(void**)/1654, function body not available
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:35:21: missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1647 -> void __builtin_GOMP_critical_name_start(void**)/1653, function body not available
missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1647 -> void __builtin_GOMP_barrier()/1652, function body not available
missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1647 -> int __builtin_omp_get_thread_num()/1651, function body not available
missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1647 -> int __builtin_omp_get_num_threads()/1650, function body not available
/usr/include/c++/11/bits/hashtable.h:2363:7: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1510 -> void __cxa_end_catch()/1662, function body not available
/usr/include/c++/11/bits/hashtable.h:2368:4: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1510 -> void __cxa_rethrow()/1661, function body not available
/usr/include/c++/11/bits/hashtable.h:2363:7: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1510 -> void* __cxa_begin_catch(void*)/1660, function body not available
/usr/include/c++/11/bits/hashtable.h:2363:7: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1510 -> void* __builtin_eh_pointer(int)/1659, function body not available
/usr/include/c++/11/bits/hashtable.h:2016:35: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1454 -> std::pair<bool, long unsigned int> std::__detail::_Prime_rehash_policy::_M_need_rehash(std::size_t, std::size_t, std::size_t) const/1668, function body not available
/usr/include/c++/11/bits/stl_tree.h:302:30: missed:   not inlinable: std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416 -> std::_Rb_tree_node_base* std::_Rb_tree_decrement(std::_Rb_tree_node_base*)/1671, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1354 -> void operator delete(void*, std::size_t)/1667, function body not available
/usr/include/c++/11/bits/hashtable.h:2321:23: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1312 -> void* __builtin_memset(void*, int, long unsigned int)/1669, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1312 -> void operator delete(void*, std::size_t)/1667, function body not available
/usr/include/c++/11/bits/stl_vector.h:1770:24: missed:   not inlinable: std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1232 -> void std::__throw_length_error(const char*)/1670, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223 -> void operator delete(void*, std::size_t)/1667, function body not available
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223 -> long int __builtin_expect(long int, long int)/1663, function body not available
missed:   not inlinable: unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 -> void __builtin_GOMP_parallel(void (*)(void*), void*, unsigned int, unsigned int)/1657, function body not available
missed:   not inlinable: unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 -> void __builtin_GOMP_parallel(void (*)(void*), void*, unsigned int, unsigned int)/1657, function body not available
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.constprop/1748 into _M_insert_.isra/1756 which now has time 37.740000 and size 27, net change of -8.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.isra/1752 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1354 which now has time 36.629890 and size 35, net change of -14.
/usr/include/c++/11/bits/unordered_map.h:980:20: optimized:  Inlined std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1354 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.1/1648 which now has time 192053.405029 and size 87, net change of -8.
/usr/include/c++/11/bits/hashtable_policy.h:704:42: optimized:  Inlined _M_find_node.isra/1755 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1354 which now has time 254772.473145 and size 35, net change of -11.
/usr/include/c++/11/bits/hashtable_policy.h:714:30: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1454 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1354 which now has time 266767.604004 and size 35, net change of -13.
/usr/include/c++/11/bits/hashtable.h:2028:29: optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1512 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1454 which now has time 266555.690918 and size 31, net change of -10.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.isra/1750 into _M_allocate_buckets.isra/1751 which now has time 30.900000 and size 18, net change of -8.
/usr/include/c++/11/bits/hashtable.h:2021:13: optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1510 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1454 which now has time 266555.690918 and size 31, net change of -8.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.isra/1753 into void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = int; _Alloc = std::allocator<int>]/1397 which now has time 17.145830 and size 20, net change of -8.
/usr/include/c++/11/bits/hashtable.h:2361:17: optimized:  Inlined _M_rehash_aux.isra/1754 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1510 which now has time 296396.688965 and size 25, net change of -12.
/usr/include/c++/11/bits/hashtable.h:440:47: optimized:  Inlined _M_allocate_buckets.isra/1751 into _M_rehash_aux.isra/1754 which now has time 298378.308594 and size 46, net change of -7.
optimized:  Inlined static _ForwardIterator std::__uninitialized_default_n_1<true>::__uninit_default_n(_ForwardIterator, _Size) [with _ForwardIterator = int*; _Size = long unsigned int]/1735 into std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1232 which now has time 37.240300 and size 28, net change of -7.
/usr/include/c++/11/bits/stl_vector.h:305:26: optimized:  Inlined void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = int; _Alloc = std::allocator<int>]/1397 into std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1232 which now has time 38.885472 and size 40, net change of -8.
/usr/include/c++/11/bits/stl_set.h:512:25: optimized:  Inlined std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1342 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1647 which now has time 35801.545105 and size 89, net change of -7.
/usr/include/c++/11/bits/stl_tree.h:2124:28: optimized:  Inlined std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1416 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1342 which now has time 36308.091309 and size 24, net change of -9.
/usr/include/c++/11/bits/hashtable.h:1532:12: optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1312 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223 which now has time 157.563637 and size 25, net change of -7.
/usr/include/c++/11/bits/stl_tree.h:2129:26: optimized:  Inlined _M_insert_.isra/1756 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1342 which now has time 36381.766602 and size 24, net change of -13.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:19:66: optimized:  Inlined std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = int; _Alloc = std::allocator<int>]/1232 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1647 which now has time 36403.153870 and size 156, net change of -9.
/usr/include/c++/11/bits/unordered_map.h:102:11: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 which now has time 202.063637 and size 60, net change of -6.
/usr/include/c++/11/bits/stl_tree.h:984:17: optimized:  Inlined _M_erase.isra/1758 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 which now has time 222.554547 and size 67, net change of +7.
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed:    not inlining recursively: frequency of recursive call is too large
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed:    not inlining recursively: --param max-inline-recursive-depth exceeded.
/usr/include/c++/11/bits/stl_tree.h:1889:12: note: 
   Inlined 8 times, body grown from size 13 to 69, time 34.490909 to 139.523112
/usr/include/c++/11/bits/stl_tree.h:1889:12: optimized:  Inlined _M_erase.isra/1760 into _M_erase.isra/1757 which now has time 139.523112 and size 69, net change of +56.
Unit growth for small function inlining: 599->489 (-19%)

Inlined 314 calls, eliminated 231 functions

/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:53:55: missed: statement clobbers memory: _101 = sqrt (_41);
/usr/include/c++/11/bits/hashtable_policy.h:283:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2391:22: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:44: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:21: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:37: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2393:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2395:29: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2396:17: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2397:31: missed: failed: evolution of base is not affine.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:48:37: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:48:37: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:51:52: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:51:52: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:51:65: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:51:65: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:51:78: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:51:78: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/usr/include/c++/11/bits/hashtable.h:2386:14: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable.h:2386:14: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable_policy.h:1617:29: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1617:29: missed: not vectorized: control flow in loop.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:44:17: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/hashtable.h:1843:14: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:283:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2391:22: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:44: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:21: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:37: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2393:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2395:29: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2396:17: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2397:31: missed: failed: evolution of base is not affine.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:44:17: missed: splitting region at control altering definition __do_rehash = std::__detail::_Prime_rehash_policy::_M_need_rehash (_83, _85, _84, 1);
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:53:55: missed: statement clobbers memory: _101 = sqrt (_41);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _97 = operator new (24);
/usr/include/c++/11/bits/hashtable.h:2016:35: missed: not vectorized: statement can throw an exception: __do_rehash = std::__detail::_Prime_rehash_policy::_M_need_rehash (_83, _85, _84, 1);
/usr/include/c++/11/bits/hashtable.h:2016:35: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/bits/hashtable.h:2016:35: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
/usr/include/c++/11/bits/hashtable.h:2016:35: missed: splitting region at dominance boundary bb23
/usr/include/c++/11/bits/hashtable.h:2016:35: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable.h:2016:35: missed: splitting region at control altering definition _138 = operator new (_137);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: not vectorized: statement can throw an exception: _138 = operator new (_137);
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Analysis failed with vector mode V16QI
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V16QI
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: splitting region at dominance boundary bb33
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: splitting region at dominance boundary bb27
/usr/include/c++/11/bits/hashtable_policy.h:1929:23: missed: statement clobbers memory: __builtin_memset (_138, 0, _137);
/usr/include/c++/11/bits/hashtable.h:437:14: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable.h:437:14: missed: splitting region at dominance boundary bb44
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: not vectorized: statement can throw an exception: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: not vectorized: statement can throw an exception: std::__throw_bad_array_new_length ();
/usr/include/c++/11/ext/new_allocator.h:116:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: splitting region at dominance boundary bb56
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: statement clobbers memory: _98 = __builtin_eh_pointer (5);
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: statement clobbers memory: __cxa_begin_catch (_98);
/usr/include/c++/11/bits/hashtable.h:2368:4: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: statement clobbers memory: __cxa_end_catch ();
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:44:17: missed: not vectorized: statement can throw an exception: resx 4
/usr/include/c++/11/bits/hashtable.h:2363:7: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:2363:7: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: splitting region at dominance boundary bb25
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_265, 24);
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: splitting region at dominance boundary bb34
/usr/include/c++/11/bits/hashtable.h:437:14: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:437:14: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:437:14: missed: splitting region at dominance boundary bb48
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_124, _129);
/usr/include/c++/11/bits/hashtable.h:1890:21: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:1890:21: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:1890:21: missed: splitting region at dominance boundary bb54
/usr/include/c++/11/bits/hashtable_policy.h:716:21: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable_policy.h:716:21: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable_policy.h:716:21: missed: splitting region at loop 4 exit at bb11
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:50:45: note: ***** Analysis failed with vector mode V2DF
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:50:45: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DF
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:50:45: missed: splitting region at loop 3 exit at bb9
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:49:41: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:49:41: missed: splitting region at dominance boundary bb7
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:48:37: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:48:37: missed: splitting region at dominance boundary bb57
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:48:37: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:48:37: missed: splitting region at dominance boundary bb62
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:44:17: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:48:37: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:48:37: missed: splitting region at dominance boundary bb10
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:48:37: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:48:37: missed: splitting region at dominance boundary bb63
/usr/include/c++/11/cmath:438:27: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/cmath:438:27: missed: splitting region at dominance boundary bb12
/usr/include/c++/11/cmath:438:27: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/cmath:438:27: missed: splitting region at dominance boundary bb64
/usr/include/c++/11/cmath:438:27: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/cmath:438:27: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_algobase.h:923:22: optimized: Loop 6 distributed: split to 0 loops and 1 library calls.
/usr/include/c++/11/bits/stl_function.h:400:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:788:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:780:52: missed: failed: evolution of base is not affine.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:37:35: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:37:35: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/usr/include/c++/11/bits/stl_tree.h:2068:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:2068:18: missed: not vectorized: number of iterations cannot be computed.
/usr/include/c++/11/bits/stl_tree.h:2068:18: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/bits/stl_tree.h:2068:18: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:24:37: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:24:37: missed: not vectorized: multiple nested loops.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:24:37: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:24:37: missed: not vectorized: multiple nested loops.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:25:41: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:28:55: missed: failed: evolution of base is not affine.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:26:45: optimized: loop vectorized using 16 byte vectors
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:17:17: note: vectorized 1 loops in function.
/usr/include/c++/11/bits/stl_function.h:400:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:788:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:780:52: missed: failed: evolution of base is not affine.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:26:45: optimized: loop with 2 iterations completely unrolled (header execution count 68514650)
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _88 = operator new (_80);
/usr/include/c++/11/bits/stl_algobase.h:924:11: missed: statement clobbers memory: __builtin_memset (__first_89, 0, _66);
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:17:17: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:35:21: missed: statement clobbers memory: __builtin_GOMP_critical_name_start (&.gomp_critical_user_TWO_ELECTRON_SLATER);
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:17:17: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:35:21: missed: statement clobbers memory: __builtin_GOMP_critical_name_start (&.gomp_critical_user_TWO_ELECTRON_SLATER);
/usr/include/c++/11/bits/stl_tree.h:302:30: missed: statement clobbers memory: _110 = std::_Rb_tree_decrement (__y_159);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _136 = operator new (40);
/usr/include/c++/11/bits/stl_tree.h:1786:31: missed: statement clobbers memory: std::_Rb_tree_insert_and_rebalance (prephitmp_91, _136, SR.379_177, _100);
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:35:21: missed: statement clobbers memory: __builtin_GOMP_critical_name_end (&.gomp_critical_user_TWO_ELECTRON_SLATER);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (iftmp.26_157, _64);
/usr/include/c++/11/bits/stl_vector.h:1770:24: missed: statement clobbers memory: std::__throw_length_error ("cannot create std::vector larger than max_size()");
/usr/include/c++/11/bits/stl_vector.h:1770:24: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/bits/stl_vector.h:1770:24: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: number of iterations cannot be computed.
/usr/include/c++/11/bits/stl_tree.h:1883:5: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/stl_tree.h:788:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed: statement clobbers memory: std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase.isra (_40);
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed: statement clobbers memory: std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase.isra (_40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_86, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_85, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_84, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_83, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_82, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_81, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_80, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_79, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_76, 40);
/usr/include/c++/11/bits/stl_tree.h:1894:5: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_tree.h:1894:5: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:11:14: missed: statement clobbers memory: __builtin_GOMP_parallel (_Z29CalculateTwoElectronIntegralsbi._omp_fn.0, &.omp_data_o.8, 0, 0);
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: number of iterations cannot be computed.
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: not vectorized: number of iterations cannot be computed.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:11:14: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/stl_tree.h:788:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed: statement clobbers memory: std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase.isra (_43);
/usr/include/c++/11/bits/hashtable_policy.h:283:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1904:7: missed: failed: evolution of base is not affine.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_44, 24);
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:11:14: missed: statement clobbers memory: __builtin_GOMP_parallel (_Z29CalculateTwoElectronIntegralsbi._omp_fn.1, &.omp_data_o.10, 0, 0);
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:11:14: missed: statement clobbers memory: __builtin_GOMP_parallel (_Z29CalculateTwoElectronIntegralsbi._omp_fn.0, &.omp_data_o.8, 0, 0);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_44, 24);
/usr/include/c++/11/bits/hashtable.h:2321:23: missed: statement clobbers memory: __builtin_memset (_58, 0, _57);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_47, _52);
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed: statement clobbers memory: std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase.isra (_43);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_2, 40);
/usr/include/c++/11/bits/stl_tree.h:208:27: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/bits/stl_tree.h:208:27: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_tree.h:208:27: note: ***** Re-trying analysis with vector mode V8QI
/usr/include/c++/11/bits/stl_tree.h:208:27: note: ***** Analysis failed with vector mode V8QI
/usr/include/c++/11/bits/basic_string.h:2321:23: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605.
/usr/include/c++/11/bits/basic_string.h:2321:23: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605 into const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1356.
/usr/include/c++/11/bits/basic_string.h:340:39: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450.
/usr/include/c++/11/bits/basic_string.h:340:39: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_limit(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1736.
/usr/include/c++/11/bits/basic_string.h:339:44: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450.
/usr/include/c++/11/bits/basic_string.h:339:44: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_limit(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1736.
/usr/include/c++/11/bits/basic_string.h:321:28: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450.
/usr/include/c++/11/bits/basic_string.h:321:28: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1687.
/usr/include/c++/11/bits/basic_string.h:320:24: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450.
/usr/include/c++/11/bits/basic_string.h:320:24: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1687.
/usr/include/c++/11/bits/basic_string.h:225:21: note: Considering inline candidate static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/854.
/usr/include/c++/11/bits/basic_string.h:225:21: optimized:  Inlining static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/854 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1626.
/usr/include/c++/11/bits/basic_string.h:225:29: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605.
/usr/include/c++/11/bits/basic_string.h:225:29: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1626.
/usr/include/c++/11/bits/basic_string.h:224:11: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1625.
/usr/include/c++/11/bits/basic_string.h:224:11: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1625 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1626.
/usr/include/c++/11/bits/char_traits.h:171:17: note: Considering inline candidate static constexpr bool __gnu_cxx::char_traits<_CharT>::eq(const char_type&, const char_type&) [with _CharT = char]/860.
/usr/include/c++/11/bits/char_traits.h:171:17: optimized:  Inlining static constexpr bool __gnu_cxx::char_traits<_CharT>::eq(const char_type&, const char_type&) [with _CharT = char]/860 into static constexpr std::size_t __gnu_cxx::char_traits<_CharT>::length(const char_type*) [with _CharT = char]/861.
/usr/include/c++/11/bits/char_traits.h:396:25: optimized:   Inlining constexpr bool std::__constant_string_p(const _CharT*) [with _CharT = char]/859 into static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862 (always_inline).
/usr/include/c++/11/bits/char_traits.h:397:52: note: Considering inline candidate static constexpr std::size_t __gnu_cxx::char_traits<_CharT>::length(const char_type*) [with _CharT = char]/861.
/usr/include/c++/11/bits/char_traits.h:397:52: optimized:  Inlining static constexpr std::size_t __gnu_cxx::char_traits<_CharT>::length(const char_type*) [with _CharT = char]/861 into static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862.
/usr/include/c++/11/bits/basic_string.h:1459:19: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450.
/usr/include/c++/11/bits/basic_string.h:1459:19: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1686.
/usr/include/c++/11/bits/basic_string.h:1459:19: note: Considering inline candidate static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862.
/usr/include/c++/11/bits/basic_string.h:1459:19: optimized:  Inlining static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1686.
/usr/include/c++/11/bits/basic_string.h:690:28: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1686.
/usr/include/c++/11/bits/basic_string.h:690:28: missed:   will not early inline: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1595->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1686, growth 7 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/basic_string.h:2494:20: note: Considering inline candidate static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862.
/usr/include/c++/11/bits/basic_string.h:2494:20: optimized:  Inlining static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1596.
/usr/include/c++/11/bits/basic_string.h:359:21: note: Considering inline candidate static std::char_traits<char>::char_type* std::char_traits<char>::copy(std::char_traits<char>::char_type*, const char_type*, std::size_t)/866.
/usr/include/c++/11/bits/basic_string.h:359:21: optimized:  Inlining static std::char_traits<char>::char_type* std::char_traits<char>::copy(std::char_traits<char>::char_type*, const char_type*, std::size_t)/866 into static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1779.
/usr/include/c++/11/bits/basic_string.h:357:23: note: Considering inline candidate static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/854.
/usr/include/c++/11/bits/basic_string.h:357:23: optimized:  Inlining static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/854 into static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1779.
/usr/include/c++/11/bits/basic_string.h:406:16: note: Considering inline candidate static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1779.
/usr/include/c++/11/bits/basic_string.h:406:16: optimized:  Inlining static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1779 into static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1735.
/usr/include/c++/11/bits/basic_ios.h:158:20: note: Considering inline candidate constexpr std::_Ios_Iostate std::operator|(std::_Ios_Iostate, std::_Ios_Iostate)/1225.
/usr/include/c++/11/bits/basic_ios.h:158:20: optimized:  Inlining constexpr std::_Ios_Iostate std::operator|(std::_Ios_Iostate, std::_Ios_Iostate)/1225 into void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/1691.
/usr/include/c++/11/bits/basic_ios.h:158:20: note: Considering inline candidate std::ios_base::iostate std::basic_ios<_CharT, _Traits>::rdstate() const [with _CharT = char; _Traits = std::char_traits<char>]/1737.
/usr/include/c++/11/bits/basic_ios.h:158:20: optimized:  Inlining std::ios_base::iostate std::basic_ios<_CharT, _Traits>::rdstate() const [with _CharT = char; _Traits = std::char_traits<char>]/1737 into void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/1691.
/usr/include/c++/11/ostream:617:44: note: Considering inline candidate static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862.
/usr/include/c++/11/ostream:617:44: optimized:  Inlining static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862 into std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600.
/usr/include/c++/11/ostream:614:16: note: Considering inline candidate void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/1691.
/usr/include/c++/11/ostream:614:16: optimized:  Inlining void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/1691 into std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600.
/usr/include/c++/11/chrono:666:9: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::duration(const _Rep2&) [with _Rep2 = long int; <template-parameter-2-2> = void; _Rep = long int; _Period = std::ratio<1, 1000000000>]/688.
/usr/include/c++/11/chrono:666:9: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::duration(const _Rep2&) [with _Rep2 = long int; <template-parameter-2-2> = void; _Rep = long int; _Period = std::ratio<1, 1000000000>]/688 into constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1308.
/usr/include/c++/11/chrono:666:53: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/680.
/usr/include/c++/11/chrono:666:53: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/680 into constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1308.
/usr/include/c++/11/chrono:666:31: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/680.
/usr/include/c++/11/chrono:666:31: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/680 into constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1308.
/usr/include/c++/11/chrono:1044:41: note: Considering inline candidate constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1308.
/usr/include/c++/11/chrono:1044:41: optimized:  Inlining constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1308 into constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1309.
/usr/include/c++/11/chrono:1044:38: note: Considering inline candidate constexpr std::chrono::time_point<_Clock, _Dur>::duration std::chrono::time_point<_Clock, _Dur>::time_since_epoch() const [with _Clock = std::chrono::_V2::system_clock; _Dur = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/699.
/usr/include/c++/11/chrono:1044:38: optimized:  Inlining constexpr std::chrono::time_point<_Clock, _Dur>::duration std::chrono::time_point<_Clock, _Dur>::time_since_epoch() const [with _Clock = std::chrono::_V2::system_clock; _Dur = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/699 into constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1309.
/usr/include/c++/11/chrono:1044:65: note: Considering inline candidate constexpr std::chrono::time_point<_Clock, _Dur>::duration std::chrono::time_point<_Clock, _Dur>::time_since_epoch() const [with _Clock = std::chrono::_V2::system_clock; _Dur = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/699.
/usr/include/c++/11/chrono:1044:65: optimized:  Inlining constexpr std::chrono::time_point<_Clock, _Dur>::duration std::chrono::time_point<_Clock, _Dur>::time_since_epoch() const [with _Clock = std::chrono::_V2::system_clock; _Dur = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/699 into constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1309.
/usr/include/c++/11/ext/string_conversions.h:94:5: note: Considering inline candidate __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1361.
/usr/include/c++/11/ext/string_conversions.h:94:5: optimized:  Inlining __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1361 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365.
/usr/include/c++/11/ext/string_conversions.h:94:5: note: Considering inline candidate __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1361.
/usr/include/c++/11/ext/string_conversions.h:94:5: optimized:  Inlining __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1361 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365.
/usr/include/c++/11/ext/string_conversions.h:85:25: note: Considering inline candidate static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1364.
/usr/include/c++/11/ext/string_conversions.h:85:25: optimized:  Inlining static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1364 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365.
/usr/include/c++/11/ext/string_conversions.h:66:15: note: Considering inline candidate __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1358.
/usr/include/c++/11/ext/string_conversions.h:66:15: optimized:  Inlining __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1358 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365.
/usr/include/c++/11/bits/basic_string.h:6620:40: note: Considering inline candidate _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365.
/usr/include/c++/11/bits/basic_string.h:6620:40: missed:   will not early inline: int std::__cxx11::stoi(const string&, std::size_t*, int)/1086->_Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365, call is cold and code would grow at least by 26
/usr/include/c++/11/bits/basic_string.h:6620:40: note: Considering inline candidate const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1356.
/usr/include/c++/11/bits/basic_string.h:6620:40: optimized:  Inlining const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1356 into int std::__cxx11::stoi(const string&, std::size_t*, int)/1086.
/usr/include/c++/11/chrono:226:13: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::duration(const _Rep2&) [with _Rep2 = long int; <template-parameter-2-2> = void; _Rep = long int; _Period = std::ratio<1, 1000>]/1603.
/usr/include/c++/11/chrono:226:13: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::duration(const _Rep2&) [with _Rep2 = long int; <template-parameter-2-2> = void; _Rep = long int; _Period = std::ratio<1, 1000>]/1603 into static constexpr _ToDur std::chrono::__duration_cast_impl<_ToDur, _CF, _CR, true, false>::__cast(const std::chrono::duration<_Rep, _Period>&) [with _Rep = long int; _Period = std::ratio<1, 1000000000>; _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _CF = std::ratio<1, 1000000>; _CR = long int]/1306.
/usr/include/c++/11/chrono:227:34: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/680.
/usr/include/c++/11/chrono:227:34: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/680 into static constexpr _ToDur std::chrono::__duration_cast_impl<_ToDur, _CF, _CR, true, false>::__cast(const std::chrono::duration<_Rep, _Period>&) [with _Rep = long int; _Period = std::ratio<1, 1000000000>; _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _CF = std::ratio<1, 1000000>; _CR = long int]/1306.
/usr/include/c++/11/chrono:276:21: note: Considering inline candidate static constexpr _ToDur std::chrono::__duration_cast_impl<_ToDur, _CF, _CR, true, false>::__cast(const std::chrono::duration<_Rep, _Period>&) [with _Rep = long int; _Period = std::ratio<1, 1000000000>; _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _CF = std::ratio<1, 1000000>; _CR = long int]/1306.
/usr/include/c++/11/chrono:276:21: optimized:  Inlining static constexpr _ToDur std::chrono::__duration_cast_impl<_ToDur, _CF, _CR, true, false>::__cast(const std::chrono::duration<_Rep, _Period>&) [with _Rep = long int; _Period = std::ratio<1, 1000000000>; _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _CF = std::ratio<1, 1000000>; _CR = long int]/1306 into constexpr std::chrono::__enable_if_is_duration<_ToDur> std::chrono::duration_cast(const std::chrono::duration<_Rep, _Period>&) [with _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _Rep = long int; _Period = std::ratio<1, 1000000000>]/1307.
/usr/include/c++/11/bits/allocator.h:156:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = char]/1607.
/usr/include/c++/11/bits/allocator.h:156:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = char]/1607 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = char]/1610.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = char]/1610 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
/usr/include/c++/11/bits/basic_string.h:158:14: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
/usr/include/c++/11/bits/basic_string.h:158:14: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433 into std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:141:29: note: Considering inline candidate constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const char*]/1683.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:141:29: optimized:  Inlining constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const char*]/1683 into constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char*]/1684.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = char]/1692.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = char]/1692 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = char]/1693.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = char]/1693.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = char]/1693 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = char]/1694.
/usr/include/c++/11/bits/basic_string.h:201:49: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = char]/1694.
/usr/include/c++/11/bits/basic_string.h:201:49: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = char]/1694 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1612.
/usr/include/c++/11/bits/basic_string.tcc:232:15: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1626.
/usr/include/c++/11/bits/basic_string.tcc:232:15: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1626 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.tcc:225:25: note: Considering inline candidate static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1735.
/usr/include/c++/11/bits/basic_string.tcc:225:25: optimized:  Inlining static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1735 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.tcc:225:25: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605.
/usr/include/c++/11/bits/basic_string.tcc:225:25: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.tcc:220:17: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1624.
/usr/include/c++/11/bits/basic_string.tcc:220:17: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1624 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1623.
/usr/include/c++/11/bits/basic_string.tcc:219:13: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1623 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.tcc:215:57: note: Considering inline candidate constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char*]/1684.
/usr/include/c++/11/bits/basic_string.tcc:215:57: optimized:  Inlining constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char*]/1684 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.tcc:211:34: note: Considering inline candidate bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = const char]/1734.
/usr/include/c++/11/bits/basic_string.tcc:211:34: optimized:  Inlining bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = const char]/1734 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.h:255:23: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.h:255:23: missed:   will not early inline: void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1704->void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685, growth 24 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/basic_string.h:274:20: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1704.
/usr/include/c++/11/bits/basic_string.h:274:20: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1704 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1637.
/usr/include/c++/11/bits/allocator.h:160:34: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = char]/1739.
/usr/include/c++/11/bits/allocator.h:160:34: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = char]/1739 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1696.
/usr/include/c++/11/bits/basic_string.h:165:35: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1696.
/usr/include/c++/11/bits/basic_string.h:165:35: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1696 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1614.
/usr/include/c++/11/bits/basic_string.h:540:7: note: Considering inline candidate std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436.
/usr/include/c++/11/bits/basic_string.h:540:7: optimized:  Inlining std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592.
/usr/include/c++/11/bits/basic_string.h:539:14: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.h:539:14: missed:   will not early inline: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592->void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685, growth 24 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/basic_string.h:536:55: note: Considering inline candidate static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862.
/usr/include/c++/11/bits/basic_string.h:536:55: optimized:  Inlining static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592.
/usr/include/c++/11/bits/basic_string.h:534:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1614.
/usr/include/c++/11/bits/basic_string.h:534:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1614 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592.
/usr/include/c++/11/bits/basic_string.h:534:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1612.
/usr/include/c++/11/bits/basic_string.h:534:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1612 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592.
/usr/include/c++/11/bits/basic_string.h:168:46: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1696.
/usr/include/c++/11/bits/basic_string.h:168:46: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1696 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1620.
/usr/include/c++/11/bits/basic_string.h:168:28: note: Considering inline candidate constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<char>&]/1618.
/usr/include/c++/11/bits/basic_string.h:168:28: optimized:  Inlining constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<char>&]/1618 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1620.
/usr/include/c++/11/bits/basic_string.h:491:7: note: Considering inline candidate std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436.
/usr/include/c++/11/bits/basic_string.h:491:7: optimized:  Inlining std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:490:14: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1637.
/usr/include/c++/11/bits/basic_string.h:490:14: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1637 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:490:48: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_limit(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1736.
/usr/include/c++/11/bits/basic_string.h:490:48: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_limit(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1736 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:489:20: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1687.
/usr/include/c++/11/bits/basic_string.h:489:20: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1687 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:488:39: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605.
/usr/include/c++/11/bits/basic_string.h:488:39: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:486:9: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
/usr/include/c++/11/bits/basic_string.h:486:9: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:486:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1620.
/usr/include/c++/11/bits/basic_string.h:486:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1620 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:486:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1612.
/usr/include/c++/11/bits/basic_string.h:486:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1612 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:486:9: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430.
/usr/include/c++/11/bits/basic_string.h:486:9: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:2856:52: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:2856:52: missed:   will not early inline: std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689, growth 13 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/basic_string.h:2856:52: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1687.
/usr/include/c++/11/bits/basic_string.h:2856:52: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1687 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = const char]/1742.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = const char]/1742 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = const char]/1743.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = const char]/1743.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = const char]/1743 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const char]/1744.
/usr/include/c++/11/bits/basic_string.h:211:55: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const char]/1744.
/usr/include/c++/11/bits/basic_string.h:211:55: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const char]/1744 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1699.
/usr/include/c++/11/bits/basic_string.h:230:42: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1699.
/usr/include/c++/11/bits/basic_string.h:230:42: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1699 into bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1622.
/usr/include/c++/11/bits/basic_string.h:230:23: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605.
/usr/include/c++/11/bits/basic_string.h:230:23: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605 into bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1622.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = char]/1780.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = char]/1780 into static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = char]/1741.
/usr/include/c++/11/bits/basic_string.h:245:34: note: Considering inline candidate static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = char]/1741.
/usr/include/c++/11/bits/basic_string.h:245:34: optimized:  Inlining static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = char]/1741 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1698.
/usr/include/c++/11/bits/basic_string.h:245:51: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1617.
/usr/include/c++/11/bits/basic_string.h:245:51: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1617 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1698.
/usr/include/c++/11/bits/basic_string.h:245:34: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605.
/usr/include/c++/11/bits/basic_string.h:245:34: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1698.
/usr/include/c++/11/bits/basic_string.h:240:14: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1698.
/usr/include/c++/11/bits/basic_string.h:240:14: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1698 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1616.
/usr/include/c++/11/bits/basic_string.h:239:18: note: Considering inline candidate bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1622.
/usr/include/c++/11/bits/basic_string.h:239:18: optimized:  Inlining bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1622 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1616.
/usr/include/c++/11/bits/basic_string.h:672:23: note: Considering inline candidate std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436.
/usr/include/c++/11/bits/basic_string.h:672:23: optimized:  Inlining std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
/usr/include/c++/11/bits/basic_string.h:672:19: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1616.
/usr/include/c++/11/bits/basic_string.h:672:19: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1616 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:40:1: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:40:1: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:19:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:19:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:18:76: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:18:76: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:17:72: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:17:72: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:8:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
harness.cpp:8:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433 into int main(int, char**)/1310.
harness.cpp:8:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
harness.cpp:8:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433 into int main(int, char**)/1310.
harness.cpp:40:1: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:40:1: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:38:43: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600.
harness.cpp:38:43: missed:   will not early inline: int main(int, char**)/1310->std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600, growth 4 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:37:18: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600.
harness.cpp:37:18: missed:   will not early inline: int main(int, char**)/1310->std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600, growth 4 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:36:87: note: Considering inline candidate std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>]/1601.
harness.cpp:36:87: optimized:  Inlining std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>]/1601 into int main(int, char**)/1310.
harness.cpp:36:87: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000>]/1299.
harness.cpp:36:87: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000>]/1299 into int main(int, char**)/1310.
harness.cpp:36:71: note: Considering inline candidate constexpr std::chrono::__enable_if_is_duration<_ToDur> std::chrono::duration_cast(const std::chrono::duration<_Rep, _Period>&) [with _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _Rep = long int; _Period = std::ratio<1, 1000000000>]/1307.
harness.cpp:36:71: optimized:  Inlining constexpr std::chrono::__enable_if_is_duration<_ToDur> std::chrono::duration_cast(const std::chrono::duration<_Rep, _Period>&) [with _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _Rep = long int; _Period = std::ratio<1, 1000000000>]/1307 into int main(int, char**)/1310.
harness.cpp:36:77: note: Considering inline candidate constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1309.
harness.cpp:36:77: optimized:  Inlining constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1309 into int main(int, char**)/1310.
harness.cpp:35:18: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600.
harness.cpp:35:18: optimized:  Inlining std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600 into int main(int, char**)/1310.
harness.cpp:23:29: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char) [with _Traits = std::char_traits<char>]/1599.
harness.cpp:23:29: optimized:  Inlining std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char) [with _Traits = std::char_traits<char>]/1599 into int main(int, char**)/1310.
harness.cpp:23:22: note: Considering inline candidate std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>]/1598.
harness.cpp:23:22: optimized:  Inlining std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>]/1598 into int main(int, char**)/1310.
harness.cpp:21:14: note: Considering inline candidate bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1594.
harness.cpp:21:14: optimized:  Inlining bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1594 into int main(int, char**)/1310.
harness.cpp:19:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:19:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:18:76: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:18:76: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:18:65: note: Considering inline candidate int std::__cxx11::stoi(const string&, std::size_t*, int)/1086.
harness.cpp:18:65: optimized:  Inlining int std::__cxx11::stoi(const string&, std::size_t*, int)/1086 into int main(int, char**)/1310.
harness.cpp:18:76: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597.
harness.cpp:18:76: missed:   will not early inline: int main(int, char**)/1310->std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597, growth 7 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:18:27: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1596.
harness.cpp:18:27: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1596 into int main(int, char**)/1310.
harness.cpp:17:72: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:17:72: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:17:61: note: Considering inline candidate int std::__cxx11::stoi(const string&, std::size_t*, int)/1086.
harness.cpp:17:61: optimized:  Inlining int std::__cxx11::stoi(const string&, std::size_t*, int)/1086 into int main(int, char**)/1310.
harness.cpp:17:72: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597.
harness.cpp:17:72: missed:   will not early inline: int main(int, char**)/1310->std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597, growth 7 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:17:27: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1596.
harness.cpp:17:27: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1596 into int main(int, char**)/1310.
harness.cpp:16:47: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1595.
harness.cpp:16:47: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1595 into int main(int, char**)/1310.
harness.cpp:16:22: note: Considering inline candidate bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1594.
harness.cpp:16:22: optimized:  Inlining bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1594 into int main(int, char**)/1310.
harness.cpp:15:45: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1595.
harness.cpp:15:45: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1595 into int main(int, char**)/1310.
harness.cpp:15:17: note: Considering inline candidate bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1594.
harness.cpp:15:17: optimized:  Inlining bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1594 into int main(int, char**)/1310.
harness.cpp:8:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
harness.cpp:8:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433 into int main(int, char**)/1310.
harness.cpp:14:33: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592.
harness.cpp:14:33: missed:   will not early inline: int main(int, char**)/1310->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592, growth 8 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:14:33: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430.
harness.cpp:14:33: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430 into int main(int, char**)/1310.
harness.cpp:8:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
harness.cpp:8:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433 into int main(int, char**)/1310.
harness.cpp:9:24: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592.
harness.cpp:9:24: missed:   will not early inline: int main(int, char**)/1310->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592, growth 6 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:9:24: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430.
harness.cpp:9:24: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430 into int main(int, char**)/1310.
harness.cpp:40:1: note: Considering inline candidate void __static_initialization_and_destruction_0(int, int)/1869.
harness.cpp:40:1: optimized:  Inlining void __static_initialization_and_destruction_0(int, int)/1869 into (static initializers for harness.cpp)/2018.
/usr/include/c++/11/bits/char_traits.h:399:25: missed:   not inlinable: operator<<.isra/2097 -> long unsigned int __builtin_strlen(const char*)/2024, function body not available
/usr/include/c++/11/ostream:616:18: missed:   not inlinable: operator<<.isra/2097 -> std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char; _Traits = std::char_traits<char>]/2042, function body not available
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed:   not inlinable: _M_construct.isra/2096 -> void std::__throw_logic_error(const char*)/2025, function body not available
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed:   not inlinable: _M_construct.isra/2096 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_create(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2026, function body not available
/usr/include/c++/11/bits/char_traits.h:399:25: missed:   not inlinable: assign.isra/2095 -> long unsigned int __builtin_strlen(const char*)/2024, function body not available
/usr/include/c++/11/bits/basic_string.h:1459:19: missed:   not inlinable: assign.isra/2095 -> std::__cxx11::basic_string<_CharT, _Traits, _Allocator>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2033, function body not available
/usr/include/c++/11/bits/char_traits.h:399:25: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2094 -> long unsigned int __builtin_strlen(const char*)/2024, function body not available
/usr/include/c++/11/bits/basic_ios.h:158:20: missed:   not inlinable: std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/2060 -> void std::basic_ios<_CharT, _Traits>::clear(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/2044, function body not available
/usr/include/c++/11/bits/char_traits.h:437:49: missed:   not inlinable: static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2058 -> void* __builtin_memcpy(void*, const void*, long unsigned int)/2031, function body not available
/usr/include/c++/11/iostream:74:25: missed:   not inlinable: (static initializers for harness.cpp)/2018 -> int __cxxabiv1::__cxa_atexit(void (*)(void*), void*, void*)/2046, function body not available
/usr/include/c++/11/iostream:74:25: missed:   not inlinable: (static initializers for harness.cpp)/2018 -> std::ios_base::Init::Init()/2045, function body not available
/usr/include/c++/11/bits/basic_string.h:321:28: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689 -> void std::__throw_out_of_range_fmt(const char*, ...)/2035, function body not available
/usr/include/c++/11/bits/basic_string.h:321:28: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597 -> void std::__throw_out_of_range_fmt(const char*, ...)/2035, function body not available
/usr/include/c++/11/ext/string_conversions.h:86:27: missed:   not inlinable: _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365 -> void std::__throw_out_of_range(const char*)/2039, function body not available
/usr/include/c++/11/ext/string_conversions.h:83:31: missed:   not inlinable: _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365 -> void std::__throw_invalid_argument(const char*)/2037, function body not available
/usr/include/c++/11/ext/string_conversions.h:63:27: missed:   not inlinable: _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365 -> int* __errno_location()/2038, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/ostream:167:25: missed:   not inlinable: int main(int, char**)/1310 -> std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::_M_insert(_ValueT) [with _ValueT = long int; _CharT = char; _Traits = std::char_traits<char>]/2043, function body not available
/usr/include/c++/11/ostream:616:18: missed:   not inlinable: int main(int, char**)/1310 -> std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char; _Traits = std::char_traits<char>]/2042, function body not available
harness.cpp:33:25: missed:   not inlinable: int main(int, char**)/1310 -> static std::chrono::_V2::system_clock::time_point std::chrono::_V2::system_clock::now()/2021, function body not available
harness.cpp:31:47: missed:   not inlinable: int main(int, char**)/1310 -> unsigned int CalculateTwoElectronIntegrals(bool, int)/2019, function body not available
harness.cpp:28:25: missed:   not inlinable: int main(int, char**)/1310 -> static std::chrono::_V2::system_clock::time_point std::chrono::_V2::system_clock::now()/2021, function body not available
/usr/include/c++/11/ostream:525:30: missed:   not inlinable: int main(int, char**)/1310 -> std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char; _Traits = std::char_traits<char>]/2042, function body not available
/usr/include/c++/11/ostream:196:18: missed:   not inlinable: int main(int, char**)/1310 -> std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::_M_insert(_ValueT) [with _ValueT = long unsigned int; _CharT = char; _Traits = std::char_traits<char>]/2041, function body not available
harness.cpp:22:57: missed:   not inlinable: int main(int, char**)/1310 -> unsigned int CalculateTwoElectronIntegrals(bool, int)/2019, function body not available
/usr/include/c++/11/bits/basic_string.h:6250:27: missed:   not inlinable: int main(int, char**)/1310 -> int std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::compare(const _CharT*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2040, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/bits/basic_string.h:6620:40: missed:   not inlinable: int main(int, char**)/1310 -> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365, call is unlikely and code size would grow
harness.cpp:18:76: missed:   not inlinable: int main(int, char**)/1310 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597, call is unlikely and code size would grow
/usr/include/c++/11/bits/basic_string.h:2494:20: missed:   not inlinable: int main(int, char**)/1310 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2034, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/bits/basic_string.h:6620:40: missed:   not inlinable: int main(int, char**)/1310 -> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365, call is unlikely and code size would grow
harness.cpp:17:72: missed:   not inlinable: int main(int, char**)/1310 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597, call is unlikely and code size would grow
/usr/include/c++/11/bits/basic_string.h:2494:20: missed:   not inlinable: int main(int, char**)/1310 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2034, function body not available
/usr/include/c++/11/bits/basic_string.h:6250:27: missed:   not inlinable: int main(int, char**)/1310 -> int std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::compare(const _CharT*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2040, function body not available
/usr/include/c++/11/bits/basic_string.h:6250:27: missed:   not inlinable: int main(int, char**)/1310 -> int std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::compare(const _CharT*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2040, function body not available
harness.cpp:9:24: missed:   not inlinable: int main(int, char**)/1310 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2094, call is unlikely and code size would grow
optimized:  Inlined static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2058 into _M_construct.isra/2096 which now has time 28.402128 and size 37, net change of -7.
harness.cpp:14:33: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2098 into int main(int, char**)/1310 which now has time 897.452622 and size 210, net change of +8.
optimized:  Inlined std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/2060 into operator<<.isra/2097 which now has time 26.450000 and size 20, net change of -5.
harness.cpp:37:18: optimized:  Inlined operator<<.isra/2099 into int main(int, char**)/1310 which now has time 901.082623 and size 214, net change of +4.
harness.cpp:38:43: optimized:  Inlined operator<<.isra/2097 into int main(int, char**)/1310 which now has time 901.817335 and size 218, net change of -16.
/usr/include/c++/11/bits/basic_string.h:690:28: optimized:  Inlined assign.isra/2102 into int main(int, char**)/1310 which now has time 966.544609 and size 225, net change of +7.
/usr/include/c++/11/bits/basic_string.h:690:28: optimized:  Inlined assign.isra/2095 into int main(int, char**)/1310 which now has time 998.908246 and size 233, net change of -6.
/usr/include/c++/11/bits/basic_string.h:539:14: optimized:  Inlined _M_construct.isra/2103 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2098 which now has time 1083.074800 and size 15, net change of +26.
/usr/include/c++/11/bits/basic_string.h:539:14: optimized:  Inlined _M_construct.isra/2105 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2094 which now has time 38.502608 and size 41, net change of +26.
harness.cpp:9:24: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2094 into int main(int, char**)/1310 which now has time 1101.476088 and size 284, net change of -16.
/usr/include/c++/11/bits/basic_string.h:2856:52: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597 which now has time 26.494601 and size 29, net change of +0.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.isra/2096 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689 which now has time 36.888888 and size 22, net change of -37.
Unit growth for small function inlining: 349->333 (-5%)

Inlined 124 calls, eliminated 46 functions

/usr/include/c++/11/ext/string_conversions.h:54:5: missed: splitting region at control altering definition _13 = __convf_9(D) (__str_10(D), &__endptr, __base#0_11(D));
/usr/include/c++/11/ext/string_conversions.h:80:34: missed: not vectorized: statement can throw an exception: _13 = __convf_9(D) (__str_10(D), &__endptr, __base#0_11(D));
/usr/include/c++/11/ext/string_conversions.h:80:34: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/ext/string_conversions.h:80:34: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
/usr/include/c++/11/ext/string_conversions.h:80:34: missed: splitting region at dominance boundary bb16
/usr/include/c++/11/ext/string_conversions.h:86:27: missed: not vectorized: statement can throw an exception: std::__throw_out_of_range (__name_19(D));
/usr/include/c++/11/ext/string_conversions.h:83:31: missed: not vectorized: statement can throw an exception: std::__throw_invalid_argument (__name_19(D));
/usr/include/c++/11/ext/string_conversions.h:83:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/ext/string_conversions.h:83:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ext/string_conversions.h:83:31: missed: splitting region at dominance boundary bb13
/usr/include/c++/11/ext/string_conversions.h:83:31: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/string_conversions.h:64:41: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/ext/string_conversions.h:64:41: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
harness.cpp:31:47: missed: couldn't vectorize loop
harness.cpp:31:47: missed: not vectorized: control flow in loop.
harness.cpp:14:32: missed: couldn't vectorize loop
harness.cpp:14:32: missed: not vectorized: control flow in loop.
harness.cpp:8:5: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/char_traits.h:399:25: missed: statement clobbers memory: _145 = __builtin_strlen (_4);
harness.cpp:31:47: missed: statement clobbers memory: _28 = CalculateTwoElectronIntegrals (1, size_142);
harness.cpp:8:5: missed: splitting region at control altering definition _150 = std::__cxx11::basic_string<char>::_M_create (&arg, &__dnew, 0);
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (&mode.D.32018._M_local_buf, "perf", 4);
/usr/include/c++/11/bits/basic_string.h:6250:27: missed: statement clobbers memory: _9 = std::__cxx11::basic_string<char>::compare (&mode, "correct");
harness.cpp:28:25: missed: statement clobbers memory: t1 = std::chrono::_V2::system_clock::now ();
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/char_traits.h:399:25: missed: statement clobbers memory: _145 = __builtin_strlen (_4);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _150 = std::__cxx11::basic_string<char>::_M_create (&arg, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb8
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb12
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb13
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_131, _4, _145);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at control altering definition D.51794 = std::__cxx11::basic_string<char>::substr (&arg, 9, 18446744073709551615); [return slot optimization]
/usr/include/c++/11/bits/basic_string.h:6250:27: missed: statement clobbers memory: _51 = std::__cxx11::basic_string<char>::compare (&arg, "--mode=correct");
/usr/include/c++/11/bits/basic_string.h:6250:27: missed: statement clobbers memory: _39 = std::__cxx11::basic_string<char>::compare (&arg, "--mode=perf");
/usr/include/c++/11/bits/basic_string.h:2494:20: missed: statement clobbers memory: _54 = std::__cxx11::basic_string<char>::rfind (&arg, "--size=", 0, 7);
/usr/include/c++/11/bits/basic_string.h:2494:20: missed: statement clobbers memory: _60 = std::__cxx11::basic_string<char>::rfind (&arg, "--repeat=", 0, 9);
harness.cpp:18:76: missed: not vectorized: statement can throw an exception: D.51794 = std::__cxx11::basic_string<char>::substr (&arg, 9, 18446744073709551615); [return slot optimization]
harness.cpp:18:76: note: ***** Analysis failed with vector mode V2DI
harness.cpp:18:76: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:18:76: missed: splitting region at control altering definition _62 = __gnu_cxx::__stoa<long int, int, char, int> (strtol, "stoi", _61, 0B, 10);
/usr/include/c++/11/bits/basic_string.h:6620:40: missed: not vectorized: statement can throw an exception: _62 = __gnu_cxx::__stoa<long int, int, char, int> (strtol, "stoi", _61, 0B, 10);
/usr/include/c++/11/bits/basic_string.h:6620:40: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:6620:40: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:6620:40: missed: splitting region at dominance boundary bb29
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_83, _85);
harness.cpp:8:5: missed: not vectorized: statement can throw an exception: resx 20
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb27
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_63, _65);
harness.cpp:18:76: note: ***** Analysis failed with vector mode V2DI
harness.cpp:18:76: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:18:76: missed: splitting region at dominance boundary bb19
harness.cpp:18:76: note: ***** Analysis failed with vector mode VOID
harness.cpp:18:76: missed: splitting region at control altering definition D.51623 = std::__cxx11::basic_string<char>::substr (&arg, 7, 18446744073709551615); [return slot optimization]
harness.cpp:17:72: missed: not vectorized: statement can throw an exception: D.51623 = std::__cxx11::basic_string<char>::substr (&arg, 7, 18446744073709551615); [return slot optimization]
harness.cpp:17:72: note: ***** Analysis failed with vector mode VOID
harness.cpp:17:72: missed: splitting region at control altering definition _56 = __gnu_cxx::__stoa<long int, int, char, int> (strtol, "stoi", _55, 0B, 10);
/usr/include/c++/11/bits/basic_string.h:6620:40: missed: not vectorized: statement can throw an exception: _56 = __gnu_cxx::__stoa<long int, int, char, int> (strtol, "stoi", _55, 0B, 10);
/usr/include/c++/11/bits/basic_string.h:6620:40: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:6620:40: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:6620:40: missed: splitting region at dominance boundary bb22
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_80, _82);
harness.cpp:8:5: missed: not vectorized: statement can throw an exception: resx 16
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb20
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_57, _59);
harness.cpp:17:72: note: ***** Analysis failed with vector mode V2DI
harness.cpp:17:72: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:17:72: missed: splitting region at dominance boundary bb16
harness.cpp:17:72: note: ***** Analysis failed with vector mode VOID
harness.cpp:17:72: missed: splitting region at loop 1 exit at bb17
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: not vectorized: statement can throw an exception: std::__cxx11::basic_string<char>::_M_replace (&mode, 0, _161, "perf", 4);
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at dominance boundary bb88
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at dominance boundary bb14
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at loop 1 exit at bb68
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: not vectorized: statement can throw an exception: std::__cxx11::basic_string<char>::_M_replace (&mode, 0, _158, "correct", 7);
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at dominance boundary bb69
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at dominance boundary bb87
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_86, _88);
harness.cpp:8:5: missed: not vectorized: statement can throw an exception: resx 14
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb32
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at loop 1 exit at bb35
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_66, _68);
harness.cpp:13:23: note: ***** Analysis failed with vector mode V2DI
harness.cpp:13:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:13:23: missed: splitting region at dominance boundary bb44
/usr/include/c++/11/bits/basic_string.h:6250:27: missed: statement clobbers memory: _69 = std::__cxx11::basic_string<char>::compare (&mode, "correct");
harness.cpp:28:25: missed: statement clobbers memory: t1 = std::chrono::_V2::system_clock::now ();
harness.cpp:30:23: note: ***** Analysis failed with vector mode VOID
harness.cpp:30:23: missed: splitting region at control altering definition _28 = CalculateTwoElectronIntegrals (1, size_142);
harness.cpp:31:47: missed: not vectorized: statement can throw an exception: _28 = CalculateTwoElectronIntegrals (1, size_142);
harness.cpp:31:47: note: ***** Analysis failed with vector mode VOID
harness.cpp:31:47: missed: splitting region at loop 2 exit at bb96
harness.cpp:30:23: note: ***** Analysis failed with vector mode VOID
harness.cpp:30:23: missed: splitting region at dominance boundary bb48
harness.cpp:30:23: note: ***** Analysis failed with vector mode VOID
harness.cpp:30:23: missed: splitting region at control altering definition _72 = std::basic_ostream<char>::_M_insert<long int> (&cout, _73);
harness.cpp:33:25: missed: statement clobbers memory: t2 = std::chrono::_V2::system_clock::now ();
/usr/include/c++/11/ostream:616:18: missed: not vectorized: statement can throw an exception: std::__ostream_insert<char, std::char_traits<char> > (&cout, "Time: ", 6);
/usr/include/c++/11/ostream:167:25: missed: not vectorized: statement can throw an exception: _72 = std::basic_ostream<char>::_M_insert<long int> (&cout, _73);
/usr/include/c++/11/ostream:167:25: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/ostream:167:25: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ostream:167:25: missed: splitting region at dominance boundary bb51
/usr/include/c++/11/ostream:167:25: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:167:25: missed: splitting region at dominance boundary bb74
/usr/include/c++/11/ostream:616:18: missed: not vectorized: statement can throw an exception: std::__ostream_insert<char, std::char_traits<char> > (_72, " ms\n", 4);
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at dominance boundary bb53
harness.cpp:8:5: missed: not vectorized: statement can throw an exception: resx 25
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at dominance boundary bb83
/usr/include/c++/11/ostream:616:18: missed: not vectorized: statement can throw an exception: std::__ostream_insert<char, std::char_traits<char> > (&cerr, "", 0);
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at dominance boundary bb46
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at dominance boundary bb93
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at dominance boundary bb36
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at control altering definition _32 = CalculateTwoElectronIntegrals (0, size_147);
harness.cpp:22:57: missed: not vectorized: statement can throw an exception: _32 = CalculateTwoElectronIntegrals (0, size_147);
harness.cpp:22:57: note: ***** Analysis failed with vector mode VOID
harness.cpp:22:57: missed: splitting region at control altering definition _71 = std::basic_ostream<char>::_M_insert<long unsigned int> (&cout, _70);
/usr/include/c++/11/ostream:196:18: missed: not vectorized: statement can throw an exception: _71 = std::basic_ostream<char>::_M_insert<long unsigned int> (&cout, _70);
/usr/include/c++/11/ostream:196:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:196:18: missed: splitting region at dominance boundary bb40
/usr/include/c++/11/ostream:196:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:196:18: missed: splitting region at dominance boundary bb57
/usr/include/c++/11/ostream:525:30: missed: not vectorized: statement can throw an exception: std::__ostream_insert<char, std::char_traits<char> > (_71, &__c, 1);
harness.cpp:23:29: note: ***** Analysis failed with vector mode V16QI
harness.cpp:23:29: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V16QI
harness.cpp:23:29: missed: splitting region at dominance boundary bb37
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_77, _79);
harness.cpp:8:5: note: ***** Analysis failed with vector mode V2DI
harness.cpp:8:5: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:8:5: missed: splitting region at dominance boundary bb77
harness.cpp:8:5: note: ***** Analysis failed with vector mode VOID
harness.cpp:8:5: missed: splitting region at dominance boundary bb84
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_89, _91);
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/iostream:74:25: missed: statement clobbers memory: std::ios_base::Init::Init (&__ioinit);
/usr/include/c++/11/iostream:74:25: missed: statement clobbers memory: __cxxabiv1::__cxa_atexit (__dt_comp , &__ioinit, &__dso_handle);
harness.cpp:40:1: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_tree.h:176:15: note: Considering inline candidate void std::_Rb_tree_header::_M_reset()/1030.
/usr/include/c++/11/bits/stl_tree.h:176:15: optimized:  Inlining void std::_Rb_tree_header::_M_reset()/1030 into std::_Rb_tree_header::_Rb_tree_header()/1024.
/usr/include/c++/11/bits/hashtable_policy.h:1210:7: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash<int>]/1211.
/usr/include/c++/11/bits/hashtable_policy.h:1210:7: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash<int>]/1211 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_Hash_code_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1119.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::equal_to<int>]/1214.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::equal_to<int>]/1214 into std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1122.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: note: Considering inline candidate std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_Hash_code_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1119.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: optimized:  Inlining std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_Hash_code_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1119 into std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1122.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::_Rb_tree_node<int>]/1295.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::_Rb_tree_node<int>]/1295 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::_Rb_tree_node<int>]/1205.
/usr/include/c++/11/bits/stl_tree.h:660:9: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::_Rb_tree_node<int>]/1205.
/usr/include/c++/11/bits/stl_tree.h:660:9: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::_Rb_tree_node<int>]/1205 into std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl<std::less<int>, true>::~_Rb_tree_impl()/1106.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1303.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1303 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1220.
/usr/include/c++/11/bits/hashtable_policy.h:1124:12: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1220.
/usr/include/c++/11/bits/hashtable_policy.h:1124:12: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1220 into std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >, true>::~_Hashtable_ebo_helper()/1125.
/usr/include/c++/11/bits/hashtable_policy.h:1802:12: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >, true>::~_Hashtable_ebo_helper()/1125.
/usr/include/c++/11/bits/hashtable_policy.h:1802:12: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >, true>::~_Hashtable_ebo_helper()/1125 into std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> > >::~_Hashtable_alloc()/1131.
/usr/include/c++/11/bits/stl_set.h:420:25: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size() const [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1334.
/usr/include/c++/11/bits/stl_set.h:420:25: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size() const [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1334 into std::set<_Key, _Compare, _Alloc>::size_type std::set<_Key, _Compare, _Alloc>::size() const [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1243.
/usr/include/c++/11/bits/unordered_map.h:311:25: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1335.
/usr/include/c++/11/bits/unordered_map.h:311:25: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1335 into std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size() const [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1244.
/usr/include/c++/11/bits/allocator.h:156:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::_Rb_tree_node<int>]/1357.
/usr/include/c++/11/bits/allocator.h:156:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::_Rb_tree_node<int>]/1357 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::_Rb_tree_node<int>]/1289.
/usr/include/c++/11/bits/stl_tree.h:671:22: note: Considering inline candidate std::_Rb_tree_header::_Rb_tree_header()/1024.
/usr/include/c++/11/bits/stl_tree.h:671:22: optimized:  Inlining std::_Rb_tree_header::_Rb_tree_header()/1024 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, <anonymous> >::_Rb_tree_impl() [with _Key_compare = std::less<int>; bool <anonymous> = true; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1202.
/usr/include/c++/11/bits/stl_tree.h:671:22: note: Considering inline candidate std::_Rb_tree_key_compare<_Key_compare>::_Rb_tree_key_compare() [with _Key_compare = std::less<int>]/1292.
/usr/include/c++/11/bits/stl_tree.h:671:22: optimized:  Inlining std::_Rb_tree_key_compare<_Key_compare>::_Rb_tree_key_compare() [with _Key_compare = std::less<int>]/1292 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, <anonymous> >::_Rb_tree_impl() [with _Key_compare = std::less<int>; bool <anonymous> = true; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1202.
/usr/include/c++/11/bits/stl_tree.h:671:22: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::_Rb_tree_node<int>]/1289.
/usr/include/c++/11/bits/stl_tree.h:671:22: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::_Rb_tree_node<int>]/1289 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, <anonymous> >::_Rb_tree_impl() [with _Key_compare = std::less<int>; bool <anonymous> = true; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1202.
/usr/include/c++/11/bits/stl_tree.h:928:7: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, <anonymous> >::_Rb_tree_impl() [with _Key_compare = std::less<int>; bool <anonymous> = true; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1202.
/usr/include/c++/11/bits/stl_tree.h:928:7: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, <anonymous> >::_Rb_tree_impl() [with _Key_compare = std::less<int>; bool <anonymous> = true; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1202 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1109.
/usr/include/c++/11/bits/stl_set.h:167:7: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1109.
/usr/include/c++/11/bits/stl_set.h:167:7: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1109 into std::set<_Key, _Compare, _Alloc>::set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1112.
/usr/include/c++/11/bits/stl_tree.h:739:25: note: Considering inline candidate std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_mbegin() const [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1362.
/usr/include/c++/11/bits/stl_tree.h:739:25: optimized:  Inlining std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_mbegin() const [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1362 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1298.
/usr/include/c++/11/bits/allocator.h:156:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1364.
/usr/include/c++/11/bits/allocator.h:156:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1364 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1300.
/usr/include/c++/11/bits/hashtable_policy.h:1127:63: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1300.
/usr/include/c++/11/bits/hashtable_policy.h:1127:63: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1300 into std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1217.
/usr/include/c++/11/bits/hashtable_policy.h:1823:7: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1217.
/usr/include/c++/11/bits/hashtable_policy.h:1823:7: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1217 into std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1128.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)/977.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)/977 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1134.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Hash_node_base::_Hash_node_base()/970.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Hash_node_base::_Hash_node_base()/970 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1134.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1128.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1128 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1134.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1122.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1122 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1134.
/usr/include/c++/11/bits/unordered_map.h:141:7: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1134.
/usr/include/c++/11/bits/unordered_map.h:141:7: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1134 into std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map() [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1137.
/usr/include/c++/11/tuple:435:21: note: Considering inline candidate constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(const _Head&) [with long unsigned int _Idx = 0; _Head = const int&]/1375.
/usr/include/c++/11/tuple:435:21: optimized:  Inlining constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(const _Head&) [with long unsigned int _Idx = 0; _Head = const int&]/1375 into constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(const _Head&) [with long unsigned int _Idx = 0; _Head = const int&]/1378.
/usr/include/c++/11/tuple:729:28: note: Considering inline candidate constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(const _Head&) [with long unsigned int _Idx = 0; _Head = const int&]/1378.
/usr/include/c++/11/tuple:729:28: optimized:  Inlining constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(const _Head&) [with long unsigned int _Idx = 0; _Head = const int&]/1378 into constexpr std::tuple<_Elements>::tuple(const _Elements& ...) [with bool _NotEmpty = true; typename std::enable_if<std::tuple<_Elements>::_TCC<_Dummy>::__is_implicitly_constructible<const _Elements& ...>(), bool>::type <anonymous> = true; _Elements = {const int&}]/1381.
/usr/include/c++/11/bits/stl_pair.h:353:59: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool]/1192.
/usr/include/c++/11/bits/stl_pair.h:353:59: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool]/1192 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_iterator<int>; _T2 = bool]/1416.
/usr/include/c++/11/bits/stl_pair.h:353:27: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_iterator<int>]/1414.
/usr/include/c++/11/bits/stl_pair.h:353:27: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_iterator<int>]/1414 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_iterator<int>; _T2 = bool]/1416.
/usr/include/c++/11/bits/stl_pair.h:353:59: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool&]/1326.
/usr/include/c++/11/bits/stl_pair.h:353:59: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool&]/1326 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>&; _U2 = bool&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_const_iterator<int>; _T2 = bool]/1328.
/usr/include/c++/11/bits/stl_pair.h:353:4: note: Considering inline candidate std::_Rb_tree_const_iterator<_Tp>::_Rb_tree_const_iterator(const iterator&) [with _Tp = int]/1422.
/usr/include/c++/11/bits/stl_pair.h:353:4: optimized:  Inlining std::_Rb_tree_const_iterator<_Tp>::_Rb_tree_const_iterator(const iterator&) [with _Tp = int]/1422 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>&; _U2 = bool&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_const_iterator<int>; _T2 = bool]/1328.
/usr/include/c++/11/bits/stl_pair.h:353:27: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_iterator<int>&]/1325.
/usr/include/c++/11/bits/stl_pair.h:353:27: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_iterator<int>&]/1325 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>&; _U2 = bool&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_const_iterator<int>; _T2 = bool]/1328.
/usr/include/c++/11/bits/hashtable_policy.h:300:33: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1427.
/usr/include/c++/11/bits/hashtable_policy.h:300:33: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1427 into void std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_M_incr() [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1332.
/usr/include/c++/11/bits/hashtable_policy.h:352:15: note: Considering inline candidate void std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_M_incr() [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1332.
/usr/include/c++/11/bits/hashtable_policy.h:352:15: optimized:  Inlining void std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_M_incr() [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1332 into std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>& std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator++() [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1241.
/usr/include/c++/11/bits/hashtable_policy.h:1233:28: note: Considering inline candidate std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/975.
/usr/include/c++/11/bits/hashtable_policy.h:1233:28: optimized:  Inlining std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/975 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1448.
/usr/include/c++/11/bits/hashtable.h:795:49: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1448.
/usr/include/c++/11/bits/hashtable.h:795:49: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1448 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1372.
/usr/include/c++/11/bits/hashtable_policy.h:277:12: note: Considering inline candidate std::__detail::_Hash_node_base::_Hash_node_base()/970.
/usr/include/c++/11/bits/hashtable_policy.h:277:12: optimized:  Inlining std::__detail::_Hash_node_base::_Hash_node_base()/970 into std::__detail::_Hash_node<std::pair<const int, double>, false>::_Hash_node()/1451.
/usr/include/c++/11/bits/stl_tree.h:996:16: note: Considering inline candidate std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1419.
/usr/include/c++/11/bits/stl_tree.h:996:16: optimized:  Inlining std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1419 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1461.
/usr/include/c++/11/bits/stl_pair.h:353:59: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_node_base*&]/1464.
/usr/include/c++/11/bits/stl_pair.h:353:59: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_node_base*&]/1464 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_node<int>*&; _U2 = std::_Rb_tree_node_base*&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1466.
/usr/include/c++/11/bits/stl_pair.h:353:27: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_node<int>*&]/1463.
/usr/include/c++/11/bits/stl_pair.h:353:27: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_node<int>*&]/1463 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_node<int>*&; _U2 = std::_Rb_tree_node_base*&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1466.
/usr/include/c++/11/bits/stl_pair.h:323:33: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_node_base*&]/1464.
/usr/include/c++/11/bits/stl_pair.h:323:33: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_node_base*&]/1464 into constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = std::_Rb_tree_node_base*&; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1471.
/usr/include/c++/11/bits/hashtable_policy.h:339:24: note: Considering inline candidate std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_Node_iterator_base(std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::__node_type*) [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1475.
/usr/include/c++/11/bits/hashtable_policy.h:339:24: optimized:  Inlining std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_Node_iterator_base(std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::__node_type*) [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1475 into std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1425.
/usr/include/c++/11/bits/hashtable.h:622:16: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1425.
/usr/include/c++/11/bits/hashtable.h:622:16: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1425 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::begin() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1330.
/usr/include/c++/11/bits/hashtable.h:622:16: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1366.
/usr/include/c++/11/bits/hashtable.h:622:16: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1366 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::begin() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1330.
/usr/include/c++/11/bits/unordered_map.h:326:26: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::begin() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1330.
/usr/include/c++/11/bits/unordered_map.h:326:26: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::begin() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1330 into std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::begin() [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1238.
/usr/include/c++/11/bits/hashtable.h:630:16: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1425.
/usr/include/c++/11/bits/hashtable.h:630:16: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1425 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::end() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1331.
/usr/include/c++/11/bits/unordered_map.h:348:24: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::end() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1331.
/usr/include/c++/11/bits/unordered_map.h:348:24: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::end() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1331 into std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::end() [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1239.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1485.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1485 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1486.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1486.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1486 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/1487.
/usr/include/c++/11/bits/hashtable_policy.h:1276:51: note: Considering inline candidate const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 1; _Tp = std::hash<int>]/1496.
/usr/include/c++/11/bits/hashtable_policy.h:1276:51: optimized:  Inlining const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 1; _Tp = std::hash<int>]/1496 into const _Hash& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash() const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1447.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: note: Considering inline candidate std::size_t std::hash<int>::operator()(int) const/951.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: optimized:  Inlining std::size_t std::hash<int>::operator()(int) const/951 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1371.
/usr/include/c++/11/bits/hashtable_policy.h:1219:16: note: Considering inline candidate const _Hash& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash() const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1447.
/usr/include/c++/11/bits/hashtable_policy.h:1219:16: optimized:  Inlining const _Hash& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash() const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1447 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1371.
/usr/include/c++/11/ext/aligned_buffer.h:115:41: note: Considering inline candidate void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() [with _Tp = std::pair<const int, double>]/1505.
/usr/include/c++/11/ext/aligned_buffer.h:115:41: optimized:  Inlining void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() [with _Tp = std::pair<const int, double>]/1505 into _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = std::pair<const int, double>]/1477.
/usr/include/c++/11/bits/hashtable_policy.h:238:33: note: Considering inline candidate _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = std::pair<const int, double>]/1477.
/usr/include/c++/11/bits/hashtable_policy.h:238:33: optimized:  Inlining _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = std::pair<const int, double>]/1477 into _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1428.
/usr/include/c++/11/bits/hashtable_policy.h:246:26: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1428.
/usr/include/c++/11/bits/hashtable_policy.h:246:26: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1428 into _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const int, double>]/1333.
/usr/include/c++/11/bits/hashtable_policy.h:343:34: note: Considering inline candidate _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const int, double>]/1333.
/usr/include/c++/11/bits/hashtable_policy.h:343:34: optimized:  Inlining _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const int, double>]/1333 into std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::reference std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator*() const [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1242.
/usr/include/c++/11/bits/hashtable_policy.h:347:39: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1428.
/usr/include/c++/11/bits/hashtable_policy.h:347:39: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1428 into std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::pointer std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator->() const [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1393.
/usr/include/c++/11/bits/alloc_traits.h:535:15: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = int; _Tp = std::_Rb_tree_node<int>]/1507.
/usr/include/c++/11/bits/alloc_traits.h:535:15: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = int; _Tp = std::_Rb_tree_node<int>]/1507 into static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = int; _Tp = std::_Rb_tree_node<int>]/1480.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::_Rb_tree_node<int>]/1508.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::_Rb_tree_node<int>]/1508 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::_Rb_tree_node<int>]/1481.
/usr/include/c++/11/bits/stl_tree.h:565:34: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::_Rb_tree_node<int>]/1481.
/usr/include/c++/11/bits/stl_tree.h:565:34: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::_Rb_tree_node<int>]/1481 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_put_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1441.
/usr/include/c++/11/bits/stl_tree.h:565:56: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1478.
/usr/include/c++/11/bits/stl_tree.h:565:56: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1478 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_put_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1441.
/usr/include/c++/11/bits/hashtable_policy.h:1834:40: note: Considering inline candidate _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_get() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1509.
/usr/include/c++/11/bits/hashtable_policy.h:1834:40: optimized:  Inlining _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_get() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1509 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1482.
/usr/include/c++/11/bits/alloc_traits.h:535:15: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::pair<const int, double>; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1510.
/usr/include/c++/11/bits/alloc_traits.h:535:15: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::pair<const int, double>; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1510 into static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const int, double>; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1483.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1511.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1511 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1512.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1512.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1512 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1513.
/usr/include/c++/11/bits/allocator.h:169:53: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/1515.
/usr/include/c++/11/bits/allocator.h:169:53: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/1515 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const int, double>, false>; _Tp = std::__detail::_Hash_node_base*]/1489.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/1518.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/1518 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1492.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1520.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1520 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1494.
/usr/include/c++/11/bits/hashtable_policy.h:1943:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1492.
/usr/include/c++/11/bits/hashtable_policy.h:1943:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1492 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1445.
/usr/include/c++/11/bits/hashtable_policy.h:1942:41: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1494.
/usr/include/c++/11/bits/hashtable_policy.h:1942:41: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1494 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1445.
/usr/include/c++/11/bits/hashtable_policy.h:1941:28: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const int, double>, false>; _Tp = std::__detail::_Hash_node_base*]/1489.
/usr/include/c++/11/bits/hashtable_policy.h:1941:28: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const int, double>, false>; _Tp = std::__detail::_Hash_node_base*]/1489 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1445.
/usr/include/c++/11/bits/hashtable_policy.h:1941:53: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1482.
/usr/include/c++/11/bits/hashtable_policy.h:1941:53: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1482 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1445.
/usr/include/c++/11/bits/hashtable_policy.h:1940:57: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/1487.
/usr/include/c++/11/bits/hashtable_policy.h:1940:57: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/1487 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1445.
/usr/include/c++/11/bits/hashtable.h:449:42: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1445.
/usr/include/c++/11/bits/hashtable.h:449:42: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1445 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1368.
/usr/include/c++/11/bits/hashtable.h:446:27: note: Considering inline candidate bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_uses_single_bucket(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1444.
/usr/include/c++/11/bits/hashtable.h:446:27: optimized:  Inlining bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_uses_single_bucket(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1444 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1368.
/usr/include/c++/11/bits/hashtable.h:454:30: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1368.
/usr/include/c++/11/bits/hashtable.h:454:30: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1368 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1306.
/usr/include/c++/11/utility:234:43: note: Considering inline candidate static constexpr const _Tp1& std::__pair_get<0>::__const_get(const std::pair<_T1, _T2>&) [with _Tp1 = const int; _Tp2 = double]/1527.
/usr/include/c++/11/utility:234:43: optimized:  Inlining static constexpr const _Tp1& std::__pair_get<0>::__const_get(const std::pair<_T1, _T2>&) [with _Tp1 = const int; _Tp2 = double]/1527 into constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&) [with long unsigned int _Int = 0; _Tp1 = const int; _Tp2 = double]/1528.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: note: Considering inline candidate constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&) [with long unsigned int _Int = 0; _Tp1 = const int; _Tp2 = double]/1528.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: optimized:  Inlining constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&) [with long unsigned int _Int = 0; _Tp1 = const int; _Tp2 = double]/1528 into decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const int, double>&]/1529.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const int, double>&]/1526.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const int, double>&]/1526 into decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const int, double>&]/1529.
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1531.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1531 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1532.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1532.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1499->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1532, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/tuple:756:17: note: Considering inline candidate constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(std::_Tuple_impl<_Idx, _Head>&&) [with long unsigned int _Idx = 0; _Head = const int&]/1534.
/usr/include/c++/11/tuple:756:17: optimized:  Inlining constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(std::_Tuple_impl<_Idx, _Head>&&) [with long unsigned int _Idx = 0; _Head = const int&]/1534 into constexpr std::tuple<_Elements>::tuple(std::tuple<_Elements>&&) [with _Elements = {const int&}]/1537.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1540.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1540 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1502.
/usr/include/c++/11/bits/hashtable_policy.h:1905:38: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1502.
/usr/include/c++/11/bits/hashtable_policy.h:1905:38: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1502 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1484.
/usr/include/c++/11/bits/hashtable_policy.h:1905:56: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1482.
/usr/include/c++/11/bits/hashtable_policy.h:1905:56: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1482 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1484.
/usr/include/c++/11/bits/hashtable_policy.h:1903:57: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1513.
/usr/include/c++/11/bits/hashtable_policy.h:1903:57: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1513 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1484.
/usr/include/c++/11/bits/hashtable_policy.h:1895:29: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1484.
/usr/include/c++/11/bits/hashtable_policy.h:1895:29: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1484 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1443.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const int, double>; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1483.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const int, double>; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1483 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1443.
/usr/include/c++/11/bits/hashtable_policy.h:1894:53: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1482.
/usr/include/c++/11/bits/hashtable_policy.h:1894:53: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1482 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1443.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1428.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1428 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1443.
/usr/include/c++/11/bits/hashtable.h:308:57: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1443.
/usr/include/c++/11/bits/hashtable.h:308:57: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1443 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1390.
/usr/include/c++/11/bits/hashtable_policy.h:1916:22: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1443.
/usr/include/c++/11/bits/hashtable_policy.h:1916:22: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1443 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1367.
/usr/include/c++/11/bits/hashtable_policy.h:1915:22: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1427.
/usr/include/c++/11/bits/hashtable_policy.h:1915:22: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1427 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1367.
/usr/include/c++/11/bits/hashtable.h:2320:32: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1367.
/usr/include/c++/11/bits/hashtable.h:2320:32: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1367 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1305.
/usr/include/c++/11/bits/hashtable.h:2320:32: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1366.
/usr/include/c++/11/bits/hashtable.h:2320:32: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1366 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1305.
/usr/include/c++/11/bits/hashtable.h:1534:5: note: Considering inline candidate std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> > >::~_Hashtable_alloc()/1131.
/usr/include/c++/11/bits/hashtable.h:1534:5: optimized:  Inlining std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> > >::~_Hashtable_alloc()/1131 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223.
/usr/include/c++/11/bits/hashtable.h:1533:28: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1306.
/usr/include/c++/11/bits/hashtable.h:1533:28: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1306 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223.
/usr/include/c++/11/bits/hashtable.h:1532:12: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1305.
/usr/include/c++/11/bits/hashtable.h:1532:12: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1305, growth 12 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/unordered_map.h:102:11: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223.
/usr/include/c++/11/bits/unordered_map.h:102:11: missed:   will not early inline: std::unordered_map<int, double>::~unordered_map()/1140->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223, growth 7 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/ext/aligned_buffer.h:73:41: note: Considering inline candidate void* __gnu_cxx::__aligned_membuf<_Tp>::_M_addr() [with _Tp = int]/1544.
/usr/include/c++/11/ext/aligned_buffer.h:73:41: optimized:  Inlining void* __gnu_cxx::__aligned_membuf<_Tp>::_M_addr() [with _Tp = int]/1544 into _Tp* __gnu_cxx::__aligned_membuf<_Tp>::_M_ptr() [with _Tp = int]/1506.
/usr/include/c++/11/bits/stl_tree.h:235:33: note: Considering inline candidate _Tp* __gnu_cxx::__aligned_membuf<_Tp>::_M_ptr() [with _Tp = int]/1506.
/usr/include/c++/11/bits/stl_tree.h:235:33: optimized:  Inlining _Tp* __gnu_cxx::__aligned_membuf<_Tp>::_M_ptr() [with _Tp = int]/1506 into _Val* std::_Rb_tree_node<_Val>::_M_valptr() [with _Val = int]/1479.
/usr/include/c++/11/bits/stl_tree.h:623:24: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = int; _Tp = std::_Rb_tree_node<int>]/1480.
/usr/include/c++/11/bits/stl_tree.h:623:24: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = int; _Tp = std::_Rb_tree_node<int>]/1480 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1440.
/usr/include/c++/11/bits/stl_tree.h:623:46: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1478.
/usr/include/c++/11/bits/stl_tree.h:623:46: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1478 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1440.
/usr/include/c++/11/bits/stl_tree.h:623:24: note: Considering inline candidate _Val* std::_Rb_tree_node<_Val>::_M_valptr() [with _Val = int]/1479.
/usr/include/c++/11/bits/stl_tree.h:623:24: optimized:  Inlining _Val* std::_Rb_tree_node<_Val>::_M_valptr() [with _Val = int]/1479 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1440.
/usr/include/c++/11/bits/stl_tree.h:632:13: note: Considering inline candidate void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_put_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1441.
/usr/include/c++/11/bits/stl_tree.h:632:13: optimized:  Inlining void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_put_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1441 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_drop_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1361.
/usr/include/c++/11/bits/stl_tree.h:631:17: note: Considering inline candidate void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1440.
/usr/include/c++/11/bits/stl_tree.h:631:17: optimized:  Inlining void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1440 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_drop_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1361.
/usr/include/c++/11/bits/stl_tree.h:1891:16: note: Considering inline candidate void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_drop_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1361.
/usr/include/c++/11/bits/stl_tree.h:1891:16: optimized:  Inlining void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_drop_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1361 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1297.
/usr/include/c++/11/bits/stl_tree.h:1890:28: note: Considering inline candidate static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_left(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1360.
/usr/include/c++/11/bits/stl_tree.h:1890:28: optimized:  Inlining static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_left(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1360 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1297.
/usr/include/c++/11/bits/stl_tree.h:1889:12: note: Considering inline candidate void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1297.
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed:   Not inlining: recursive call.
/usr/include/c++/11/bits/stl_tree.h:1889:12: note: Considering inline candidate static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_right(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1359.
/usr/include/c++/11/bits/stl_tree.h:1889:12: optimized:  Inlining static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_right(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1359 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1297.
/usr/include/c++/11/bits/stl_tree.h:984:31: note: Considering inline candidate std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl<std::less<int>, true>::~_Rb_tree_impl()/1106.
/usr/include/c++/11/bits/stl_tree.h:984:31: optimized:  Inlining std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl<std::less<int>, true>::~_Rb_tree_impl()/1106 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1208.
/usr/include/c++/11/bits/stl_tree.h:984:17: note: Considering inline candidate void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1297.
/usr/include/c++/11/bits/stl_tree.h:984:17: missed:   will not early inline: std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1208->void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1297, growth 7 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_tree.h:984:17: note: Considering inline candidate std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1298.
/usr/include/c++/11/bits/stl_tree.h:984:17: optimized:  Inlining std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1298 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1208.
/usr/include/c++/11/bits/stl_set.h:281:7: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1208.
/usr/include/c++/11/bits/stl_set.h:281:7: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1208 into std::set<_Key, _Compare, _Alloc>::~set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1115.
/usr/include/c++/11/bits/hashtable_policy.h:1650:48: note: Considering inline candidate const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 0; _Tp = std::equal_to<int>]/1546.
/usr/include/c++/11/bits/hashtable_policy.h:1650:48: optimized:  Inlining const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 0; _Tp = std::equal_to<int>]/1546 into const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_eq() const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1524.
/usr/include/c++/11/ext/aligned_buffer.h:77:47: note: Considering inline candidate const void* __gnu_cxx::__aligned_membuf<_Tp>::_M_addr() const [with _Tp = int]/1551.
/usr/include/c++/11/ext/aligned_buffer.h:77:47: optimized:  Inlining const void* __gnu_cxx::__aligned_membuf<_Tp>::_M_addr() const [with _Tp = int]/1551 into const _Tp* __gnu_cxx::__aligned_membuf<_Tp>::_M_ptr() const [with _Tp = int]/1541.
/usr/include/c++/11/bits/stl_tree.h:239:33: note: Considering inline candidate const _Tp* __gnu_cxx::__aligned_membuf<_Tp>::_M_ptr() const [with _Tp = int]/1541.
/usr/include/c++/11/bits/stl_tree.h:239:33: optimized:  Inlining const _Tp* __gnu_cxx::__aligned_membuf<_Tp>::_M_ptr() const [with _Tp = int]/1541 into const _Val* std::_Rb_tree_node<_Val>::_M_valptr() const [with _Val = int]/1503.
/usr/include/c++/11/bits/stl_tree.h:775:22: note: Considering inline candidate const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = int]/1409.
/usr/include/c++/11/bits/stl_tree.h:775:22: optimized:  Inlining const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = int]/1409 into static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1459.
/usr/include/c++/11/bits/stl_tree.h:775:38: note: Considering inline candidate const _Val* std::_Rb_tree_node<_Val>::_M_valptr() const [with _Val = int]/1503.
/usr/include/c++/11/bits/stl_tree.h:775:38: optimized:  Inlining const _Val* std::_Rb_tree_node<_Val>::_M_valptr() const [with _Val = int]/1503 into static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1459.
/usr/include/c++/11/bits/stl_tree.h:796:22: note: Considering inline candidate static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1459.
/usr/include/c++/11/bits/stl_tree.h:796:22: optimized:  Inlining static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1459 into static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1469.
/usr/include/c++/11/bits/stl_tree.h:2084:14: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = std::_Rb_tree_node_base*&; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1471.
/usr/include/c++/11/bits/stl_tree.h:2084:14: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = std::_Rb_tree_node_base*&; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1471 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408.
/usr/include/c++/11/bits/stl_tree.h:2083:9: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_node<int>*&; _U2 = std::_Rb_tree_node_base*&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1466.
/usr/include/c++/11/bits/stl_tree.h:2083:9: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_node<int>*&; _U2 = std::_Rb_tree_node_base*&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1466 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408.
/usr/include/c++/11/bits/stl_tree.h:2082:33: note: Considering inline candidate constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1460.
/usr/include/c++/11/bits/stl_tree.h:2082:33: optimized:  Inlining constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1460 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408.
/usr/include/c++/11/bits/stl_tree.h:2082:33: note: Considering inline candidate static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1469.
/usr/include/c++/11/bits/stl_tree.h:2082:33: optimized:  Inlining static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1469 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408.
/usr/include/c++/11/bits/stl_tree.h:2080:6: note: Considering inline candidate std::_Rb_tree_iterator<_Tp>::_Self& std::_Rb_tree_iterator<_Tp>::operator--() [with _Tp = int]/1468.
/usr/include/c++/11/bits/stl_tree.h:2080:6: optimized:  Inlining std::_Rb_tree_iterator<_Tp>::_Self& std::_Rb_tree_iterator<_Tp>::operator--() [with _Tp = int]/1468 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408.
/usr/include/c++/11/bits/stl_tree.h:2078:13: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_node<int>*&; _U2 = std::_Rb_tree_node_base*&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1466.
/usr/include/c++/11/bits/stl_tree.h:2078:13: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_node<int>*&; _U2 = std::_Rb_tree_node_base*&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1466 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408.
/usr/include/c++/11/bits/stl_tree.h:2077:12: note: Considering inline candidate bool std::operator==(const _Self&, const _Self&)/1462.
/usr/include/c++/11/bits/stl_tree.h:2077:12: optimized:  Inlining bool std::operator==(const _Self&, const _Self&)/1462 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408.
/usr/include/c++/11/bits/stl_tree.h:2077:20: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1461.
/usr/include/c++/11/bits/stl_tree.h:2077:20: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1461 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408.
/usr/include/c++/11/bits/stl_tree.h:2074:16: note: Considering inline candidate std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1419.
/usr/include/c++/11/bits/stl_tree.h:2074:16: optimized:  Inlining std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1419 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408.
/usr/include/c++/11/bits/stl_tree.h:2072:42: note: Considering inline candidate static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_right(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1359.
/usr/include/c++/11/bits/stl_tree.h:2072:42: optimized:  Inlining static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_right(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1359 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408.
/usr/include/c++/11/bits/stl_tree.h:2072:26: note: Considering inline candidate static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_left(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1360.
/usr/include/c++/11/bits/stl_tree.h:2072:26: optimized:  Inlining static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_left(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1360 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408.
/usr/include/c++/11/bits/stl_tree.h:2071:35: note: Considering inline candidate constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1460.
/usr/include/c++/11/bits/stl_tree.h:2071:35: optimized:  Inlining constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1460 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408.
/usr/include/c++/11/bits/stl_tree.h:2071:35: note: Considering inline candidate static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1459.
/usr/include/c++/11/bits/stl_tree.h:2071:35: optimized:  Inlining static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1459 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408.
/usr/include/c++/11/bits/stl_tree.h:2066:29: note: Considering inline candidate std::_Rb_tree_node_base* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_end() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1456.
/usr/include/c++/11/bits/stl_tree.h:2066:29: optimized:  Inlining std::_Rb_tree_node_base* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_end() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1456 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408.
/usr/include/c++/11/bits/stl_tree.h:2065:32: note: Considering inline candidate std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1298.
/usr/include/c++/11/bits/stl_tree.h:2065:32: optimized:  Inlining std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1298 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408.
/usr/include/c++/11/tuple:424:65: note: Considering inline candidate static constexpr _Head& std::_Head_base<_Idx, _Head, false>::_M_head(std::_Head_base<_Idx, _Head, false>&) [with long unsigned int _Idx = 0; _Head = const int&]/1557.
/usr/include/c++/11/tuple:424:65: optimized:  Inlining static constexpr _Head& std::_Head_base<_Idx, _Head, false>::_M_head(std::_Head_base<_Idx, _Head, false>&) [with long unsigned int _Idx = 0; _Head = const int&]/1557 into static constexpr _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(std::_Tuple_impl<_Idx, _Head>&) [with long unsigned int _Idx = 0; _Head = const int&]/1558.
/usr/include/c++/11/tuple:1378:56: note: Considering inline candidate static constexpr _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(std::_Tuple_impl<_Idx, _Head>&) [with long unsigned int _Idx = 0; _Head = const int&]/1558.
/usr/include/c++/11/tuple:1378:56: optimized:  Inlining static constexpr _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(std::_Tuple_impl<_Idx, _Head>&) [with long unsigned int _Idx = 0; _Head = const int&]/1558 into constexpr _Head& std::__get_helper(std::_Tuple_impl<_Idx, _Head, _Tail ...>&) [with long unsigned int __i = 0; _Head = const int&; _Tail = {}]/1559.
/usr/include/c++/11/tuple:1394:36: note: Considering inline candidate constexpr _Head& std::__get_helper(std::_Tuple_impl<_Idx, _Head, _Tail ...>&) [with long unsigned int __i = 0; _Head = const int&; _Tail = {}]/1559.
/usr/include/c++/11/tuple:1394:36: optimized:  Inlining constexpr _Head& std::__get_helper(std::_Tuple_impl<_Idx, _Head, _Tail ...>&) [with long unsigned int __i = 0; _Head = const int&; _Tail = {}]/1559 into constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >& std::get(std::tuple<_UTypes ...>&) [with long unsigned int __i = 0; _Elements = {const int&}]/1560.
/usr/include/c++/11/tuple:1819:35: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1323.
/usr/include/c++/11/tuple:1819:35: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1323 into std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {const int&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const int; _T2 = double]/1562.
/usr/include/c++/11/tuple:1819:55: note: Considering inline candidate constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >& std::get(std::tuple<_UTypes ...>&) [with long unsigned int __i = 0; _Elements = {const int&}]/1560.
/usr/include/c++/11/tuple:1819:55: optimized:  Inlining constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >& std::get(std::tuple<_UTypes ...>&) [with long unsigned int __i = 0; _Elements = {const int&}]/1560 into std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {const int&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const int; _T2 = double]/1562.
/usr/include/c++/11/tuple:1809:63: note: Considering inline candidate std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {const int&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const int; _T2 = double]/1562.
/usr/include/c++/11/tuple:1809:63: optimized:  Inlining std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {const int&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const int; _T2 = double]/1562 into std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {const int&}; _Args2 = {}; _T1 = const int; _T2 = double]/1549.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {const int&}; _Args2 = {}; _T1 = const int; _T2 = double]/1549.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {const int&}; _Args2 = {}; _T1 = const int; _T2 = double]/1549 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1539.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate void* operator new(std::size_t, void*)/938.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining void* operator new(std::size_t, void*)/938 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1539.
/usr/include/c++/11/ext/new_allocator.h:162:46: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1385.
/usr/include/c++/11/ext/new_allocator.h:162:46: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1385 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1539.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate constexpr std::tuple<_Elements>::tuple(std::tuple<_Elements>&&) [with _Elements = {const int&}]/1537.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining constexpr std::tuple<_Elements>::tuple(std::tuple<_Elements>&&) [with _Elements = {const int&}]/1537 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1539.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1384.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1384 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1539.
/usr/include/c++/11/ext/new_allocator.h:162:46: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1383.
/usr/include/c++/11/ext/new_allocator.h:162:46: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1383 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1539.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1539.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1539 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1501.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1383.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1383 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1501.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1384.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1384 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1501.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1385.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1385 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1501.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1501.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1501 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1453.
/usr/include/c++/11/bits/hashtable_policy.h:1878:54: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1482.
/usr/include/c++/11/bits/hashtable_policy.h:1878:54: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1482 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1453.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1428.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1428 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1453.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1383.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1383 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1453.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1384.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1384 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1453.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1385.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1385 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1453.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: note: Considering inline candidate std::__detail::_Hash_node<std::pair<const int, double>, false>::_Hash_node()/1451.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: optimized:  Inlining std::__detail::_Hash_node<std::pair<const int, double>, false>::_Hash_node()/1451 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1453.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: note: Considering inline candidate void* operator new(std::size_t, void*)/938.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: optimized:  Inlining void* operator new(std::size_t, void*)/938 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1453.
/usr/include/c++/11/bits/hashtable_policy.h:1874:36: note: Considering inline candidate constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1500.
/usr/include/c++/11/bits/hashtable_policy.h:1874:36: optimized:  Inlining constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1500 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1453.
/usr/include/c++/11/bits/hashtable_policy.h:1873:45: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1499.
/usr/include/c++/11/bits/hashtable_policy.h:1873:45: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1499 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1453.
/usr/include/c++/11/bits/hashtable_policy.h:1873:63: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1482.
/usr/include/c++/11/bits/hashtable_policy.h:1873:63: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1482 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1453.
/usr/include/c++/11/bits/hashtable.h:304:35: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1453.
/usr/include/c++/11/bits/hashtable.h:304:35: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1453 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1387.
/usr/include/c++/11/bits/hashtable.h:304:35: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1383.
/usr/include/c++/11/bits/hashtable.h:304:35: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1383 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1387.
/usr/include/c++/11/bits/hashtable.h:304:35: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1384.
/usr/include/c++/11/bits/hashtable.h:304:35: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1384 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1387.
/usr/include/c++/11/bits/hashtable.h:304:35: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1385.
/usr/include/c++/11/bits/hashtable.h:304:35: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1385 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1387.
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::_Rb_tree_node<int>]/1564.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::_Rb_tree_node<int>]/1564 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::_Rb_tree_node<int>]/1565.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::_Rb_tree_node<int>]/1565.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::_Rb_tree_node<int>]/1552->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::_Rb_tree_node<int>]/1565, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_tree.h:561:39: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::_Rb_tree_node<int>]/1552.
/usr/include/c++/11/bits/stl_tree.h:561:39: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::_Rb_tree_node<int>]/1552 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_node() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1542.
/usr/include/c++/11/bits/stl_tree.h:561:61: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1478.
/usr/include/c++/11/bits/stl_tree.h:561:61: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1478 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_node() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1542.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate void* operator new(std::size_t, void*)/938.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining void* operator new(std::size_t, void*)/938 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1566.
/usr/include/c++/11/ext/new_allocator.h:162:46: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1323.
/usr/include/c++/11/ext/new_allocator.h:162:46: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1323 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1566.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1566.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1566 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1553.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1323.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1323 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1553.
/usr/include/c++/11/bits/stl_tree.h:595:32: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1553.
/usr/include/c++/11/bits/stl_tree.h:595:32: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1553 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1543.
/usr/include/c++/11/bits/stl_tree.h:595:54: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1478.
/usr/include/c++/11/bits/stl_tree.h:595:54: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1478 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1543.
/usr/include/c++/11/bits/stl_tree.h:595:32: note: Considering inline candidate _Val* std::_Rb_tree_node<_Val>::_M_valptr() [with _Val = int]/1479.
/usr/include/c++/11/bits/stl_tree.h:595:32: optimized:  Inlining _Val* std::_Rb_tree_node<_Val>::_M_valptr() [with _Val = int]/1479 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1543.
/usr/include/c++/11/bits/stl_tree.h:595:32: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1323.
/usr/include/c++/11/bits/stl_tree.h:595:32: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1323 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1543.
/usr/include/c++/11/bits/stl_tree.h:594:8: note: Considering inline candidate void* operator new(std::size_t, void*)/938.
/usr/include/c++/11/bits/stl_tree.h:594:8: optimized:  Inlining void* operator new(std::size_t, void*)/938 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1543.
/usr/include/c++/11/bits/stl_tree.h:612:21: note: Considering inline candidate void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1543.
/usr/include/c++/11/bits/stl_tree.h:612:21: optimized:  Inlining void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1543 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1504.
/usr/include/c++/11/bits/stl_tree.h:612:21: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1323.
/usr/include/c++/11/bits/stl_tree.h:612:21: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1323 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1504.
/usr/include/c++/11/bits/stl_tree.h:611:34: note: Considering inline candidate std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_node() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1542.
/usr/include/c++/11/bits/stl_tree.h:611:34: optimized:  Inlining std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_node() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1542 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1504.
/usr/include/c++/11/bits/stl_tree.h:529:32: note: Considering inline candidate std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1504.
/usr/include/c++/11/bits/stl_tree.h:529:32: optimized:  Inlining std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1504 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::operator()(_Arg&&) const [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1473.
/usr/include/c++/11/bits/stl_tree.h:529:32: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1323.
/usr/include/c++/11/bits/stl_tree.h:529:32: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1323 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::operator()(_Arg&&) const [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1473.
/usr/include/c++/11/bits/stl_tree.h:1789:9: note: Considering inline candidate std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1419.
/usr/include/c++/11/bits/stl_tree.h:1789:9: optimized:  Inlining std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1419 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1413.
/usr/include/c++/11/bits/stl_tree.h:1784:29: note: Considering inline candidate std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::operator()(_Arg&&) const [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1473.
/usr/include/c++/11/bits/stl_tree.h:1784:29: optimized:  Inlining std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::operator()(_Arg&&) const [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1473 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1413.
/usr/include/c++/11/bits/stl_tree.h:1784:29: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1323.
/usr/include/c++/11/bits/stl_tree.h:1784:29: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1323 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1413.
/usr/include/c++/11/bits/stl_tree.h:1781:35: note: Considering inline candidate constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1460.
/usr/include/c++/11/bits/stl_tree.h:1781:35: optimized:  Inlining constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1460 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1413.
/usr/include/c++/11/bits/stl_tree.h:1781:35: note: Considering inline candidate const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = int]/1409.
/usr/include/c++/11/bits/stl_tree.h:1781:35: optimized:  Inlining const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = int]/1409 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1413.
/usr/include/c++/11/bits/stl_tree.h:1781:35: note: Considering inline candidate static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1469.
/usr/include/c++/11/bits/stl_tree.h:1781:35: optimized:  Inlining static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1469 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1413.
/usr/include/c++/11/bits/stl_tree.h:1780:49: note: Considering inline candidate std::_Rb_tree_node_base* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_end() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1456.
/usr/include/c++/11/bits/stl_tree.h:1780:49: optimized:  Inlining std::_Rb_tree_node_base* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_end() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1456 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1413.
/usr/include/c++/11/bits/stl_tree.h:2134:14: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_iterator<int>; _T2 = bool]/1416.
/usr/include/c++/11/bits/stl_tree.h:2134:14: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_iterator<int>; _T2 = bool]/1416 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1324.
/usr/include/c++/11/bits/stl_tree.h:2134:19: note: Considering inline candidate std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1419.
/usr/include/c++/11/bits/stl_tree.h:2134:19: optimized:  Inlining std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1419 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1324.
/usr/include/c++/11/bits/stl_tree.h:2129:11: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_iterator<int>; _T2 = bool]/1416.
/usr/include/c++/11/bits/stl_tree.h:2129:11: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_iterator<int>; _T2 = bool]/1416 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1324.
/usr/include/c++/11/bits/stl_tree.h:2129:26: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1413.
/usr/include/c++/11/bits/stl_tree.h:2129:26: missed:   will not early inline: std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1324->std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1413, growth 15 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/stl_tree.h:2129:26: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1323.
/usr/include/c++/11/bits/stl_tree.h:2129:26: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1323 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1324.
/usr/include/c++/11/bits/stl_tree.h:2128:16: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::_Alloc_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1411.
/usr/include/c++/11/bits/stl_tree.h:2128:16: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::_Alloc_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1411 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1324.
/usr/include/c++/11/bits/stl_tree.h:2124:28: note: Considering inline candidate std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408.
/usr/include/c++/11/bits/stl_tree.h:2124:28: missed:   will not early inline: std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1324->std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408, call is cold and code would grow at least by 20
/usr/include/c++/11/bits/stl_tree.h:2124:42: note: Considering inline candidate const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = int]/1409.
/usr/include/c++/11/bits/stl_tree.h:2124:42: optimized:  Inlining const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = int]/1409 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1324.
/usr/include/c++/11/bits/stl_set.h:513:14: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>&; _U2 = bool&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_const_iterator<int>; _T2 = bool]/1328.
/usr/include/c++/11/bits/stl_set.h:513:14: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>&; _U2 = bool&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_const_iterator<int>; _T2 = bool]/1328 into std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Tp>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1237.
/usr/include/c++/11/bits/stl_set.h:512:25: note: Considering inline candidate std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1324.
/usr/include/c++/11/bits/stl_set.h:512:25: missed:   will not early inline: std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Tp>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1237->std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1324, call is cold and code would grow at least by 17
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node_base*]/1567.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node_base*]/1567 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/1568.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/1568.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1554->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/1568, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1492.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1492 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1545.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1492.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1492 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1545.
/usr/include/c++/11/bits/hashtable_policy.h:1928:44: note: Considering inline candidate constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node_base*]/1555.
/usr/include/c++/11/bits/hashtable_policy.h:1928:44: optimized:  Inlining constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node_base*]/1555 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1545.
/usr/include/c++/11/bits/hashtable_policy.h:1927:52: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1554.
/usr/include/c++/11/bits/hashtable_policy.h:1927:52: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1554 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1545.
/usr/include/c++/11/bits/hashtable_policy.h:1925:28: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const int, double>, false>; _Tp = std::__detail::_Hash_node_base*]/1489.
/usr/include/c++/11/bits/hashtable_policy.h:1925:28: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const int, double>, false>; _Tp = std::__detail::_Hash_node_base*]/1489 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1545.
/usr/include/c++/11/bits/hashtable_policy.h:1925:53: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1482.
/usr/include/c++/11/bits/hashtable_policy.h:1925:53: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1482 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1545.
/usr/include/c++/11/bits/hashtable.h:440:47: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1545.
/usr/include/c++/11/bits/hashtable.h:440:47: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1521->std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1545, growth 6 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/ext/aligned_buffer.h:119:47: note: Considering inline candidate const void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() const [with _Tp = std::pair<const int, double>]/1569.
/usr/include/c++/11/ext/aligned_buffer.h:119:47: optimized:  Inlining const void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() const [with _Tp = std::pair<const int, double>]/1569 into const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = std::pair<const int, double>]/1556.
/usr/include/c++/11/bits/hashtable_policy.h:242:33: note: Considering inline candidate const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = std::pair<const int, double>]/1556.
/usr/include/c++/11/bits/hashtable_policy.h:242:33: optimized:  Inlining const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = std::pair<const int, double>]/1556 into const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = std::pair<const int, double>]/1547.
/usr/include/c++/11/bits/hashtable_policy.h:250:26: note: Considering inline candidate const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = std::pair<const int, double>]/1547.
/usr/include/c++/11/bits/hashtable_policy.h:250:26: optimized:  Inlining const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = std::pair<const int, double>]/1547 into const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const int, double>]/1525.
/usr/include/c++/11/bits/hashtable_policy.h:1617:39: note: Considering inline candidate constexpr bool std::equal_to<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1530.
/usr/include/c++/11/bits/hashtable_policy.h:1617:39: optimized:  Inlining constexpr bool std::equal_to<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1530 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1497.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: note: Considering inline candidate decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const int, double>&]/1529.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: optimized:  Inlining decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const int, double>&]/1529 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1497.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: note: Considering inline candidate const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const int, double>]/1525.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: optimized:  Inlining const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const int, double>]/1525 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1497.
/usr/include/c++/11/bits/hashtable_policy.h:1617:37: note: Considering inline candidate const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_eq() const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1524.
/usr/include/c++/11/bits/hashtable_policy.h:1617:37: optimized:  Inlining const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_eq() const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1524 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1497.
/usr/include/c++/11/bits/hashtable_policy.h:1617:18: note: Considering inline candidate static bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_S_equals(std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_code_cache<false>&) [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1523.
/usr/include/c++/11/bits/hashtable_policy.h:1617:18: optimized:  Inlining static bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_S_equals(std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_code_cache<false>&) [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1523 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1497.
/usr/include/c++/11/bits/hashtable_policy.h:1242:21: note: Considering inline candidate std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/975.
/usr/include/c++/11/bits/hashtable_policy.h:1242:21: optimized:  Inlining std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/975 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1522.
/usr/include/c++/11/bits/hashtable_policy.h:1242:21: note: Considering inline candidate std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1371.
/usr/include/c++/11/bits/hashtable_policy.h:1242:21: optimized:  Inlining std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1371 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1522.
/usr/include/c++/11/bits/hashtable_policy.h:1242:48: note: Considering inline candidate decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const int, double>&]/1529.
/usr/include/c++/11/bits/hashtable_policy.h:1242:48: optimized:  Inlining decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const int, double>&]/1529 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1522.
/usr/include/c++/11/bits/hashtable_policy.h:1242:48: note: Considering inline candidate const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const int, double>]/1525.
/usr/include/c++/11/bits/hashtable_policy.h:1242:48: optimized:  Inlining const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const int, double>]/1525 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1522.
/usr/include/c++/11/bits/hashtable.h:791:49: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1522.
/usr/include/c++/11/bits/hashtable.h:791:49: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1522 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1498.
/usr/include/c++/11/bits/hashtable.h:1838:23: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1427.
/usr/include/c++/11/bits/hashtable.h:1838:23: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1427 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1449.
/usr/include/c++/11/bits/hashtable.h:1843:39: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1498.
/usr/include/c++/11/bits/hashtable.h:1843:39: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1498 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1449.
/usr/include/c++/11/bits/hashtable.h:1843:53: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1427.
/usr/include/c++/11/bits/hashtable.h:1843:53: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1427 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1449.
/usr/include/c++/11/bits/hashtable.h:1840:23: note: Considering inline candidate bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1497.
/usr/include/c++/11/bits/hashtable.h:1840:23: optimized:  Inlining bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1497 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1449.
/usr/include/c++/11/bits/hashtable.h:810:50: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1449.
/usr/include/c++/11/bits/hashtable.h:810:50: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1449 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1373.
/usr/include/c++/11/bits/hashtable.h:1908:32: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1498.
/usr/include/c++/11/bits/hashtable.h:1908:32: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1498 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1455.
/usr/include/c++/11/bits/hashtable.h:1908:49: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1427.
/usr/include/c++/11/bits/hashtable.h:1908:49: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1427 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1455.
/usr/include/c++/11/bits/hashtable.h:2409:28: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1306.
/usr/include/c++/11/bits/hashtable.h:2409:28: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1306 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1495.
/usr/include/c++/11/bits/hashtable.h:2390:41: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1522.
/usr/include/c++/11/bits/hashtable.h:2390:41: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1522 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1495.
/usr/include/c++/11/bits/hashtable.h:2388:36: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1427.
/usr/include/c++/11/bits/hashtable.h:2388:36: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1427 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1495.
/usr/include/c++/11/bits/hashtable.h:2383:32: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1366.
/usr/include/c++/11/bits/hashtable.h:2383:32: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1366 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1495.
/usr/include/c++/11/bits/hashtable.h:2382:56: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1521.
/usr/include/c++/11/bits/hashtable.h:2382:56: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1521 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1495.
/usr/include/c++/11/bits/hashtable.h:2367:29: note: Considering inline candidate void std::__detail::_Prime_rehash_policy::_M_reset(std::__detail::_Prime_rehash_policy::_State)/983.
/usr/include/c++/11/bits/hashtable.h:2367:29: optimized:  Inlining void std::__detail::_Prime_rehash_policy::_M_reset(std::__detail::_Prime_rehash_policy::_State)/983 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1446.
/usr/include/c++/11/bits/hashtable.h:2361:17: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1495.
/usr/include/c++/11/bits/hashtable.h:2361:17: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1446->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1495, call is cold and code would grow at least by 33
/usr/include/c++/11/bits/hashtable.h:2030:14: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1425.
/usr/include/c++/11/bits/hashtable.h:2030:14: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1425 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1392.
/usr/include/c++/11/bits/hashtable.h:2028:29: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1455.
/usr/include/c++/11/bits/hashtable.h:2028:29: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1392->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1455, growth 16 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/hashtable.h:2025:26: note: Considering inline candidate void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1454.
/usr/include/c++/11/bits/hashtable.h:2025:26: optimized:  Inlining void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1454 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1392.
/usr/include/c++/11/bits/hashtable.h:2022:27: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1372.
/usr/include/c++/11/bits/hashtable.h:2022:27: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1372 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1392.
/usr/include/c++/11/bits/hashtable.h:2021:13: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1446.
/usr/include/c++/11/bits/hashtable.h:2021:13: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1392->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1446, call is cold and code would grow at least by 17
/usr/include/c++/11/bits/hashtable.h:2014:70: note: Considering inline candidate std::__detail::_Prime_rehash_policy::_State std::__detail::_Prime_rehash_policy::_M_state() const/981.
/usr/include/c++/11/bits/hashtable.h:2014:70: optimized:  Inlining std::__detail::_Prime_rehash_policy::_State std::__detail::_Prime_rehash_policy::_M_state() const/981 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1392.
/usr/include/c++/11/bits/hashtable_policy.h:717:5: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1390.
/usr/include/c++/11/bits/hashtable_policy.h:717:5: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1390 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314.
/usr/include/c++/11/bits/hashtable_policy.h:717:5: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1390.
/usr/include/c++/11/bits/hashtable_policy.h:717:5: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1390 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314.
/usr/include/c++/11/bits/hashtable_policy.h:716:14: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::pointer std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator->() const [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1393.
/usr/include/c++/11/bits/hashtable_policy.h:716:14: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::pointer std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator->() const [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1393 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314.
/usr/include/c++/11/bits/hashtable_policy.h:714:30: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1392.
/usr/include/c++/11/bits/hashtable_policy.h:714:30: missed:   will not early inline: std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1392, call is cold and code would grow at least by 17
/usr/include/c++/11/bits/hashtable_policy.h:707:42: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1387.
/usr/include/c++/11/bits/hashtable_policy.h:707:42: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1387 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314.
/usr/include/c++/11/bits/hashtable_policy.h:710:7: note: Considering inline candidate constexpr std::tuple<_Elements>::tuple(const _Elements& ...) [with bool _NotEmpty = true; typename std::enable_if<std::tuple<_Elements>::_TCC<_Dummy>::__is_implicitly_constructible<const _Elements& ...>(), bool>::type <anonymous> = true; _Elements = {const int&}]/1381.
/usr/include/c++/11/bits/hashtable_policy.h:710:7: optimized:  Inlining constexpr std::tuple<_Elements>::tuple(const _Elements& ...) [with bool _NotEmpty = true; typename std::enable_if<std::tuple<_Elements>::_TCC<_Dummy>::__is_implicitly_constructible<const _Elements& ...>(), bool>::type <anonymous> = true; _Elements = {const int&}]/1381 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314.
/usr/include/c++/11/bits/hashtable_policy.h:705:21: note: Considering inline candidate _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const int, double>]/1333.
/usr/include/c++/11/bits/hashtable_policy.h:705:21: optimized:  Inlining _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const int, double>]/1333 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314.
/usr/include/c++/11/bits/hashtable_policy.h:704:42: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1373.
/usr/include/c++/11/bits/hashtable_policy.h:704:42: missed:   will not early inline: std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1373, growth 15 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/hashtable_policy.h:703:47: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1372.
/usr/include/c++/11/bits/hashtable_policy.h:703:47: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1372 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314.
/usr/include/c++/11/bits/hashtable_policy.h:702:45: note: Considering inline candidate std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1371.
/usr/include/c++/11/bits/hashtable_policy.h:702:45: optimized:  Inlining std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1371 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314.
/usr/include/c++/11/bits/unordered_map.h:980:20: note: Considering inline candidate std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314.
/usr/include/c++/11/bits/unordered_map.h:980:20: missed:   will not early inline: std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](const key_type&) [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1227->std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314, call is cold and code would grow at least by 26
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:47:34: note: Considering inline candidate std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Tp>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1237.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:47:34: optimized:  Inlining std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Tp>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1237 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:49:41: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>& std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator++() [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1241.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:49:41: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>& std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator++() [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1241 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:50:41: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](const key_type&) [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1227.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:50:41: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](const key_type&) [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1227 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:49:41: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::reference std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator*() const [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1242.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:49:41: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::reference std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator*() const [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1242 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:49:41: note: Considering inline candidate bool std::__detail::operator!=(const std::__detail::_Node_iterator_base<std::pair<const int, double>, false>&, const std::__detail::_Node_iterator_base<std::pair<const int, double>, false>&)/1240.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:49:41: optimized:  Inlining bool std::__detail::operator!=(const std::__detail::_Node_iterator_base<std::pair<const int, double>, false>&, const std::__detail::_Node_iterator_base<std::pair<const int, double>, false>&)/1240 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:49:41: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::end() [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1239.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:49:41: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::end() [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1239 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:49:41: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::begin() [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1238.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:49:41: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::begin() [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1238 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:54:5: note: Considering inline candidate std::unordered_map<int, double>::~unordered_map()/1140.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:54:5: optimized:  Inlining std::unordered_map<int, double>::~unordered_map()/1140 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:36:49: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](const key_type&) [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1227.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:36:49: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](const key_type&) [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1227 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:34:59: note: Considering inline candidate constexpr typename __gnu_cxx::__enable_if<std::__is_integer<_Tp>::__value, double>::__type std::sin(_Tp) [with _Tp = int]/1226.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:34:59: optimized:  Inlining constexpr typename __gnu_cxx::__enable_if<std::__is_integer<_Tp>::__value, double>::__type std::sin(_Tp) [with _Tp = int]/1226 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:24:41: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map() [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1137.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:24:41: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map() [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1137 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592.
/usr/include/c++/11/bits/hashtable.h:2347:27: note: Considering inline candidate void std::__detail::_Prime_rehash_policy::_M_reset(std::__detail::_Prime_rehash_policy::_State)/983.
/usr/include/c++/11/bits/hashtable.h:2347:27: optimized:  Inlining void std::__detail::_Prime_rehash_policy::_M_reset(std::__detail::_Prime_rehash_policy::_State)/983 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1370.
/usr/include/c++/11/bits/hashtable.h:2343:11: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1446.
/usr/include/c++/11/bits/hashtable.h:2343:11: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1370->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1446, call is cold and code would grow at least by 17
/usr/include/c++/11/bits/hashtable.h:2338:12: note: Considering inline candidate constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int]/1191.
/usr/include/c++/11/bits/hashtable.h:2338:12: optimized:  Inlining constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int]/1191 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1370.
/usr/include/c++/11/bits/hashtable.h:2338:49: note: Considering inline candidate std::size_t std::__detail::_Prime_rehash_policy::_M_bkt_for_elements(std::size_t) const/980.
/usr/include/c++/11/bits/hashtable.h:2338:49: optimized:  Inlining std::size_t std::__detail::_Prime_rehash_policy::_M_bkt_for_elements(std::size_t) const/980 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1370.
/usr/include/c++/11/bits/hashtable.h:2336:70: note: Considering inline candidate std::__detail::_Prime_rehash_policy::_State std::__detail::_Prime_rehash_policy::_M_state() const/981.
/usr/include/c++/11/bits/hashtable.h:2336:70: optimized:  Inlining std::__detail::_Prime_rehash_policy::_State std::__detail::_Prime_rehash_policy::_M_state() const/981 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1370.
/usr/include/c++/11/bits/hashtable_policy.h:1108:16: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1370.
/usr/include/c++/11/bits/hashtable_policy.h:1108:16: missed:   will not early inline: void std::__detail::_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, std::integral_constant<bool, true> >::reserve(std::size_t) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1307->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1370, call is cold and code would grow at least by 20
/usr/include/c++/11/bits/hashtable_policy.h:1108:16: note: Considering inline candidate std::size_t std::__detail::_Prime_rehash_policy::_M_bkt_for_elements(std::size_t) const/980.
/usr/include/c++/11/bits/hashtable_policy.h:1108:16: optimized:  Inlining std::size_t std::__detail::_Prime_rehash_policy::_M_bkt_for_elements(std::size_t) const/980 into void std::__detail::_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, std::integral_constant<bool, true> >::reserve(std::size_t) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1307.
/usr/include/c++/11/bits/hashtable_policy.h:1108:40: note: Considering inline candidate const _RehashPolicy& std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__rehash_policy() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1369.
/usr/include/c++/11/bits/hashtable_policy.h:1108:40: optimized:  Inlining const _RehashPolicy& std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__rehash_policy() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1369 into void std::__detail::_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, std::integral_constant<bool, true> >::reserve(std::size_t) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1307.
/usr/include/c++/11/bits/unordered_map.h:1127:21: note: Considering inline candidate void std::__detail::_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, std::integral_constant<bool, true> >::reserve(std::size_t) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1307.
/usr/include/c++/11/bits/unordered_map.h:1127:21: missed:   will not early inline: void std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::reserve(std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type) [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1225->void std::__detail::_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, std::integral_constant<bool, true> >::reserve(std::size_t) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1307, growth 7 exceeds --param early-inlining-insns divided by number of calls
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:56:1: note: Considering inline candidate std::set<_Key, _Compare, _Alloc>::~set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1115.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:56:1: optimized:  Inlining std::set<_Key, _Compare, _Alloc>::~set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1115 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:56:1: note: Considering inline candidate std::unordered_map<int, double>::~unordered_map()/1140.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:56:1: optimized:  Inlining std::unordered_map<int, double>::~unordered_map()/1140 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:56:1: note: Considering inline candidate std::set<_Key, _Compare, _Alloc>::~set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1115.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:56:1: optimized:  Inlining std::set<_Key, _Compare, _Alloc>::~set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1115 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:56:1: note: Considering inline candidate std::unordered_map<int, double>::~unordered_map()/1140.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:56:1: optimized:  Inlining std::unordered_map<int, double>::~unordered_map()/1140 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:55:64: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size() const [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1244.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:55:64: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size() const [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1244 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:55:45: note: Considering inline candidate std::set<_Key, _Compare, _Alloc>::size_type std::set<_Key, _Compare, _Alloc>::size() const [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1243.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:55:45: optimized:  Inlining std::set<_Key, _Compare, _Alloc>::size_type std::set<_Key, _Compare, _Alloc>::size() const [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1243 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:15:26: note: Considering inline candidate void std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::reserve(std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type) [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1225.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:15:26: optimized:  Inlining void std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::reserve(std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type) [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1225 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:11:37: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map() [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1137.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:11:37: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map() [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1137 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:10:19: note: Considering inline candidate std::set<_Key, _Compare, _Alloc>::set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1112.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:10:19: optimized:  Inlining std::set<_Key, _Compare, _Alloc>::set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1112 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_erase.isra/1704 -> void operator delete(void*, std::size_t)/1610, function body not available
/usr/include/c++/11/bits/stl_tree.h:1786:31: missed:   not inlinable: _M_insert_.isra/1702 -> void std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)/1614, function body not available
/usr/include/c++/11/bits/hashtable.h:434:22: missed:   not inlinable: _M_rehash_aux.isra/1701 -> long int __builtin_expect(long int, long int)/1606, function body not available
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: _M_rehash_aux.isra/1701 -> long int __builtin_expect(long int, long int)/1606, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_rehash_aux.isra/1701 -> void operator delete(void*, std::size_t)/1610, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.isra/1700 -> long int __builtin_expect(long int, long int)/1606, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.isra/1700 -> void std::__throw_bad_array_new_length()/1607, function body not available
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.isra/1700 -> void std::__throw_bad_alloc()/1608, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.isra/1700 -> void* operator new(std::size_t)/1609, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:1929:23: missed:   not inlinable: _M_allocate_buckets.isra/1699 -> void* __builtin_memset(void*, int, long unsigned int)/1612, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.isra/1698 -> long int __builtin_expect(long int, long int)/1606, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.isra/1698 -> void std::__throw_bad_array_new_length()/1607, function body not available
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.isra/1698 -> void std::__throw_bad_alloc()/1608, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.isra/1698 -> void* operator new(std::size_t)/1609, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.constprop/1696 -> long int __builtin_expect(long int, long int)/1606, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.constprop/1696 -> void __builtin_unreachable()/1697, unreachable
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.constprop/1696 -> void std::__throw_bad_alloc()/1608, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.constprop/1696 -> void* operator new(std::size_t)/1609, function body not available
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:44:17: missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592 -> void __builtin_GOMP_critical_end()/1598, function body not available
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:44:17: missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592 -> void __builtin_GOMP_critical_start()/1597, function body not available
missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592 -> void __builtin_GOMP_barrier()/1596, function body not available
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:35:59: missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592 -> double sqrt(double)/1595, function body not available
/usr/include/c++/11/cmath:438:27: missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592 -> double __builtin_sin(double)/1601, function body not available
missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592 -> int __builtin_omp_get_thread_num()/1594, function body not available
missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592 -> int __builtin_omp_get_num_threads()/1593, function body not available
/usr/include/c++/11/bits/hashtable.h:2363:7: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1446 -> void __cxa_end_catch()/1605, function body not available
/usr/include/c++/11/bits/hashtable.h:2368:4: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1446 -> void __cxa_rethrow()/1604, function body not available
/usr/include/c++/11/bits/hashtable.h:2363:7: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1446 -> void* __cxa_begin_catch(void*)/1603, function body not available
/usr/include/c++/11/bits/hashtable.h:2363:7: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1446 -> void* __builtin_eh_pointer(int)/1602, function body not available
/usr/include/c++/11/bits/stl_tree.h:302:30: missed:   not inlinable: std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408 -> std::_Rb_tree_node_base* std::_Rb_tree_decrement(std::_Rb_tree_node_base*)/1613, function body not available
/usr/include/c++/11/bits/hashtable.h:2016:35: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1392 -> std::pair<bool, long unsigned int> std::__detail::_Prime_rehash_policy::_M_need_rehash(std::size_t, std::size_t, std::size_t) const/1611, function body not available
/usr/include/c++/11/bits/hashtable.h:2340:49: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1370 -> std::size_t std::__detail::_Prime_rehash_policy::_M_next_bkt(std::size_t) const/1616, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:460:28: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1370 -> double __builtin_ceil(double)/1615, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314 -> void operator delete(void*, std::size_t)/1610, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:460:28: missed:   not inlinable: void std::__detail::_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, std::integral_constant<bool, true> >::reserve(std::size_t) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1307 -> double __builtin_ceil(double)/1615, function body not available
/usr/include/c++/11/bits/hashtable.h:2321:23: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1305 -> void* __builtin_memset(void*, int, long unsigned int)/1612, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1305 -> void operator delete(void*, std::size_t)/1610, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223 -> void operator delete(void*, std::size_t)/1610, function body not available
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223 -> long int __builtin_expect(long int, long int)/1606, function body not available
/usr/include/c++/11/bits/stl_tree.h:984:17: missed:   not inlinable: unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 -> _M_erase.isra/1704, call is unlikely and code size would grow
/usr/include/c++/11/bits/unordered_map.h:102:11: missed:   not inlinable: unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 -> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1224, call is unlikely and code size would grow
missed:   not inlinable: unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 -> void __builtin_GOMP_parallel(void (*)(void*), void*, unsigned int, unsigned int)/1600, function body not available
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.constprop/1696 into _M_insert_.isra/1702 which now has time 37.740000 and size 27, net change of -8.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.isra/1700 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314 which now has time 36.629890 and size 35, net change of -14.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.isra/1698 into _M_allocate_buckets.isra/1699 which now has time 30.900000 and size 18, net change of -8.
/usr/include/c++/11/bits/unordered_map.h:980:20: missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592 -> std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/hashtable_policy.h:704:42: optimized:  Inlined _M_find_node.isra/1703 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314 which now has time 63.865072 and size 50, net change of -10.
/usr/include/c++/11/bits/unordered_map.h:1127:21: optimized:  Inlined void std::__detail::_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, std::integral_constant<bool, true> >::reserve(std::size_t) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1307 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 which now has time 80.750000 and size 59, net change of -6.
/usr/include/c++/11/bits/hashtable.h:1532:12: optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1305 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223 which now has time 157.563637 and size 25, net change of -7.
/usr/include/c++/11/bits/hashtable.h:2028:29: optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1455 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1392 which now has time 48.745000 and size 47, net change of -10.
/usr/include/c++/11/bits/hashtable.h:440:47: optimized:  Inlined _M_allocate_buckets.isra/1699 into _M_rehash_aux.isra/1701 which now has time 250.280005 and size 57, net change of -7.
/usr/include/c++/11/bits/stl_set.h:512:25: missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592 -> std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1324, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/stl_tree.h:2129:26: optimized:  Inlined _M_insert_.isra/1702 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1324 which now has time 39.730541 and size 38, net change of -13.
/usr/include/c++/11/bits/stl_tree.h:2124:28: optimized:  Inlined std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1408 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1324 which now has time 102.337360 and size 60, net change of -9.
/usr/include/c++/11/bits/hashtable_policy.h:1108:16: optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1370 into void std::__detail::_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, std::integral_constant<bool, true> >::reserve(std::size_t) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1307 which now has time 100.555000 and size 13, net change of -13.
/usr/include/c++/11/bits/hashtable.h:2343:11: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1370 -> void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1446, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/hashtable.h:2021:13: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1392 -> void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1446, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/hashtable.h:2361:17: optimized:  Inlined _M_rehash_aux.isra/1701 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1446 which now has time 244.802732 and size 71, net change of -11.
/usr/include/c++/11/bits/unordered_map.h:980:20: optimized:  Inlined std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1705 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592 which now has time 101056.209473 and size 136, net change of +41.
/usr/include/c++/11/bits/hashtable_policy.h:714:30: missed:   not inlinable: std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314 -> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1392, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/stl_tree.h:984:17: optimized:  Inlined _M_erase.isra/1708 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 which now has time 121.045909 and size 85, net change of +7.
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed:    not inlining recursively: frequency of recursive call is too large
/usr/include/c++/11/bits/unordered_map.h:102:11: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1709 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 which now has time 264.109547 and size 104, net change of +19.
/usr/include/c++/11/bits/unordered_map.h:102:11: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1711 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1592 which now has time 101199.273071 and size 155, net change of +19.
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed:    not inlining recursively: --param max-inline-recursive-depth exceeded.
/usr/include/c++/11/bits/stl_tree.h:1889:12: note: 
   Inlined 8 times, body grown from size 13 to 69, time 34.490909 to 139.523112
/usr/include/c++/11/bits/stl_tree.h:1889:12: optimized:  Inlined _M_erase.isra/1714 into _M_erase.isra/1704 which now has time 139.523112 and size 69, net change of +56.
Unit growth for small function inlining: 555->581 (4%)

Inlined 289 calls, eliminated 198 functions

/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: number of iterations cannot be computed.
/usr/include/c++/11/bits/stl_tree.h:1883:5: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/stl_tree.h:788:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed: statement clobbers memory: std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase.isra (_40);
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed: statement clobbers memory: std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase.isra (_40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_86, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_85, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_84, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_83, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_82, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_81, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_80, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_79, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_76, 40);
/usr/include/c++/11/bits/stl_tree.h:1894:5: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_tree.h:1894:5: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_function.h:400:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:788:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:780:52: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:2068:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:2068:18: missed: not vectorized: number of iterations cannot be computed.
/usr/include/c++/11/bits/stl_tree.h:2068:18: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/bits/stl_tree.h:2068:18: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
/usr/include/c++/11/bits/stl_tree.h:2115:5: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/stl_function.h:400:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:788:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:780:52: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:302:30: missed: statement clobbers memory: _32 = std::_Rb_tree_decrement (__y_62);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _58 = operator new (40);
/usr/include/c++/11/bits/stl_tree.h:1786:31: missed: statement clobbers memory: std::_Rb_tree_insert_and_rebalance (prephitmp_55, _58, SR.298_24, _22);
/usr/include/c++/11/bits/stl_tree.h:2115:5: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_tree.h:2115:5: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable_policy.h:283:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2391:22: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:44: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:21: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:37: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2393:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2395:29: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2396:17: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2397:31: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2386:14: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable.h:2386:14: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable.h:2355:5: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/hashtable_policy.h:283:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2391:22: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:44: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:21: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:37: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2393:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2395:29: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2396:17: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2397:31: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2355:5: missed: splitting region at control altering definition _50 = operator new (_49);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: not vectorized: statement can throw an exception: _50 = operator new (_49);
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: splitting region at dominance boundary bb11
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: splitting region at dominance boundary bb5
/usr/include/c++/11/bits/hashtable_policy.h:1929:23: missed: statement clobbers memory: __builtin_memset (_50, 0, _49);
/usr/include/c++/11/bits/hashtable.h:437:14: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable.h:437:14: missed: splitting region at dominance boundary bb22
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: not vectorized: statement can throw an exception: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: not vectorized: statement can throw an exception: std::__throw_bad_array_new_length ();
/usr/include/c++/11/ext/new_allocator.h:116:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: splitting region at dominance boundary bb3
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: statement clobbers memory: _1 = __builtin_eh_pointer (1);
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: statement clobbers memory: __cxa_begin_catch (_1);
/usr/include/c++/11/bits/hashtable.h:2368:4: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/11/bits/hashtable.h:2363:7: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:2363:7: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: splitting region at dominance boundary bb12
/usr/include/c++/11/bits/hashtable.h:437:14: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:437:14: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_36, _41);
/usr/include/c++/11/bits/hashtable.h:2370:5: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:2370:5: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:2016:35: missed: statement clobbers memory: __do_rehash = std::__detail::_Prime_rehash_policy::_M_need_rehash (_1, _3, _2, __n_elt_14(D));
/usr/include/c++/11/bits/hashtable.h:2021:13: missed: statement clobbers memory: std::_Hashtable<int, std::pair<const int, double>, std::allocator<std::pair<const int, double> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash (this_10(D), _5, &D.63953);
/usr/include/c++/11/bits/hashtable.h:2030:29: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:2030:29: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable_policy.h:1617:29: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1617:29: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable_policy.h:696:5: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/hashtable.h:1843:14: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:696:5: missed: splitting region at control altering definition __pos = std::_Hashtable<int, std::pair<const int, double>, std::allocator<std::pair<const int, double> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node (this_3(D), _12, _6, _47, 1);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _47 = operator new (24);
/usr/include/c++/11/bits/hashtable_policy.h:714:30: missed: not vectorized: statement can throw an exception: __pos = std::_Hashtable<int, std::pair<const int, double>, std::allocator<std::pair<const int, double> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node (this_3(D), _12, _6, _47, 1);
/usr/include/c++/11/bits/hashtable_policy.h:714:30: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/bits/hashtable_policy.h:714:30: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
/usr/include/c++/11/bits/hashtable_policy.h:714:30: missed: splitting region at dominance boundary bb10
/usr/include/c++/11/bits/hashtable_policy.h:716:21: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable_policy.h:716:21: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable_policy.h:716:21: missed: splitting region at dominance boundary bb11
/usr/include/c++/11/bits/hashtable_policy.h:696:5: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_47, 24);
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:35:59: missed: statement clobbers memory: _169 = sqrt (_47);
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: not vectorized: number of iterations cannot be computed.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:49:41: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:49:41: missed: not vectorized: number of iterations cannot be computed.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:27:33: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:27:33: missed: not vectorized: multiple nested loops.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:30:48: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:30:48: missed: not vectorized: multiple nested loops.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:30:61: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:30:61: missed: not vectorized: multiple nested loops.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:31:25: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:31:25: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable_policy.h:1617:29: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1617:29: missed: not vectorized: control flow in loop.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: vectorized 0 loops in function.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:50:50: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/unordered_map.h:980:20: missed: statement clobbers memory: _72 = std::__detail::_Map_base<int, std::pair<const int, double>, std::allocator<std::pair<const int, double> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[] (_71, _60);
/usr/include/c++/11/bits/hashtable.h:1843:14: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:283:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1904:7: missed: failed: evolution of base is not affine.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_139, 24);
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: missed: splitting region at control altering definition __pos = std::_Hashtable<int, std::pair<const int, double>, std::allocator<std::pair<const int, double> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node (&thread_integrals._M_h, _93, _91, _122, 1);
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:35:59: missed: statement clobbers memory: _169 = sqrt (_47);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _122 = operator new (24);
/usr/include/c++/11/bits/hashtable_policy.h:714:30: missed: not vectorized: statement can throw an exception: __pos = std::_Hashtable<int, std::pair<const int, double>, std::allocator<std::pair<const int, double> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node (&thread_integrals._M_h, _93, _91, _122, 1);
/usr/include/c++/11/bits/hashtable_policy.h:714:30: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/bits/hashtable_policy.h:714:30: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
/usr/include/c++/11/bits/hashtable_policy.h:714:30: missed: splitting region at dominance boundary bb23
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_117, 24);
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: splitting region at dominance boundary bb24
/usr/include/c++/11/bits/hashtable_policy.h:716:21: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable_policy.h:716:21: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable_policy.h:716:21: missed: splitting region at dominance boundary bb26
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:36:51: note: ***** Analysis failed with vector mode V2DF
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:36:51: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DF
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:36:51: missed: splitting region at dominance boundary bb12
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:32:46: note: ***** Analysis failed with vector mode V4SI
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:32:46: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:32:46: missed: splitting region at loop 4 exit at bb10
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:29:41: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:29:41: missed: splitting region at loop 3 exit at bb9
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:28:37: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:28:37: missed: splitting region at dominance boundary bb7
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:27:33: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:27:33: missed: splitting region at dominance boundary bb27
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:27:33: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:27:33: missed: splitting region at dominance boundary bb44
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:44:17: missed: statement clobbers memory: __builtin_GOMP_critical_start ();
/usr/include/c++/11/bits/unordered_map.h:980:20: missed: statement clobbers memory: _72 = std::__detail::_Map_base<int, std::pair<const int, double>, std::allocator<std::pair<const int, double> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[] (_71, _60);
/usr/include/c++/11/bits/stl_set.h:512:25: missed: statement clobbers memory: __p = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique<const int&> (_73, &thread_found_keys);
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:44:17: missed: statement clobbers memory: __builtin_GOMP_critical_end ();
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_139, 24);
/usr/include/c++/11/bits/hashtable.h:2321:23: missed: statement clobbers memory: __builtin_memset (_135, 0, _134);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_124, _129);
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: ***** Analysis failed with vector mode V2DI
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: missed: splitting region at dominance boundary bb45
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: missed: splitting region at dominance boundary bb46
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: missed: splitting region at dominance boundary bb47
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: number of iterations cannot be computed.
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: not vectorized: number of iterations cannot be computed.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:9:14: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/stl_tree.h:788:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed: statement clobbers memory: std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase.isra (_72);
/usr/include/c++/11/bits/hashtable_policy.h:283:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1904:7: missed: failed: evolution of base is not affine.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_92, 24);
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:9:14: missed: splitting region at control altering definition _69 = std::__detail::_Prime_rehash_policy::_M_next_bkt (&MEM[(struct _Hashtable *)&integrals]._M_rehash_policy, _62);
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:9:14: missed: statement clobbers memory: __builtin_GOMP_parallel (_Z29CalculateTwoElectronIntegralsbi._omp_fn.0, &.omp_data_o.8, 0, 0);
/usr/include/c++/11/bits/hashtable.h:2340:49: missed: not vectorized: statement can throw an exception: _69 = std::__detail::_Prime_rehash_policy::_M_next_bkt (&MEM[(struct _Hashtable *)&integrals]._M_rehash_policy, _62);
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: ***** Analysis succeeded with vector mode V4SI
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: SLPing BB part
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: Costing subgraph: 
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: node 0x108ab8e8 (max_nunits=2, refcnt=1)
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: op template: .omp_data_o.8.found_keys = &found_keys;
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: 	stmt 0 .omp_data_o.8.found_keys = &found_keys;
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: 	stmt 1 .omp_data_o.8.integrals = &integrals;
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: 	children 0x108ab960
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: node (external) 0x108ab960 (max_nunits=1, refcnt=1)
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: 	{ &found_keys, &integrals }
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: Cost model analysis: 
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: Cost model analysis for part in loop 0:
  Vector cost: 20
  Scalar cost: 24
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: Basic block will be vectorized using SLP
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: Vectorizing SLP tree:
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: node 0x108ab8e8 (max_nunits=2, refcnt=1)
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: op template: .omp_data_o.8.found_keys = &found_keys;
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: 	stmt 0 .omp_data_o.8.found_keys = &found_keys;
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: 	stmt 1 .omp_data_o.8.integrals = &integrals;
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: 	children 0x108ab960
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: node (external) 0x108ab960 (max_nunits=1, refcnt=1)
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: 	{ &found_keys, &integrals }
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: ------>vectorizing SLP node starting from: .omp_data_o.8.found_keys = &found_keys;
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: vect_is_simple_use: operand &integrals, type of def: external
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: conflicting alias set types.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: transform store. ncopies = 1
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: .omp_data_o.8.found_keys
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: created &.omp_data_o.8.found_keys
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: add new stmt: MEM <vector(2) long unsigned int> [(void *)&.omp_data_o.8] = _130;
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: vectorizing stmts using SLP.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: optimized: basic block part vectorized using 16 byte vectors
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: ***** The result for vector mode V16QI would be the same
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: missed: splitting region at dominance boundary bb4
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: missed: splitting region at dominance boundary bb17
/usr/include/c++/11/bits/hashtable.h:2343:11: missed: not vectorized: statement can throw an exception: std::_Hashtable<int, std::pair<const int, double>, std::allocator<std::pair<const int, double> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash (&integrals._M_h, _69, &D.68682);
/usr/include/c++/11/bits/hashtable.h:2343:11: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:2343:11: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:2343:11: missed: splitting region at dominance boundary bb8
/usr/include/c++/11/bits/hashtable.h:2321:23: missed: statement clobbers memory: __builtin_memset (_100, 0, _99);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_89, _94);
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:9:14: missed: not vectorized: statement can throw an exception: resx 3
/usr/include/c++/11/bits/stl_tree.h:984:17: missed: statement clobbers memory: std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase.isra (_23);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_96, 24);
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: splitting region at dominance boundary bb9
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:9:14: missed: statement clobbers memory: __builtin_GOMP_parallel (_Z29CalculateTwoElectronIntegralsbi._omp_fn.0, &.omp_data_o.8, 0, 0);
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: ***** Analysis succeeded with vector mode V4SI
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: SLPing BB part
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: Costing subgraph: 
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: node 0x108ab8e8 (max_nunits=2, refcnt=1)
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: op template: .omp_data_o.8.found_keys = &found_keys;
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: 	stmt 0 .omp_data_o.8.found_keys = &found_keys;
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: 	stmt 1 .omp_data_o.8.integrals = &integrals;
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: 	children 0x108ab960
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: node (external) 0x108ab960 (max_nunits=1, refcnt=1)
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: 	{ &found_keys, &integrals }
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: Cost model analysis: 
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: Cost model analysis for part in loop 0:
  Vector cost: 20
  Scalar cost: 24
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: Basic block will be vectorized using SLP
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: Vectorizing SLP tree:
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: node 0x108ab8e8 (max_nunits=2, refcnt=1)
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: op template: .omp_data_o.8.found_keys = &found_keys;
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: 	stmt 0 .omp_data_o.8.found_keys = &found_keys;
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: 	stmt 1 .omp_data_o.8.integrals = &integrals;
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: 	children 0x108ab960
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: node (external) 0x108ab960 (max_nunits=1, refcnt=1)
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: 	{ &found_keys, &integrals }
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: ------>vectorizing SLP node starting from: .omp_data_o.8.found_keys = &found_keys;
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: vect_is_simple_use: operand &integrals, type of def: external
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: conflicting alias set types.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: transform store. ncopies = 1
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: create vector_type-pointer variable to type: vector(2) long unsigned int  vectorizing a pointer ref: .omp_data_o.8.found_keys
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: created &.omp_data_o.8.found_keys
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: add new stmt: MEM <vector(2) long unsigned int> [(void *)&.omp_data_o.8] = _111;
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: vectorizing stmts using SLP.
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: optimized: basic block part vectorized using 16 byte vectors
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:21:13: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_92, 24);
/usr/include/c++/11/bits/hashtable.h:2321:23: missed: statement clobbers memory: __builtin_memset (_87, 0, _86);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_76, _81);
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed: statement clobbers memory: std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase.isra (_72);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_91, 40);
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:55:65: note: ***** Analysis failed with vector mode V2DI
/workspace/llm_outputs/multi_step_benchmarks_minibench30_no_hint_V1_attemp_2/gpt-4o-mini/benchmark_1277/step_4.cpp:55:65: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:2321:23: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605.
/usr/include/c++/11/bits/basic_string.h:2321:23: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605 into const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1356.
/usr/include/c++/11/bits/basic_string.h:340:39: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450.
/usr/include/c++/11/bits/basic_string.h:340:39: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_limit(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1736.
/usr/include/c++/11/bits/basic_string.h:339:44: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450.
/usr/include/c++/11/bits/basic_string.h:339:44: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_limit(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1736.
/usr/include/c++/11/bits/basic_string.h:321:28: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450.
/usr/include/c++/11/bits/basic_string.h:321:28: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1687.
/usr/include/c++/11/bits/basic_string.h:320:24: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450.
/usr/include/c++/11/bits/basic_string.h:320:24: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1687.
/usr/include/c++/11/bits/basic_string.h:225:21: note: Considering inline candidate static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/854.
/usr/include/c++/11/bits/basic_string.h:225:21: optimized:  Inlining static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/854 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1626.
/usr/include/c++/11/bits/basic_string.h:225:29: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605.
/usr/include/c++/11/bits/basic_string.h:225:29: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1626.
/usr/include/c++/11/bits/basic_string.h:224:11: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1625.
/usr/include/c++/11/bits/basic_string.h:224:11: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1625 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1626.
/usr/include/c++/11/bits/char_traits.h:171:17: note: Considering inline candidate static constexpr bool __gnu_cxx::char_traits<_CharT>::eq(const char_type&, const char_type&) [with _CharT = char]/860.
/usr/include/c++/11/bits/char_traits.h:171:17: optimized:  Inlining static constexpr bool __gnu_cxx::char_traits<_CharT>::eq(const char_type&, const char_type&) [with _CharT = char]/860 into static constexpr std::size_t __gnu_cxx::char_traits<_CharT>::length(const char_type*) [with _CharT = char]/861.
/usr/include/c++/11/bits/char_traits.h:396:25: optimized:   Inlining constexpr bool std::__constant_string_p(const _CharT*) [with _CharT = char]/859 into static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862 (always_inline).
/usr/include/c++/11/bits/char_traits.h:397:52: note: Considering inline candidate static constexpr std::size_t __gnu_cxx::char_traits<_CharT>::length(const char_type*) [with _CharT = char]/861.
/usr/include/c++/11/bits/char_traits.h:397:52: optimized:  Inlining static constexpr std::size_t __gnu_cxx::char_traits<_CharT>::length(const char_type*) [with _CharT = char]/861 into static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862.
/usr/include/c++/11/bits/basic_string.h:1459:19: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450.
/usr/include/c++/11/bits/basic_string.h:1459:19: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1450 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1686.
/usr/include/c++/11/bits/basic_string.h:1459:19: note: Considering inline candidate static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862.
/usr/include/c++/11/bits/basic_string.h:1459:19: optimized:  Inlining static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1686.
/usr/include/c++/11/bits/basic_string.h:690:28: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1686.
/usr/include/c++/11/bits/basic_string.h:690:28: missed:   will not early inline: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1595->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1686, growth 7 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/basic_string.h:2494:20: note: Considering inline candidate static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862.
/usr/include/c++/11/bits/basic_string.h:2494:20: optimized:  Inlining static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1596.
/usr/include/c++/11/bits/basic_string.h:359:21: note: Considering inline candidate static std::char_traits<char>::char_type* std::char_traits<char>::copy(std::char_traits<char>::char_type*, const char_type*, std::size_t)/866.
/usr/include/c++/11/bits/basic_string.h:359:21: optimized:  Inlining static std::char_traits<char>::char_type* std::char_traits<char>::copy(std::char_traits<char>::char_type*, const char_type*, std::size_t)/866 into static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1779.
/usr/include/c++/11/bits/basic_string.h:357:23: note: Considering inline candidate static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/854.
/usr/include/c++/11/bits/basic_string.h:357:23: optimized:  Inlining static constexpr void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)/854 into static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1779.
/usr/include/c++/11/bits/basic_string.h:406:16: note: Considering inline candidate static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1779.
/usr/include/c++/11/bits/basic_string.h:406:16: optimized:  Inlining static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1779 into static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1735.
/usr/include/c++/11/bits/basic_ios.h:158:20: note: Considering inline candidate constexpr std::_Ios_Iostate std::operator|(std::_Ios_Iostate, std::_Ios_Iostate)/1225.
/usr/include/c++/11/bits/basic_ios.h:158:20: optimized:  Inlining constexpr std::_Ios_Iostate std::operator|(std::_Ios_Iostate, std::_Ios_Iostate)/1225 into void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/1691.
/usr/include/c++/11/bits/basic_ios.h:158:20: note: Considering inline candidate std::ios_base::iostate std::basic_ios<_CharT, _Traits>::rdstate() const [with _CharT = char; _Traits = std::char_traits<char>]/1737.
/usr/include/c++/11/bits/basic_ios.h:158:20: optimized:  Inlining std::ios_base::iostate std::basic_ios<_CharT, _Traits>::rdstate() const [with _CharT = char; _Traits = std::char_traits<char>]/1737 into void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/1691.
/usr/include/c++/11/ostream:617:44: note: Considering inline candidate static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862.
/usr/include/c++/11/ostream:617:44: optimized:  Inlining static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862 into std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600.
/usr/include/c++/11/ostream:614:16: note: Considering inline candidate void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/1691.
/usr/include/c++/11/ostream:614:16: optimized:  Inlining void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/1691 into std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600.
/usr/include/c++/11/chrono:666:9: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::duration(const _Rep2&) [with _Rep2 = long int; <template-parameter-2-2> = void; _Rep = long int; _Period = std::ratio<1, 1000000000>]/688.
/usr/include/c++/11/chrono:666:9: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::duration(const _Rep2&) [with _Rep2 = long int; <template-parameter-2-2> = void; _Rep = long int; _Period = std::ratio<1, 1000000000>]/688 into constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1308.
/usr/include/c++/11/chrono:666:53: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/680.
/usr/include/c++/11/chrono:666:53: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/680 into constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1308.
/usr/include/c++/11/chrono:666:31: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/680.
/usr/include/c++/11/chrono:666:31: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/680 into constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1308.
/usr/include/c++/11/chrono:1044:41: note: Considering inline candidate constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1308.
/usr/include/c++/11/chrono:1044:41: optimized:  Inlining constexpr typename std::common_type<std::chrono::duration<_Rep1, _Period1>, std::chrono::duration<_Rep2, _Period2> >::type std::chrono::operator-(const std::chrono::duration<_Rep1, _Period1>&, const std::chrono::duration<_Rep2, _Period2>&) [with _Rep1 = long int; _Period1 = std::ratio<1, 1000000000>; _Rep2 = long int; _Period2 = std::ratio<1, 1000000000>]/1308 into constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1309.
/usr/include/c++/11/chrono:1044:38: note: Considering inline candidate constexpr std::chrono::time_point<_Clock, _Dur>::duration std::chrono::time_point<_Clock, _Dur>::time_since_epoch() const [with _Clock = std::chrono::_V2::system_clock; _Dur = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/699.
/usr/include/c++/11/chrono:1044:38: optimized:  Inlining constexpr std::chrono::time_point<_Clock, _Dur>::duration std::chrono::time_point<_Clock, _Dur>::time_since_epoch() const [with _Clock = std::chrono::_V2::system_clock; _Dur = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/699 into constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1309.
/usr/include/c++/11/chrono:1044:65: note: Considering inline candidate constexpr std::chrono::time_point<_Clock, _Dur>::duration std::chrono::time_point<_Clock, _Dur>::time_since_epoch() const [with _Clock = std::chrono::_V2::system_clock; _Dur = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/699.
/usr/include/c++/11/chrono:1044:65: optimized:  Inlining constexpr std::chrono::time_point<_Clock, _Dur>::duration std::chrono::time_point<_Clock, _Dur>::time_since_epoch() const [with _Clock = std::chrono::_V2::system_clock; _Dur = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/699 into constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1309.
/usr/include/c++/11/ext/string_conversions.h:94:5: note: Considering inline candidate __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1361.
/usr/include/c++/11/ext/string_conversions.h:94:5: optimized:  Inlining __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1361 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365.
/usr/include/c++/11/ext/string_conversions.h:94:5: note: Considering inline candidate __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1361.
/usr/include/c++/11/ext/string_conversions.h:94:5: optimized:  Inlining __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1361 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365.
/usr/include/c++/11/ext/string_conversions.h:85:25: note: Considering inline candidate static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1364.
/usr/include/c++/11/ext/string_conversions.h:85:25: optimized:  Inlining static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1364 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365.
/usr/include/c++/11/ext/string_conversions.h:66:15: note: Considering inline candidate __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1358.
/usr/include/c++/11/ext/string_conversions.h:66:15: optimized:  Inlining __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1358 into _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365.
/usr/include/c++/11/bits/basic_string.h:6620:40: note: Considering inline candidate _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365.
/usr/include/c++/11/bits/basic_string.h:6620:40: missed:   will not early inline: int std::__cxx11::stoi(const string&, std::size_t*, int)/1086->_Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365, call is cold and code would grow at least by 26
/usr/include/c++/11/bits/basic_string.h:6620:40: note: Considering inline candidate const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1356.
/usr/include/c++/11/bits/basic_string.h:6620:40: optimized:  Inlining const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1356 into int std::__cxx11::stoi(const string&, std::size_t*, int)/1086.
/usr/include/c++/11/chrono:226:13: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::duration(const _Rep2&) [with _Rep2 = long int; <template-parameter-2-2> = void; _Rep = long int; _Period = std::ratio<1, 1000>]/1603.
/usr/include/c++/11/chrono:226:13: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::duration(const _Rep2&) [with _Rep2 = long int; <template-parameter-2-2> = void; _Rep = long int; _Period = std::ratio<1, 1000>]/1603 into static constexpr _ToDur std::chrono::__duration_cast_impl<_ToDur, _CF, _CR, true, false>::__cast(const std::chrono::duration<_Rep, _Period>&) [with _Rep = long int; _Period = std::ratio<1, 1000000000>; _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _CF = std::ratio<1, 1000000>; _CR = long int]/1306.
/usr/include/c++/11/chrono:227:34: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/680.
/usr/include/c++/11/chrono:227:34: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000000000>]/680 into static constexpr _ToDur std::chrono::__duration_cast_impl<_ToDur, _CF, _CR, true, false>::__cast(const std::chrono::duration<_Rep, _Period>&) [with _Rep = long int; _Period = std::ratio<1, 1000000000>; _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _CF = std::ratio<1, 1000000>; _CR = long int]/1306.
/usr/include/c++/11/chrono:276:21: note: Considering inline candidate static constexpr _ToDur std::chrono::__duration_cast_impl<_ToDur, _CF, _CR, true, false>::__cast(const std::chrono::duration<_Rep, _Period>&) [with _Rep = long int; _Period = std::ratio<1, 1000000000>; _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _CF = std::ratio<1, 1000000>; _CR = long int]/1306.
/usr/include/c++/11/chrono:276:21: optimized:  Inlining static constexpr _ToDur std::chrono::__duration_cast_impl<_ToDur, _CF, _CR, true, false>::__cast(const std::chrono::duration<_Rep, _Period>&) [with _Rep = long int; _Period = std::ratio<1, 1000000000>; _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _CF = std::ratio<1, 1000000>; _CR = long int]/1306 into constexpr std::chrono::__enable_if_is_duration<_ToDur> std::chrono::duration_cast(const std::chrono::duration<_Rep, _Period>&) [with _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _Rep = long int; _Period = std::ratio<1, 1000000000>]/1307.
/usr/include/c++/11/bits/allocator.h:156:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = char]/1607.
/usr/include/c++/11/bits/allocator.h:156:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = char]/1607 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = char]/1610.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = char]/1610 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
/usr/include/c++/11/bits/basic_string.h:158:14: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
/usr/include/c++/11/bits/basic_string.h:158:14: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433 into std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:141:29: note: Considering inline candidate constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const char*]/1683.
/usr/include/c++/11/bits/stl_iterator_base_funcs.h:141:29: optimized:  Inlining constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const char*]/1683 into constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char*]/1684.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = char]/1692.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = char]/1692 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = char]/1693.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = char]/1693.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = char]/1693 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = char]/1694.
/usr/include/c++/11/bits/basic_string.h:201:49: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = char]/1694.
/usr/include/c++/11/bits/basic_string.h:201:49: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = char]/1694 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1612.
/usr/include/c++/11/bits/basic_string.tcc:232:15: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1626.
/usr/include/c++/11/bits/basic_string.tcc:232:15: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1626 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.tcc:225:25: note: Considering inline candidate static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1735.
/usr/include/c++/11/bits/basic_string.tcc:225:25: optimized:  Inlining static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1735 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.tcc:225:25: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605.
/usr/include/c++/11/bits/basic_string.tcc:225:25: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.tcc:220:17: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1624.
/usr/include/c++/11/bits/basic_string.tcc:220:17: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1624 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1623.
/usr/include/c++/11/bits/basic_string.tcc:219:13: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1623 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.tcc:215:57: note: Considering inline candidate constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char*]/1684.
/usr/include/c++/11/bits/basic_string.tcc:215:57: optimized:  Inlining constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char*]/1684 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.tcc:211:34: note: Considering inline candidate bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = const char]/1734.
/usr/include/c++/11/bits/basic_string.tcc:211:34: optimized:  Inlining bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = const char]/1734 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.h:255:23: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.h:255:23: missed:   will not early inline: void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1704->void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685, growth 24 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/basic_string.h:274:20: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1704.
/usr/include/c++/11/bits/basic_string.h:274:20: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1704 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1637.
/usr/include/c++/11/bits/allocator.h:160:34: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = char]/1739.
/usr/include/c++/11/bits/allocator.h:160:34: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = char]/1739 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1696.
/usr/include/c++/11/bits/basic_string.h:165:35: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1696.
/usr/include/c++/11/bits/basic_string.h:165:35: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1696 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1614.
/usr/include/c++/11/bits/basic_string.h:540:7: note: Considering inline candidate std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436.
/usr/include/c++/11/bits/basic_string.h:540:7: optimized:  Inlining std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592.
/usr/include/c++/11/bits/basic_string.h:539:14: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685.
/usr/include/c++/11/bits/basic_string.h:539:14: missed:   will not early inline: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592->void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1685, growth 24 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/basic_string.h:536:55: note: Considering inline candidate static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862.
/usr/include/c++/11/bits/basic_string.h:536:55: optimized:  Inlining static constexpr std::size_t std::char_traits<char>::length(const char_type*)/862 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592.
/usr/include/c++/11/bits/basic_string.h:534:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1614.
/usr/include/c++/11/bits/basic_string.h:534:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1614 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592.
/usr/include/c++/11/bits/basic_string.h:534:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1612.
/usr/include/c++/11/bits/basic_string.h:534:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1612 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592.
/usr/include/c++/11/bits/basic_string.h:168:46: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1696.
/usr/include/c++/11/bits/basic_string.h:168:46: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char]/1696 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1620.
/usr/include/c++/11/bits/basic_string.h:168:28: note: Considering inline candidate constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<char>&]/1618.
/usr/include/c++/11/bits/basic_string.h:168:28: optimized:  Inlining constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<char>&]/1618 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1620.
/usr/include/c++/11/bits/basic_string.h:491:7: note: Considering inline candidate std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436.
/usr/include/c++/11/bits/basic_string.h:491:7: optimized:  Inlining std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:490:14: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1637.
/usr/include/c++/11/bits/basic_string.h:490:14: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1637 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:490:48: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_limit(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1736.
/usr/include/c++/11/bits/basic_string.h:490:48: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_limit(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1736 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:489:20: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1687.
/usr/include/c++/11/bits/basic_string.h:489:20: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1687 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:488:39: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605.
/usr/include/c++/11/bits/basic_string.h:488:39: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:486:9: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
/usr/include/c++/11/bits/basic_string.h:486:9: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:486:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1620.
/usr/include/c++/11/bits/basic_string.h:486:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1620 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:486:9: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1612.
/usr/include/c++/11/bits/basic_string.h:486:9: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1612 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:486:9: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430.
/usr/include/c++/11/bits/basic_string.h:486:9: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:2856:52: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689.
/usr/include/c++/11/bits/basic_string.h:2856:52: missed:   will not early inline: std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689, growth 13 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/basic_string.h:2856:52: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1687.
/usr/include/c++/11/bits/basic_string.h:2856:52: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1687 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = const char]/1742.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = const char]/1742 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = const char]/1743.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = const char]/1743.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = const char]/1743 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const char]/1744.
/usr/include/c++/11/bits/basic_string.h:211:55: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const char]/1744.
/usr/include/c++/11/bits/basic_string.h:211:55: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const char]/1744 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1699.
/usr/include/c++/11/bits/basic_string.h:230:42: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1699.
/usr/include/c++/11/bits/basic_string.h:230:42: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1699 into bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1622.
/usr/include/c++/11/bits/basic_string.h:230:23: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605.
/usr/include/c++/11/bits/basic_string.h:230:23: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605 into bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1622.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = char]/1780.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = char]/1780 into static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = char]/1741.
/usr/include/c++/11/bits/basic_string.h:245:34: note: Considering inline candidate static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = char]/1741.
/usr/include/c++/11/bits/basic_string.h:245:34: optimized:  Inlining static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = char]/1741 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1698.
/usr/include/c++/11/bits/basic_string.h:245:51: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1617.
/usr/include/c++/11/bits/basic_string.h:245:51: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1617 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1698.
/usr/include/c++/11/bits/basic_string.h:245:34: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605.
/usr/include/c++/11/bits/basic_string.h:245:34: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1605 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1698.
/usr/include/c++/11/bits/basic_string.h:240:14: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1698.
/usr/include/c++/11/bits/basic_string.h:240:14: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1698 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1616.
/usr/include/c++/11/bits/basic_string.h:239:18: note: Considering inline candidate bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1622.
/usr/include/c++/11/bits/basic_string.h:239:18: optimized:  Inlining bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1622 into void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1616.
/usr/include/c++/11/bits/basic_string.h:672:23: note: Considering inline candidate std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436.
/usr/include/c++/11/bits/basic_string.h:672:23: optimized:  Inlining std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()/1436 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
/usr/include/c++/11/bits/basic_string.h:672:19: note: Considering inline candidate void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1616.
/usr/include/c++/11/bits/basic_string.h:672:19: optimized:  Inlining void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1616 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:40:1: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:40:1: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:19:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:19:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:18:76: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:18:76: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:17:72: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:17:72: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:8:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
harness.cpp:8:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433 into int main(int, char**)/1310.
harness.cpp:8:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
harness.cpp:8:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433 into int main(int, char**)/1310.
harness.cpp:40:1: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:40:1: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:38:43: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600.
harness.cpp:38:43: missed:   will not early inline: int main(int, char**)/1310->std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600, growth 4 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:37:18: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600.
harness.cpp:37:18: missed:   will not early inline: int main(int, char**)/1310->std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600, growth 4 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:36:87: note: Considering inline candidate std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>]/1601.
harness.cpp:36:87: optimized:  Inlining std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>]/1601 into int main(int, char**)/1310.
harness.cpp:36:87: note: Considering inline candidate constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000>]/1299.
harness.cpp:36:87: optimized:  Inlining constexpr std::chrono::duration<_Rep, _Period>::rep std::chrono::duration<_Rep, _Period>::count() const [with _Rep = long int; _Period = std::ratio<1, 1000>]/1299 into int main(int, char**)/1310.
harness.cpp:36:71: note: Considering inline candidate constexpr std::chrono::__enable_if_is_duration<_ToDur> std::chrono::duration_cast(const std::chrono::duration<_Rep, _Period>&) [with _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _Rep = long int; _Period = std::ratio<1, 1000000000>]/1307.
harness.cpp:36:71: optimized:  Inlining constexpr std::chrono::__enable_if_is_duration<_ToDur> std::chrono::duration_cast(const std::chrono::duration<_Rep, _Period>&) [with _ToDur = std::chrono::duration<long int, std::ratio<1, 1000> >; _Rep = long int; _Period = std::ratio<1, 1000000000>]/1307 into int main(int, char**)/1310.
harness.cpp:36:77: note: Considering inline candidate constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1309.
harness.cpp:36:77: optimized:  Inlining constexpr typename std::common_type<_Duration1, _Duration2>::type std::chrono::operator-(const std::chrono::time_point<_Clock, _Duration1>&, const std::chrono::time_point<_Clock, _Duration2>&) [with _Clock = std::chrono::_V2::system_clock; _Dur1 = std::chrono::duration<long int, std::ratio<1, 1000000000> >; _Dur2 = std::chrono::duration<long int, std::ratio<1, 1000000000> >]/1309 into int main(int, char**)/1310.
harness.cpp:35:18: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600.
harness.cpp:35:18: optimized:  Inlining std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/1600 into int main(int, char**)/1310.
harness.cpp:23:29: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char) [with _Traits = std::char_traits<char>]/1599.
harness.cpp:23:29: optimized:  Inlining std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char) [with _Traits = std::char_traits<char>]/1599 into int main(int, char**)/1310.
harness.cpp:23:22: note: Considering inline candidate std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>]/1598.
harness.cpp:23:22: optimized:  Inlining std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>]/1598 into int main(int, char**)/1310.
harness.cpp:21:14: note: Considering inline candidate bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1594.
harness.cpp:21:14: optimized:  Inlining bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1594 into int main(int, char**)/1310.
harness.cpp:19:5: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:19:5: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:18:76: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:18:76: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:18:65: note: Considering inline candidate int std::__cxx11::stoi(const string&, std::size_t*, int)/1086.
harness.cpp:18:65: optimized:  Inlining int std::__cxx11::stoi(const string&, std::size_t*, int)/1086 into int main(int, char**)/1310.
harness.cpp:18:76: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597.
harness.cpp:18:76: missed:   will not early inline: int main(int, char**)/1310->std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597, growth 7 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:18:27: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1596.
harness.cpp:18:27: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1596 into int main(int, char**)/1310.
harness.cpp:17:72: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442.
harness.cpp:17:72: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1442 into int main(int, char**)/1310.
harness.cpp:17:61: note: Considering inline candidate int std::__cxx11::stoi(const string&, std::size_t*, int)/1086.
harness.cpp:17:61: optimized:  Inlining int std::__cxx11::stoi(const string&, std::size_t*, int)/1086 into int main(int, char**)/1310.
harness.cpp:17:72: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597.
harness.cpp:17:72: missed:   will not early inline: int main(int, char**)/1310->std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597, growth 7 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:17:27: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1596.
harness.cpp:17:27: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1596 into int main(int, char**)/1310.
harness.cpp:16:47: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1595.
harness.cpp:16:47: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1595 into int main(int, char**)/1310.
harness.cpp:16:22: note: Considering inline candidate bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1594.
harness.cpp:16:22: optimized:  Inlining bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1594 into int main(int, char**)/1310.
harness.cpp:15:45: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1595.
harness.cpp:15:45: optimized:  Inlining std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1595 into int main(int, char**)/1310.
harness.cpp:15:17: note: Considering inline candidate bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1594.
harness.cpp:15:17: optimized:  Inlining bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1594 into int main(int, char**)/1310.
harness.cpp:8:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
harness.cpp:8:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433 into int main(int, char**)/1310.
harness.cpp:14:33: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592.
harness.cpp:14:33: missed:   will not early inline: int main(int, char**)/1310->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592, growth 8 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:14:33: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430.
harness.cpp:14:33: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430 into int main(int, char**)/1310.
harness.cpp:8:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433.
harness.cpp:8:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char]/1433 into int main(int, char**)/1310.
harness.cpp:9:24: note: Considering inline candidate std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592.
harness.cpp:9:24: missed:   will not early inline: int main(int, char**)/1310->std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1592, growth 6 exceeds --param early-inlining-insns divided by number of calls
harness.cpp:9:24: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430.
harness.cpp:9:24: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char]/1430 into int main(int, char**)/1310.
harness.cpp:40:1: note: Considering inline candidate void __static_initialization_and_destruction_0(int, int)/1869.
harness.cpp:40:1: optimized:  Inlining void __static_initialization_and_destruction_0(int, int)/1869 into (static initializers for harness.cpp)/2018.
/usr/include/c++/11/bits/char_traits.h:399:25: missed:   not inlinable: operator<<.isra/2097 -> long unsigned int __builtin_strlen(const char*)/2024, function body not available
/usr/include/c++/11/ostream:616:18: missed:   not inlinable: operator<<.isra/2097 -> std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char; _Traits = std::char_traits<char>]/2042, function body not available
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed:   not inlinable: _M_construct.isra/2096 -> void std::__throw_logic_error(const char*)/2025, function body not available
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed:   not inlinable: _M_construct.isra/2096 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_create(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2026, function body not available
/usr/include/c++/11/bits/char_traits.h:399:25: missed:   not inlinable: assign.isra/2095 -> long unsigned int __builtin_strlen(const char*)/2024, function body not available
/usr/include/c++/11/bits/basic_string.h:1459:19: missed:   not inlinable: assign.isra/2095 -> std::__cxx11::basic_string<_CharT, _Traits, _Allocator>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2033, function body not available
/usr/include/c++/11/bits/char_traits.h:399:25: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2094 -> long unsigned int __builtin_strlen(const char*)/2024, function body not available
/usr/include/c++/11/bits/basic_ios.h:158:20: missed:   not inlinable: std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/2060 -> void std::basic_ios<_CharT, _Traits>::clear(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/2044, function body not available
/usr/include/c++/11/bits/char_traits.h:437:49: missed:   not inlinable: static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2058 -> void* __builtin_memcpy(void*, const void*, long unsigned int)/2031, function body not available
/usr/include/c++/11/iostream:74:25: missed:   not inlinable: (static initializers for harness.cpp)/2018 -> int __cxxabiv1::__cxa_atexit(void (*)(void*), void*, void*)/2046, function body not available
/usr/include/c++/11/iostream:74:25: missed:   not inlinable: (static initializers for harness.cpp)/2018 -> std::ios_base::Init::Init()/2045, function body not available
/usr/include/c++/11/bits/basic_string.h:321:28: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689 -> void std::__throw_out_of_range_fmt(const char*, ...)/2035, function body not available
/usr/include/c++/11/bits/basic_string.h:321:28: missed:   not inlinable: std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597 -> void std::__throw_out_of_range_fmt(const char*, ...)/2035, function body not available
/usr/include/c++/11/ext/string_conversions.h:86:27: missed:   not inlinable: _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365 -> void std::__throw_out_of_range(const char*)/2039, function body not available
/usr/include/c++/11/ext/string_conversions.h:83:31: missed:   not inlinable: _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365 -> void std::__throw_invalid_argument(const char*)/2037, function body not available
/usr/include/c++/11/ext/string_conversions.h:63:27: missed:   not inlinable: _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365 -> int* __errno_location()/2038, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/ostream:167:25: missed:   not inlinable: int main(int, char**)/1310 -> std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::_M_insert(_ValueT) [with _ValueT = long int; _CharT = char; _Traits = std::char_traits<char>]/2043, function body not available
/usr/include/c++/11/ostream:616:18: missed:   not inlinable: int main(int, char**)/1310 -> std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char; _Traits = std::char_traits<char>]/2042, function body not available
harness.cpp:33:25: missed:   not inlinable: int main(int, char**)/1310 -> static std::chrono::_V2::system_clock::time_point std::chrono::_V2::system_clock::now()/2021, function body not available
harness.cpp:31:47: missed:   not inlinable: int main(int, char**)/1310 -> unsigned int CalculateTwoElectronIntegrals(bool, int)/2019, function body not available
harness.cpp:28:25: missed:   not inlinable: int main(int, char**)/1310 -> static std::chrono::_V2::system_clock::time_point std::chrono::_V2::system_clock::now()/2021, function body not available
/usr/include/c++/11/ostream:525:30: missed:   not inlinable: int main(int, char**)/1310 -> std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char; _Traits = std::char_traits<char>]/2042, function body not available
/usr/include/c++/11/ostream:196:18: missed:   not inlinable: int main(int, char**)/1310 -> std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::_M_insert(_ValueT) [with _ValueT = long unsigned int; _CharT = char; _Traits = std::char_traits<char>]/2041, function body not available
harness.cpp:22:57: missed:   not inlinable: int main(int, char**)/1310 -> unsigned int CalculateTwoElectronIntegrals(bool, int)/2019, function body not available
/usr/include/c++/11/bits/basic_string.h:6250:27: missed:   not inlinable: int main(int, char**)/1310 -> int std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::compare(const _CharT*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2040, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/bits/basic_string.h:6620:40: missed:   not inlinable: int main(int, char**)/1310 -> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365, call is unlikely and code size would grow
harness.cpp:18:76: missed:   not inlinable: int main(int, char**)/1310 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597, call is unlikely and code size would grow
/usr/include/c++/11/bits/basic_string.h:2494:20: missed:   not inlinable: int main(int, char**)/1310 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2034, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: int main(int, char**)/1310 -> void operator delete(void*, std::size_t)/2032, function body not available
/usr/include/c++/11/bits/basic_string.h:6620:40: missed:   not inlinable: int main(int, char**)/1310 -> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}]/1365, call is unlikely and code size would grow
harness.cpp:17:72: missed:   not inlinable: int main(int, char**)/1310 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597, call is unlikely and code size would grow
/usr/include/c++/11/bits/basic_string.h:2494:20: missed:   not inlinable: int main(int, char**)/1310 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::rfind(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2034, function body not available
/usr/include/c++/11/bits/basic_string.h:6250:27: missed:   not inlinable: int main(int, char**)/1310 -> int std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::compare(const _CharT*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2040, function body not available
/usr/include/c++/11/bits/basic_string.h:6250:27: missed:   not inlinable: int main(int, char**)/1310 -> int std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::compare(const _CharT*) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2040, function body not available
harness.cpp:9:24: missed:   not inlinable: int main(int, char**)/1310 -> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2094, call is unlikely and code size would grow
optimized:  Inlined static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2058 into _M_construct.isra/2096 which now has time 28.402128 and size 37, net change of -7.
harness.cpp:14:33: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2098 into int main(int, char**)/1310 which now has time 897.452622 and size 210, net change of +8.
optimized:  Inlined std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/2060 into operator<<.isra/2097 which now has time 26.450000 and size 20, net change of -5.
harness.cpp:37:18: optimized:  Inlined operator<<.isra/2099 into int main(int, char**)/1310 which now has time 901.082623 and size 214, net change of +4.
harness.cpp:38:43: optimized:  Inlined operator<<.isra/2097 into int main(int, char**)/1310 which now has time 901.817335 and size 218, net change of -16.
/usr/include/c++/11/bits/basic_string.h:690:28: optimized:  Inlined assign.isra/2102 into int main(int, char**)/1310 which now has time 966.544609 and size 225, net change of +7.
/usr/include/c++/11/bits/basic_string.h:690:28: optimized:  Inlined assign.isra/2095 into int main(int, char**)/1310 which now has time 998.908246 and size 233, net change of -6.
/usr/include/c++/11/bits/basic_string.h:539:14: optimized:  Inlined _M_construct.isra/2103 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2098 which now has time 1083.074800 and size 15, net change of +26.
/usr/include/c++/11/bits/basic_string.h:539:14: optimized:  Inlined _M_construct.isra/2105 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2094 which now has time 38.502608 and size 41, net change of +26.
harness.cpp:9:24: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with <template-parameter-2-1> = std::allocator<char>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/2094 into int main(int, char**)/1310 which now has time 1101.476088 and size 284, net change of -16.
/usr/include/c++/11/bits/basic_string.h:2856:52: optimized:  Inlined std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1597 which now has time 26.494601 and size 29, net change of +0.
/usr/include/c++/11/bits/basic_string.h:255:23: optimized:  Inlined _M_construct.isra/2096 into std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]/1689 which now has time 36.888888 and size 22, net change of -37.
Unit growth for small function inlining: 349->333 (-5%)

Inlined 124 calls, eliminated 46 functions

/usr/include/c++/11/ext/string_conversions.h:54:5: missed: splitting region at control altering definition _13 = __convf_9(D) (__str_10(D), &__endptr, __base#0_11(D));
/usr/include/c++/11/ext/string_conversions.h:80:34: missed: not vectorized: statement can throw an exception: _13 = __convf_9(D) (__str_10(D), &__endptr, __base#0_11(D));
/usr/include/c++/11/ext/string_conversions.h:80:34: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/ext/string_conversions.h:80:34: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
/usr/include/c++/11/ext/string_conversions.h:80:34: missed: splitting region at dominance boundary bb16
/usr/include/c++/11/ext/string_conversions.h:86:27: missed: not vectorized: statement can throw an exception: std::__throw_out_of_range (__name_19(D));
/usr/include/c++/11/ext/string_conversions.h:83:31: missed: not vectorized: statement can throw an exception: std::__throw_invalid_argument (__name_19(D));
/usr/include/c++/11/ext/string_conversions.h:83:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/ext/string_conversions.h:83:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ext/string_conversions.h:83:31: missed: splitting region at dominance boundary bb13
/usr/include/c++/11/ext/string_conversions.h:83:31: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/string_conversions.h:64:41: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/ext/string_conversions.h:64:41: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
harness.cpp:31:47: missed: couldn't vectorize loop
harness.cpp:31:47: missed: not vectorized: control flow in loop.
harness.cpp:14:32: missed: couldn't vectorize loop
harness.cpp:14:32: missed: not vectorized: control flow in loop.
harness.cpp:8:5: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/char_traits.h:399:25: missed: statement clobbers memory: _145 = __builtin_strlen (_4);
harness.cpp:31:47: missed: statement clobbers memory: _28 = CalculateTwoElectronIntegrals (1, size_142);
harness.cpp:8:5: missed: splitting region at control altering definition _150 = std::__cxx11::basic_string<char>::_M_create (&arg, &__dnew, 0);
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (&mode.D.32018._M_local_buf, "perf", 4);
/usr/include/c++/11/bits/basic_string.h:6250:27: missed: statement clobbers memory: _9 = std::__cxx11::basic_string<char>::compare (&mode, "correct");
harness.cpp:28:25: missed: statement clobbers memory: t1 = std::chrono::_V2::system_clock::now ();
/usr/include/c++/11/bits/basic_string.tcc:212:28: missed: not vectorized: statement can throw an exception: std::__throw_logic_error ("basic_string::_M_construct null not valid");
/usr/include/c++/11/bits/char_traits.h:399:25: missed: statement clobbers memory: _145 = __builtin_strlen (_4);
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: not vectorized: statement can throw an exception: _150 = std::__cxx11::basic_string<char>::_M_create (&arg, &__dnew, 0);
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb8
/usr/include/c++/11/bits/basic_string.tcc:219:13: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.tcc:219:13: missed: splitting region at dominance boundary bb12
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:219:31: missed: splitting region at dominance boundary bb13
/usr/include/c++/11/bits/char_traits.h:437:49: missed: statement clobbers memory: __builtin_memcpy (_131, _4, _145);
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:195:28: missed: splitting region at control altering definition D.51794 = std::__cxx11::basic_string<char>::substr (&arg, 9, 18446744073709551615); [return slot optimization]
/usr/include/c++/11/bits/basic_string.h:6250:27: missed: statement clobbers memory: _51 = std::__cxx11::basic_string<char>::compare (&arg, "--mode=correct");
/usr/include/c++/11/bits/basic_string.h:6250:27: missed: statement clobbers memory: _39 = std::__cxx11::basic_string<char>::compare (&arg, "--mode=perf");
/usr/include/c++/11/bits/basic_string.h:2494:20: missed: statement clobbers memory: _54 = std::__cxx11::basic_string<char>::rfind (&arg, "--size=", 0, 7);
/usr/include/c++/11/bits/basic_string.h:2494:20: missed: statement clobbers memory: _60 = std::__cxx11::basic_string<char>::rfind (&arg, "--repeat=", 0, 9);
harness.cpp:18:76: missed: not vectorized: statement can throw an exception: D.51794 = std::__cxx11::basic_string<char>::substr (&arg, 9, 18446744073709551615); [return slot optimization]
harness.cpp:18:76: note: ***** Analysis failed with vector mode V2DI
harness.cpp:18:76: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:18:76: missed: splitting region at control altering definition _62 = __gnu_cxx::__stoa<long int, int, char, int> (strtol, "stoi", _61, 0B, 10);
/usr/include/c++/11/bits/basic_string.h:6620:40: missed: not vectorized: statement can throw an exception: _62 = __gnu_cxx::__stoa<long int, int, char, int> (strtol, "stoi", _61, 0B, 10);
/usr/include/c++/11/bits/basic_string.h:6620:40: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:6620:40: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:6620:40: missed: splitting region at dominance boundary bb29
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_83, _85);
harness.cpp:8:5: missed: not vectorized: statement can throw an exception: resx 20
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb27
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_63, _65);
harness.cpp:18:76: note: ***** Analysis failed with vector mode V2DI
harness.cpp:18:76: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:18:76: missed: splitting region at dominance boundary bb19
harness.cpp:18:76: note: ***** Analysis failed with vector mode VOID
harness.cpp:18:76: missed: splitting region at control altering definition D.51623 = std::__cxx11::basic_string<char>::substr (&arg, 7, 18446744073709551615); [return slot optimization]
harness.cpp:17:72: missed: not vectorized: statement can throw an exception: D.51623 = std::__cxx11::basic_string<char>::substr (&arg, 7, 18446744073709551615); [return slot optimization]
harness.cpp:17:72: note: ***** Analysis failed with vector mode VOID
harness.cpp:17:72: missed: splitting region at control altering definition _56 = __gnu_cxx::__stoa<long int, int, char, int> (strtol, "stoi", _55, 0B, 10);
/usr/include/c++/11/bits/basic_string.h:6620:40: missed: not vectorized: statement can throw an exception: _56 = __gnu_cxx::__stoa<long int, int, char, int> (strtol, "stoi", _55, 0B, 10);
/usr/include/c++/11/bits/basic_string.h:6620:40: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:6620:40: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:6620:40: missed: splitting region at dominance boundary bb22
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_80, _82);
harness.cpp:8:5: missed: not vectorized: statement can throw an exception: resx 16
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb20
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_57, _59);
harness.cpp:17:72: note: ***** Analysis failed with vector mode V2DI
harness.cpp:17:72: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:17:72: missed: splitting region at dominance boundary bb16
harness.cpp:17:72: note: ***** Analysis failed with vector mode VOID
harness.cpp:17:72: missed: splitting region at loop 1 exit at bb17
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: not vectorized: statement can throw an exception: std::__cxx11::basic_string<char>::_M_replace (&mode, 0, _161, "perf", 4);
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at dominance boundary bb88
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at dominance boundary bb14
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at loop 1 exit at bb68
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: not vectorized: statement can throw an exception: std::__cxx11::basic_string<char>::_M_replace (&mode, 0, _158, "correct", 7);
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at dominance boundary bb69
/usr/include/c++/11/bits/basic_string.h:1459:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:1459:19: missed: splitting region at dominance boundary bb87
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_86, _88);
harness.cpp:8:5: missed: not vectorized: statement can throw an exception: resx 14
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at dominance boundary bb32
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/basic_string.h:672:23: missed: splitting region at loop 1 exit at bb35
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_66, _68);
harness.cpp:13:23: note: ***** Analysis failed with vector mode V2DI
harness.cpp:13:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:13:23: missed: splitting region at dominance boundary bb44
/usr/include/c++/11/bits/basic_string.h:6250:27: missed: statement clobbers memory: _69 = std::__cxx11::basic_string<char>::compare (&mode, "correct");
harness.cpp:28:25: missed: statement clobbers memory: t1 = std::chrono::_V2::system_clock::now ();
harness.cpp:30:23: note: ***** Analysis failed with vector mode VOID
harness.cpp:30:23: missed: splitting region at control altering definition _28 = CalculateTwoElectronIntegrals (1, size_142);
harness.cpp:31:47: missed: not vectorized: statement can throw an exception: _28 = CalculateTwoElectronIntegrals (1, size_142);
harness.cpp:31:47: note: ***** Analysis failed with vector mode VOID
harness.cpp:31:47: missed: splitting region at loop 2 exit at bb96
harness.cpp:30:23: note: ***** Analysis failed with vector mode VOID
harness.cpp:30:23: missed: splitting region at dominance boundary bb48
harness.cpp:30:23: note: ***** Analysis failed with vector mode VOID
harness.cpp:30:23: missed: splitting region at control altering definition _72 = std::basic_ostream<char>::_M_insert<long int> (&cout, _73);
harness.cpp:33:25: missed: statement clobbers memory: t2 = std::chrono::_V2::system_clock::now ();
/usr/include/c++/11/ostream:616:18: missed: not vectorized: statement can throw an exception: std::__ostream_insert<char, std::char_traits<char> > (&cout, "Time: ", 6);
/usr/include/c++/11/ostream:167:25: missed: not vectorized: statement can throw an exception: _72 = std::basic_ostream<char>::_M_insert<long int> (&cout, _73);
/usr/include/c++/11/ostream:167:25: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/ostream:167:25: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ostream:167:25: missed: splitting region at dominance boundary bb51
/usr/include/c++/11/ostream:167:25: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:167:25: missed: splitting region at dominance boundary bb74
/usr/include/c++/11/ostream:616:18: missed: not vectorized: statement can throw an exception: std::__ostream_insert<char, std::char_traits<char> > (_72, " ms\n", 4);
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at dominance boundary bb53
harness.cpp:8:5: missed: not vectorized: statement can throw an exception: resx 25
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at dominance boundary bb83
/usr/include/c++/11/ostream:616:18: missed: not vectorized: statement can throw an exception: std::__ostream_insert<char, std::char_traits<char> > (&cerr, "", 0);
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at dominance boundary bb46
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at dominance boundary bb93
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at dominance boundary bb36
/usr/include/c++/11/ostream:616:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:616:18: missed: splitting region at control altering definition _32 = CalculateTwoElectronIntegrals (0, size_147);
harness.cpp:22:57: missed: not vectorized: statement can throw an exception: _32 = CalculateTwoElectronIntegrals (0, size_147);
harness.cpp:22:57: note: ***** Analysis failed with vector mode VOID
harness.cpp:22:57: missed: splitting region at control altering definition _71 = std::basic_ostream<char>::_M_insert<long unsigned int> (&cout, _70);
/usr/include/c++/11/ostream:196:18: missed: not vectorized: statement can throw an exception: _71 = std::basic_ostream<char>::_M_insert<long unsigned int> (&cout, _70);
/usr/include/c++/11/ostream:196:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:196:18: missed: splitting region at dominance boundary bb40
/usr/include/c++/11/ostream:196:18: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ostream:196:18: missed: splitting region at dominance boundary bb57
/usr/include/c++/11/ostream:525:30: missed: not vectorized: statement can throw an exception: std::__ostream_insert<char, std::char_traits<char> > (_71, &__c, 1);
harness.cpp:23:29: note: ***** Analysis failed with vector mode V16QI
harness.cpp:23:29: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V16QI
harness.cpp:23:29: missed: splitting region at dominance boundary bb37
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_77, _79);
harness.cpp:8:5: note: ***** Analysis failed with vector mode V2DI
harness.cpp:8:5: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
harness.cpp:8:5: missed: splitting region at dominance boundary bb77
harness.cpp:8:5: note: ***** Analysis failed with vector mode VOID
harness.cpp:8:5: missed: splitting region at dominance boundary bb84
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_89, _91);
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/basic_string.h:672:23: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/iostream:74:25: missed: statement clobbers memory: std::ios_base::Init::Init (&__ioinit);
/usr/include/c++/11/iostream:74:25: missed: statement clobbers memory: __cxxabiv1::__cxa_atexit (__dt_comp , &__ioinit, &__dso_handle);
harness.cpp:40:1: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_tree.h:176:15: note: Considering inline candidate void std::_Rb_tree_header::_M_reset()/1030.
/usr/include/c++/11/bits/stl_tree.h:176:15: optimized:  Inlining void std::_Rb_tree_header::_M_reset()/1030 into std::_Rb_tree_header::_Rb_tree_header()/1024.
/usr/include/c++/11/bits/stl_bvector.h:241:46: note: Considering inline candidate std::_Bit_iterator_base::_Bit_iterator_base(std::_Bit_type*, unsigned int)/1048.
/usr/include/c++/11/bits/stl_bvector.h:241:46: optimized:  Inlining std::_Bit_iterator_base::_Bit_iterator_base(std::_Bit_type*, unsigned int)/1048 into std::_Bit_iterator::_Bit_iterator()/1061.
/usr/include/c++/11/bits/stl_bvector.h:244:34: note: Considering inline candidate std::_Bit_iterator_base::_Bit_iterator_base(std::_Bit_type*, unsigned int)/1048.
/usr/include/c++/11/bits/stl_bvector.h:244:34: optimized:  Inlining std::_Bit_iterator_base::_Bit_iterator_base(std::_Bit_type*, unsigned int)/1048 into std::_Bit_iterator::_Bit_iterator(std::_Bit_type*, unsigned int)/1064.
/usr/include/c++/11/bits/stl_bvector.h:252:14: note: Considering inline candidate std::_Bit_reference::_Bit_reference(std::_Bit_type*, std::_Bit_type)/1033.
/usr/include/c++/11/bits/stl_bvector.h:252:14: optimized:  Inlining std::_Bit_reference::_Bit_reference(std::_Bit_type*, std::_Bit_type)/1033 into std::_Bit_iterator::reference std::_Bit_iterator::operator*() const/1067.
/usr/include/c++/11/bits/stl_bvector.h:287:14: note: Considering inline candidate void std::_Bit_iterator_base::_M_incr(std::ptrdiff_t)/1052.
/usr/include/c++/11/bits/stl_bvector.h:287:14: optimized:  Inlining void std::_Bit_iterator_base::_M_incr(std::ptrdiff_t)/1052 into std::_Bit_iterator::iterator& std::_Bit_iterator::operator+=(std::iterator<std::random_access_iterator_tag, bool>::difference_type)/1072.
/usr/include/c++/11/bits/stl_bvector.h:306:16: note: Considering inline candidate std::_Bit_iterator::iterator& std::_Bit_iterator::operator+=(std::iterator<std::random_access_iterator_tag, bool>::difference_type)/1072.
/usr/include/c++/11/bits/stl_bvector.h:306:16: optimized:  Inlining std::_Bit_iterator::iterator& std::_Bit_iterator::operator+=(std::iterator<std::random_access_iterator_tag, bool>::difference_type)/1072 into std::_Bit_iterator::iterator std::operator+(const iterator&, std::iterator<std::random_access_iterator_tag, bool>::difference_type)/1075.
/usr/include/c++/11/bits/stl_bvector.h:300:27: note: Considering inline candidate std::_Bit_iterator::reference std::_Bit_iterator::operator*() const/1067.
/usr/include/c++/11/bits/stl_bvector.h:300:27: optimized:  Inlining std::_Bit_iterator::reference std::_Bit_iterator::operator*() const/1067 into std::_Bit_iterator::reference std::_Bit_iterator::operator[](std::iterator<std::random_access_iterator_tag, bool>::difference_type) const/1074.
/usr/include/c++/11/bits/stl_bvector.h:300:24: note: Considering inline candidate std::_Bit_iterator::iterator std::operator+(const iterator&, std::iterator<std::random_access_iterator_tag, bool>::difference_type)/1075.
/usr/include/c++/11/bits/stl_bvector.h:300:24: optimized:  Inlining std::_Bit_iterator::iterator std::operator+(const iterator&, std::iterator<std::random_access_iterator_tag, bool>::difference_type)/1075 into std::_Bit_iterator::reference std::_Bit_iterator::operator[](std::iterator<std::random_access_iterator_tag, bool>::difference_type) const/1074.
/usr/include/c++/11/bits/stl_bvector.h:337:34: note: Considering inline candidate std::_Bit_iterator_base::_Bit_iterator_base(std::_Bit_type*, unsigned int)/1048.
/usr/include/c++/11/bits/stl_bvector.h:337:34: optimized:  Inlining std::_Bit_iterator_base::_Bit_iterator_base(std::_Bit_type*, unsigned int)/1048 into std::_Bit_const_iterator::_Bit_const_iterator(std::_Bit_type*, unsigned int)/1082.
/usr/include/c++/11/bits/stl_bvector.h:340:49: note: Considering inline candidate std::_Bit_iterator_base::_Bit_iterator_base(std::_Bit_type*, unsigned int)/1048.
/usr/include/c++/11/bits/stl_bvector.h:340:49: optimized:  Inlining std::_Bit_iterator_base::_Bit_iterator_base(std::_Bit_type*, unsigned int)/1048 into std::_Bit_const_iterator::_Bit_const_iterator(const std::_Bit_iterator&)/1085.
/usr/include/c++/11/bits/hashtable_policy.h:1210:7: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash<int>]/1211.
/usr/include/c++/11/bits/hashtable_policy.h:1210:7: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash<int>]/1211 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_Hash_code_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1119.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::equal_to<int>]/1214.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::equal_to<int>]/1214 into std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1122.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: note: Considering inline candidate std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_Hash_code_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1119.
/usr/include/c++/11/bits/hashtable_policy.h:1604:7: optimized:  Inlining std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_Hash_code_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1119 into std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1122.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::_Rb_tree_node<int>]/1303.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::_Rb_tree_node<int>]/1303 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::_Rb_tree_node<int>]/1205.
/usr/include/c++/11/bits/stl_tree.h:660:9: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::_Rb_tree_node<int>]/1205.
/usr/include/c++/11/bits/stl_tree.h:660:9: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::_Rb_tree_node<int>]/1205 into std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl<std::less<int>, true>::~_Rb_tree_impl()/1106.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1311.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1311 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1220.
/usr/include/c++/11/bits/hashtable_policy.h:1124:12: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1220.
/usr/include/c++/11/bits/hashtable_policy.h:1124:12: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1220 into std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >, true>::~_Hashtable_ebo_helper()/1125.
/usr/include/c++/11/bits/hashtable_policy.h:1802:12: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >, true>::~_Hashtable_ebo_helper()/1125.
/usr/include/c++/11/bits/hashtable_policy.h:1802:12: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >, true>::~_Hashtable_ebo_helper()/1125 into std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> > >::~_Hashtable_alloc()/1131.
/usr/include/c++/11/bits/allocator.h:156:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = bool]/1316.
/usr/include/c++/11/bits/allocator.h:156:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = bool]/1316 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = bool]/1226.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = bool]/1319.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = bool]/1319 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = bool]/1229.
/usr/include/c++/11/bits/stl_bvector.h:832:16: note: Considering inline candidate std::_Bit_iterator::_Bit_iterator(std::_Bit_type*, unsigned int)/1064.
/usr/include/c++/11/bits/stl_bvector.h:832:16: optimized:  Inlining std::_Bit_iterator::_Bit_iterator(std::_Bit_type*, unsigned int)/1064 into std::vector<bool, _Alloc>::iterator std::vector<bool, _Alloc>::begin() [with _Alloc = std::allocator<bool>]/1332.
/usr/include/c++/11/bits/stl_bvector.h:907:23: note: Considering inline candidate std::_Bit_iterator::reference std::_Bit_iterator::operator[](std::iterator<std::random_access_iterator_tag, bool>::difference_type) const/1074.
/usr/include/c++/11/bits/stl_bvector.h:907:23: optimized:  Inlining std::_Bit_iterator::reference std::_Bit_iterator::operator[](std::iterator<std::random_access_iterator_tag, bool>::difference_type) const/1074 into std::vector<bool, _Alloc>::reference std::vector<bool, _Alloc>::operator[](std::vector<bool, _Alloc>::size_type) [with _Alloc = std::allocator<bool>]/1237.
/usr/include/c++/11/bits/stl_bvector.h:907:21: note: Considering inline candidate std::vector<bool, _Alloc>::iterator std::vector<bool, _Alloc>::begin() [with _Alloc = std::allocator<bool>]/1332.
/usr/include/c++/11/bits/stl_bvector.h:907:21: optimized:  Inlining std::vector<bool, _Alloc>::iterator std::vector<bool, _Alloc>::begin() [with _Alloc = std::allocator<bool>]/1332 into std::vector<bool, _Alloc>::reference std::vector<bool, _Alloc>::operator[](std::vector<bool, _Alloc>::size_type) [with _Alloc = std::allocator<bool>]/1237.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:26:47: note: Considering inline candidate std::_Bit_reference& std::_Bit_reference::operator=(bool)/1039.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:26:47: optimized:  Inlining std::_Bit_reference& std::_Bit_reference::operator=(bool)/1039 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1649.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:26:43: note: Considering inline candidate std::vector<bool, _Alloc>::reference std::vector<bool, _Alloc>::operator[](std::vector<bool, _Alloc>::size_type) [with _Alloc = std::allocator<bool>]/1237.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:26:43: optimized:  Inlining std::vector<bool, _Alloc>::reference std::vector<bool, _Alloc>::operator[](std::vector<bool, _Alloc>::size_type) [with _Alloc = std::allocator<bool>]/1237 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1649.
/usr/include/c++/11/bits/stl_bvector.h:844:30: note: Considering inline candidate std::_Bit_const_iterator::_Bit_const_iterator(const std::_Bit_iterator&)/1085.
/usr/include/c++/11/bits/stl_bvector.h:844:30: optimized:  Inlining std::_Bit_const_iterator::_Bit_const_iterator(const std::_Bit_iterator&)/1085 into std::vector<bool, _Alloc>::const_iterator std::vector<bool, _Alloc>::end() const [with _Alloc = std::allocator<bool>]/1333.
/usr/include/c++/11/bits/stl_bvector.h:836:16: note: Considering inline candidate std::_Bit_const_iterator::_Bit_const_iterator(std::_Bit_type*, unsigned int)/1082.
/usr/include/c++/11/bits/stl_bvector.h:836:16: optimized:  Inlining std::_Bit_const_iterator::_Bit_const_iterator(std::_Bit_type*, unsigned int)/1082 into std::vector<bool, _Alloc>::const_iterator std::vector<bool, _Alloc>::begin() const [with _Alloc = std::allocator<bool>]/1334.
/usr/include/c++/11/bits/stl_bvector.h:882:32: note: Considering inline candidate std::ptrdiff_t std::operator-(const std::_Bit_iterator_base&, const std::_Bit_iterator_base&)/1059.
/usr/include/c++/11/bits/stl_bvector.h:882:32: optimized:  Inlining std::ptrdiff_t std::operator-(const std::_Bit_iterator_base&, const std::_Bit_iterator_base&)/1059 into std::vector<bool, _Alloc>::size_type std::vector<bool, _Alloc>::size() const [with _Alloc = std::allocator<bool>]/1238.
/usr/include/c++/11/bits/stl_bvector.h:882:29: note: Considering inline candidate std::vector<bool, _Alloc>::const_iterator std::vector<bool, _Alloc>::end() const [with _Alloc = std::allocator<bool>]/1333.
/usr/include/c++/11/bits/stl_bvector.h:882:29: optimized:  Inlining std::vector<bool, _Alloc>::const_iterator std::vector<bool, _Alloc>::end() const [with _Alloc = std::allocator<bool>]/1333 into std::vector<bool, _Alloc>::size_type std::vector<bool, _Alloc>::size() const [with _Alloc = std::allocator<bool>]/1238.
/usr/include/c++/11/bits/stl_bvector.h:882:39: note: Considering inline candidate std::vector<bool, _Alloc>::const_iterator std::vector<bool, _Alloc>::begin() const [with _Alloc = std::allocator<bool>]/1334.
/usr/include/c++/11/bits/stl_bvector.h:882:39: optimized:  Inlining std::vector<bool, _Alloc>::const_iterator std::vector<bool, _Alloc>::begin() const [with _Alloc = std::allocator<bool>]/1334 into std::vector<bool, _Alloc>::size_type std::vector<bool, _Alloc>::size() const [with _Alloc = std::allocator<bool>]/1238.
/usr/include/c++/11/bits/stl_set.h:420:25: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size() const [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1350.
/usr/include/c++/11/bits/stl_set.h:420:25: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size() const [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1350 into std::set<_Key, _Compare, _Alloc>::size_type std::set<_Key, _Compare, _Alloc>::size() const [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1249.
/usr/include/c++/11/bits/unordered_map.h:311:25: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1358.
/usr/include/c++/11/bits/unordered_map.h:311:25: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1358 into std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size() const [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1252.
/usr/include/c++/11/bits/allocator.h:156:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::_Rb_tree_node<int>]/1380.
/usr/include/c++/11/bits/allocator.h:156:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::_Rb_tree_node<int>]/1380 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::_Rb_tree_node<int>]/1297.
/usr/include/c++/11/bits/stl_tree.h:671:22: note: Considering inline candidate std::_Rb_tree_header::_Rb_tree_header()/1024.
/usr/include/c++/11/bits/stl_tree.h:671:22: optimized:  Inlining std::_Rb_tree_header::_Rb_tree_header()/1024 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, <anonymous> >::_Rb_tree_impl() [with _Key_compare = std::less<int>; bool <anonymous> = true; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1202.
/usr/include/c++/11/bits/stl_tree.h:671:22: note: Considering inline candidate std::_Rb_tree_key_compare<_Key_compare>::_Rb_tree_key_compare() [with _Key_compare = std::less<int>]/1300.
/usr/include/c++/11/bits/stl_tree.h:671:22: optimized:  Inlining std::_Rb_tree_key_compare<_Key_compare>::_Rb_tree_key_compare() [with _Key_compare = std::less<int>]/1300 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, <anonymous> >::_Rb_tree_impl() [with _Key_compare = std::less<int>; bool <anonymous> = true; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1202.
/usr/include/c++/11/bits/stl_tree.h:671:22: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::_Rb_tree_node<int>]/1297.
/usr/include/c++/11/bits/stl_tree.h:671:22: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::_Rb_tree_node<int>]/1297 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, <anonymous> >::_Rb_tree_impl() [with _Key_compare = std::less<int>; bool <anonymous> = true; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1202.
/usr/include/c++/11/bits/stl_tree.h:928:7: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, <anonymous> >::_Rb_tree_impl() [with _Key_compare = std::less<int>; bool <anonymous> = true; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1202.
/usr/include/c++/11/bits/stl_tree.h:928:7: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, <anonymous> >::_Rb_tree_impl() [with _Key_compare = std::less<int>; bool <anonymous> = true; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1202 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1109.
/usr/include/c++/11/bits/stl_set.h:167:7: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1109.
/usr/include/c++/11/bits/stl_set.h:167:7: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1109 into std::set<_Key, _Compare, _Alloc>::set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1112.
/usr/include/c++/11/bits/stl_tree.h:739:25: note: Considering inline candidate std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_mbegin() const [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1385.
/usr/include/c++/11/bits/stl_tree.h:739:25: optimized:  Inlining std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_mbegin() const [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1385 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1306.
/usr/include/c++/11/bits/allocator.h:156:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1387.
/usr/include/c++/11/bits/allocator.h:156:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1387 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1308.
/usr/include/c++/11/bits/hashtable_policy.h:1127:63: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1308.
/usr/include/c++/11/bits/hashtable_policy.h:1127:63: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1308 into std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1217.
/usr/include/c++/11/bits/hashtable_policy.h:1823:7: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1217.
/usr/include/c++/11/bits/hashtable_policy.h:1823:7: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1217 into std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1128.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)/977.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)/977 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1134.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Hash_node_base::_Hash_node_base()/970.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Hash_node_base::_Hash_node_base()/970 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1134.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1128.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1128 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1134.
/usr/include/c++/11/bits/hashtable.h:528:7: note: Considering inline candidate std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1122.
/usr/include/c++/11/bits/hashtable.h:528:7: optimized:  Inlining std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_Hashtable_base() [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1122 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1134.
/usr/include/c++/11/bits/unordered_map.h:141:7: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1134.
/usr/include/c++/11/bits/unordered_map.h:141:7: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1134 into std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map() [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1137.
/usr/include/c++/11/bits/stl_bvector.h:505:29: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = long unsigned int]/1404.
/usr/include/c++/11/bits/stl_bvector.h:505:29: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = long unsigned int]/1404 into std::_Bit_type* std::_Bvector_base<_Alloc>::_Bvector_impl::_M_end_addr() const [with _Alloc = std::allocator<bool>]/1405.
/usr/include/c++/11/bits/stl_bvector.h:1154:33: note: Considering inline candidate std::_Bit_type* std::_Bvector_base<_Alloc>::_Bvector_impl::_M_end_addr() const [with _Alloc = std::allocator<bool>]/1405.
/usr/include/c++/11/bits/stl_bvector.h:1154:33: optimized:  Inlining std::_Bit_type* std::_Bvector_base<_Alloc>::_Bvector_impl::_M_end_addr() const [with _Alloc = std::allocator<bool>]/1405 into void std::vector<bool, _Alloc>::_M_initialize_value(bool) [with _Alloc = std::allocator<bool>]/1331.
/usr/include/c++/11/bits/stl_pair.h:353:59: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool]/1192.
/usr/include/c++/11/bits/stl_pair.h:353:59: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool]/1192 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_iterator<int>; _T2 = bool]/1428.
/usr/include/c++/11/bits/stl_pair.h:353:27: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_iterator<int>]/1426.
/usr/include/c++/11/bits/stl_pair.h:353:27: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_iterator<int>]/1426 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_iterator<int>; _T2 = bool]/1428.
/usr/include/c++/11/bits/stl_pair.h:353:59: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool&]/1346.
/usr/include/c++/11/bits/stl_pair.h:353:59: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool&]/1346 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>&; _U2 = bool&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_const_iterator<int>; _T2 = bool]/1348.
/usr/include/c++/11/bits/stl_pair.h:353:4: note: Considering inline candidate std::_Rb_tree_const_iterator<_Tp>::_Rb_tree_const_iterator(const iterator&) [with _Tp = int]/1434.
/usr/include/c++/11/bits/stl_pair.h:353:4: optimized:  Inlining std::_Rb_tree_const_iterator<_Tp>::_Rb_tree_const_iterator(const iterator&) [with _Tp = int]/1434 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>&; _U2 = bool&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_const_iterator<int>; _T2 = bool]/1348.
/usr/include/c++/11/bits/stl_pair.h:353:27: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_iterator<int>&]/1345.
/usr/include/c++/11/bits/stl_pair.h:353:27: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_iterator<int>&]/1345 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>&; _U2 = bool&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_const_iterator<int>; _T2 = bool]/1348.
/usr/include/c++/11/tuple:435:21: note: Considering inline candidate constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(const _Head&) [with long unsigned int _Idx = 0; _Head = const int&]/1441.
/usr/include/c++/11/tuple:435:21: optimized:  Inlining constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(const _Head&) [with long unsigned int _Idx = 0; _Head = const int&]/1441 into constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(const _Head&) [with long unsigned int _Idx = 0; _Head = const int&]/1444.
/usr/include/c++/11/tuple:729:28: note: Considering inline candidate constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(const _Head&) [with long unsigned int _Idx = 0; _Head = const int&]/1444.
/usr/include/c++/11/tuple:729:28: optimized:  Inlining constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(const _Head&) [with long unsigned int _Idx = 0; _Head = const int&]/1444 into constexpr std::tuple<_Elements>::tuple(const _Elements& ...) [with bool _NotEmpty = true; typename std::enable_if<std::tuple<_Elements>::_TCC<_Dummy>::__is_implicitly_constructible<const _Elements& ...>(), bool>::type <anonymous> = true; _Elements = {const int&}]/1447.
/usr/include/c++/11/bits/allocator.h:169:53: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = long unsigned int]/1479.
/usr/include/c++/11/bits/allocator.h:169:53: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = long unsigned int]/1479 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = bool; _Tp = long unsigned int]/1393.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = long unsigned int]/1482.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = long unsigned int]/1482 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = long unsigned int]/1396.
/usr/include/c++/11/bits/stl_bvector.h:477:14: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = long unsigned int]/1396.
/usr/include/c++/11/bits/stl_bvector.h:477:14: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = long unsigned int]/1396 into std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::~_Bvector_impl()/1322.
/usr/include/c++/11/bits/stl_bvector.h:444:16: note: Considering inline candidate std::_Bit_iterator::_Bit_iterator()/1061.
/usr/include/c++/11/bits/stl_bvector.h:444:16: optimized:  Inlining std::_Bit_iterator::_Bit_iterator()/1061 into std::_Bvector_base<_Alloc>::_Bvector_impl_data::_Bvector_impl_data() [with _Alloc = std::allocator<bool>]/1488.
/usr/include/c++/11/bits/stl_bvector.h:444:4: note: Considering inline candidate std::_Bit_iterator::_Bit_iterator()/1061.
/usr/include/c++/11/bits/stl_bvector.h:444:4: optimized:  Inlining std::_Bit_iterator::_Bit_iterator()/1061 into std::_Bvector_base<_Alloc>::_Bvector_impl_data::_Bvector_impl_data() [with _Alloc = std::allocator<bool>]/1488.
/usr/include/c++/11/bits/stl_bvector.h:466:12: note: Considering inline candidate std::_Bvector_base<_Alloc>::_Bvector_impl_data::_Bvector_impl_data() [with _Alloc = std::allocator<bool>]/1488.
/usr/include/c++/11/bits/stl_bvector.h:466:12: optimized:  Inlining std::_Bvector_base<_Alloc>::_Bvector_impl_data::_Bvector_impl_data() [with _Alloc = std::allocator<bool>]/1488 into void std::_Bvector_base<_Alloc>::_Bvector_impl_data::_M_reset() [with _Alloc = std::allocator<bool>]/1491.
/usr/include/c++/11/bits/stl_tree.h:996:16: note: Considering inline candidate std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1431.
/usr/include/c++/11/bits/stl_tree.h:996:16: optimized:  Inlining std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1431 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1498.
/usr/include/c++/11/bits/stl_pair.h:353:59: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_node_base*&]/1501.
/usr/include/c++/11/bits/stl_pair.h:353:59: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_node_base*&]/1501 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_node<int>*&; _U2 = std::_Rb_tree_node_base*&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1503.
/usr/include/c++/11/bits/stl_pair.h:353:27: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_node<int>*&]/1500.
/usr/include/c++/11/bits/stl_pair.h:353:27: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_node<int>*&]/1500 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_node<int>*&; _U2 = std::_Rb_tree_node_base*&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1503.
/usr/include/c++/11/bits/stl_pair.h:323:33: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_node_base*&]/1501.
/usr/include/c++/11/bits/stl_pair.h:323:33: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::_Rb_tree_node_base*&]/1501 into constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = std::_Rb_tree_node_base*&; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1508.
/usr/include/c++/11/bits/hashtable_policy.h:1233:28: note: Considering inline candidate std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/975.
/usr/include/c++/11/bits/hashtable_policy.h:1233:28: optimized:  Inlining std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/975 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1512.
/usr/include/c++/11/bits/hashtable.h:795:49: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1512.
/usr/include/c++/11/bits/hashtable.h:795:49: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1512 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1437.
/usr/include/c++/11/bits/hashtable_policy.h:277:12: note: Considering inline candidate std::__detail::_Hash_node_base::_Hash_node_base()/970.
/usr/include/c++/11/bits/hashtable_policy.h:277:12: optimized:  Inlining std::__detail::_Hash_node_base::_Hash_node_base()/970 into std::__detail::_Hash_node<std::pair<const int, double>, false>::_Hash_node()/1516.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1532.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1532 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1533.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1533.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/1533 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/1534.
/usr/include/c++/11/bits/allocator.h:160:34: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = long unsigned int]/1543.
/usr/include/c++/11/bits/allocator.h:160:34: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = long unsigned int]/1543 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = long unsigned int]/1485.
/usr/include/c++/11/bits/stl_bvector.h:486:23: note: Considering inline candidate std::_Bvector_base<_Alloc>::_Bvector_impl_data::_Bvector_impl_data() [with _Alloc = std::allocator<bool>]/1488.
/usr/include/c++/11/bits/stl_bvector.h:486:23: optimized:  Inlining std::_Bvector_base<_Alloc>::_Bvector_impl_data::_Bvector_impl_data() [with _Alloc = std::allocator<bool>]/1488 into std::_Bvector_base<_Alloc>::_Bvector_impl::_Bvector_impl(const _Bit_alloc_type&) [with _Alloc = std::allocator<bool>]/1399.
/usr/include/c++/11/bits/stl_bvector.h:486:23: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = long unsigned int]/1485.
/usr/include/c++/11/bits/stl_bvector.h:486:23: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = long unsigned int]/1485 into std::_Bvector_base<_Alloc>::_Bvector_impl::_Bvector_impl(const _Bit_alloc_type&) [with _Alloc = std::allocator<bool>]/1399.
/usr/include/c++/11/bits/stl_bvector.h:532:9: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = long unsigned int]/1396.
/usr/include/c++/11/bits/stl_bvector.h:532:9: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = long unsigned int]/1396 into std::_Bvector_base<_Alloc>::_Bvector_base(const allocator_type&) [with _Alloc = std::allocator<bool>]/1325.
/usr/include/c++/11/bits/stl_bvector.h:532:9: note: Considering inline candidate std::_Bvector_base<_Alloc>::_Bvector_impl::_Bvector_impl(const _Bit_alloc_type&) [with _Alloc = std::allocator<bool>]/1399.
/usr/include/c++/11/bits/stl_bvector.h:532:9: optimized:  Inlining std::_Bvector_base<_Alloc>::_Bvector_impl::_Bvector_impl(const _Bit_alloc_type&) [with _Alloc = std::allocator<bool>]/1399 into std::_Bvector_base<_Alloc>::_Bvector_base(const allocator_type&) [with _Alloc = std::allocator<bool>]/1325.
/usr/include/c++/11/bits/stl_bvector.h:532:9: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = bool; _Tp = long unsigned int]/1393.
/usr/include/c++/11/bits/stl_bvector.h:532:9: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = bool; _Tp = long unsigned int]/1393 into std::_Bvector_base<_Alloc>::_Bvector_base(const allocator_type&) [with _Alloc = std::allocator<bool>]/1325.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = long unsigned int]/1545.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = long unsigned int]/1545 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = long unsigned int]/1490.
/usr/include/c++/11/bits/stl_bvector.h:561:22: note: Considering inline candidate void std::_Bvector_base<_Alloc>::_Bvector_impl_data::_M_reset() [with _Alloc = std::allocator<bool>]/1491.
/usr/include/c++/11/bits/stl_bvector.h:561:22: optimized:  Inlining void std::_Bvector_base<_Alloc>::_Bvector_impl_data::_M_reset() [with _Alloc = std::allocator<bool>]/1491 into void std::_Bvector_base<_Alloc>::_M_deallocate() [with _Alloc = std::allocator<bool>]/1401.
/usr/include/c++/11/bits/stl_bvector.h:558:35: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = long unsigned int]/1490.
/usr/include/c++/11/bits/stl_bvector.h:558:35: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = long unsigned int]/1490 into void std::_Bvector_base<_Alloc>::_M_deallocate() [with _Alloc = std::allocator<bool>]/1401.
/usr/include/c++/11/bits/stl_bvector.h:557:44: note: Considering inline candidate std::_Bit_type* std::_Bvector_base<_Alloc>::_Bvector_impl::_M_end_addr() const [with _Alloc = std::allocator<bool>]/1405.
/usr/include/c++/11/bits/stl_bvector.h:557:44: optimized:  Inlining std::_Bit_type* std::_Bvector_base<_Alloc>::_Bvector_impl::_M_end_addr() const [with _Alloc = std::allocator<bool>]/1405 into void std::_Bvector_base<_Alloc>::_M_deallocate() [with _Alloc = std::allocator<bool>]/1401.
/usr/include/c++/11/bits/stl_bvector.h:543:32: note: Considering inline candidate std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::~_Bvector_impl()/1322.
/usr/include/c++/11/bits/stl_bvector.h:543:32: optimized:  Inlining std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::~_Bvector_impl()/1322 into std::_Bvector_base<_Alloc>::~_Bvector_base() [with _Alloc = std::allocator<bool>]/1328.
/usr/include/c++/11/bits/stl_bvector.h:543:28: note: Considering inline candidate void std::_Bvector_base<_Alloc>::_M_deallocate() [with _Alloc = std::allocator<bool>]/1401.
/usr/include/c++/11/bits/stl_bvector.h:543:28: missed:   will not early inline: std::_Bvector_base<_Alloc>::~_Bvector_base() [with _Alloc = std::allocator<bool>]/1328->void std::_Bvector_base<_Alloc>::_M_deallocate() [with _Alloc = std::allocator<bool>]/1401, growth 12 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_bvector.h:733:37: note: Considering inline candidate std::_Bvector_base<_Alloc>::~_Bvector_base() [with _Alloc = std::allocator<bool>]/1328.
/usr/include/c++/11/bits/stl_bvector.h:733:37: optimized:  Inlining std::_Bvector_base<_Alloc>::~_Bvector_base() [with _Alloc = std::allocator<bool>]/1328 into std::vector<bool, _Alloc>::~vector() [with _Alloc = std::allocator<bool>]/1235.
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = long unsigned int]/1546.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = long unsigned int]/1546 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = long unsigned int]/1547.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = long unsigned int]/1547.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = long unsigned int]/1492->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = long unsigned int]/1547, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_bvector.h:550:43: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = long unsigned int]/1492.
/usr/include/c++/11/bits/stl_bvector.h:550:43: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = long unsigned int]/1492 into std::_Bvector_base<_Alloc>::_Bit_pointer std::_Bvector_base<_Alloc>::_M_allocate(std::size_t) [with _Alloc = std::allocator<bool>]/1402.
/usr/include/c++/11/bits/stl_bvector.h:550:43: note: Considering inline candidate static std::size_t std::_Bvector_base<_Alloc>::_S_nword(std::size_t) [with _Alloc = std::allocator<bool>]/1403.
/usr/include/c++/11/bits/stl_bvector.h:550:43: optimized:  Inlining static std::size_t std::_Bvector_base<_Alloc>::_S_nword(std::size_t) [with _Alloc = std::allocator<bool>]/1403 into std::_Bvector_base<_Alloc>::_Bit_pointer std::_Bvector_base<_Alloc>::_M_allocate(std::size_t) [with _Alloc = std::allocator<bool>]/1402.
/usr/include/c++/11/bits/stl_bvector.h:1145:40: note: Considering inline candidate std::_Bit_iterator::iterator std::operator+(const iterator&, std::iterator<std::random_access_iterator_tag, bool>::difference_type)/1075.
/usr/include/c++/11/bits/stl_bvector.h:1145:40: optimized:  Inlining std::_Bit_iterator::iterator std::operator+(const iterator&, std::iterator<std::random_access_iterator_tag, bool>::difference_type)/1075 into void std::vector<bool, _Alloc>::_M_initialize(std::vector<bool, _Alloc>::size_type) [with _Alloc = std::allocator<bool>]/1330.
/usr/include/c++/11/bits/stl_bvector.h:1143:15: note: Considering inline candidate std::_Bit_iterator::_Bit_iterator(std::_Bit_type*, unsigned int)/1064.
/usr/include/c++/11/bits/stl_bvector.h:1143:15: optimized:  Inlining std::_Bit_iterator::_Bit_iterator(std::_Bit_type*, unsigned int)/1064 into void std::vector<bool, _Alloc>::_M_initialize(std::vector<bool, _Alloc>::size_type) [with _Alloc = std::allocator<bool>]/1330.
/usr/include/c++/11/bits/stl_bvector.h:1143:15: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = long unsigned int]/1404.
/usr/include/c++/11/bits/stl_bvector.h:1143:15: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = long unsigned int]/1404 into void std::vector<bool, _Alloc>::_M_initialize(std::vector<bool, _Alloc>::size_type) [with _Alloc = std::allocator<bool>]/1330.
/usr/include/c++/11/bits/stl_bvector.h:1142:54: note: Considering inline candidate static std::size_t std::_Bvector_base<_Alloc>::_S_nword(std::size_t) [with _Alloc = std::allocator<bool>]/1403.
/usr/include/c++/11/bits/stl_bvector.h:1142:54: optimized:  Inlining static std::size_t std::_Bvector_base<_Alloc>::_S_nword(std::size_t) [with _Alloc = std::allocator<bool>]/1403 into void std::vector<bool, _Alloc>::_M_initialize(std::vector<bool, _Alloc>::size_type) [with _Alloc = std::allocator<bool>]/1330.
/usr/include/c++/11/bits/stl_bvector.h:1141:42: note: Considering inline candidate std::_Bvector_base<_Alloc>::_Bit_pointer std::_Bvector_base<_Alloc>::_M_allocate(std::size_t) [with _Alloc = std::allocator<bool>]/1402.
/usr/include/c++/11/bits/stl_bvector.h:1141:42: optimized:  Inlining std::_Bvector_base<_Alloc>::_Bit_pointer std::_Bvector_base<_Alloc>::_M_allocate(std::size_t) [with _Alloc = std::allocator<bool>]/1402 into void std::vector<bool, _Alloc>::_M_initialize(std::vector<bool, _Alloc>::size_type) [with _Alloc = std::allocator<bool>]/1330.
/usr/include/c++/11/bits/stl_bvector.h:658:7: note: Considering inline candidate std::_Bvector_base<_Alloc>::~_Bvector_base() [with _Alloc = std::allocator<bool>]/1328.
/usr/include/c++/11/bits/stl_bvector.h:658:7: optimized:  Inlining std::_Bvector_base<_Alloc>::~_Bvector_base() [with _Alloc = std::allocator<bool>]/1328 into std::vector<bool, _Alloc>::vector(std::vector<bool, _Alloc>::size_type, const bool&, const allocator_type&) [with _Alloc = std::allocator<bool>]/1232.
/usr/include/c++/11/bits/stl_bvector.h:657:21: note: Considering inline candidate void std::vector<bool, _Alloc>::_M_initialize_value(bool) [with _Alloc = std::allocator<bool>]/1331.
/usr/include/c++/11/bits/stl_bvector.h:657:21: missed:   will not early inline: std::vector<bool, _Alloc>::vector(std::vector<bool, _Alloc>::size_type, const bool&, const allocator_type&) [with _Alloc = std::allocator<bool>]/1232->void std::vector<bool, _Alloc>::_M_initialize_value(bool) [with _Alloc = std::allocator<bool>]/1331, growth 9 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_bvector.h:656:15: note: Considering inline candidate void std::vector<bool, _Alloc>::_M_initialize(std::vector<bool, _Alloc>::size_type) [with _Alloc = std::allocator<bool>]/1330.
/usr/include/c++/11/bits/stl_bvector.h:656:15: optimized:  Inlining void std::vector<bool, _Alloc>::_M_initialize(std::vector<bool, _Alloc>::size_type) [with _Alloc = std::allocator<bool>]/1330 into std::vector<bool, _Alloc>::vector(std::vector<bool, _Alloc>::size_type, const bool&, const allocator_type&) [with _Alloc = std::allocator<bool>]/1232.
/usr/include/c++/11/bits/stl_bvector.h:654:18: note: Considering inline candidate std::_Bvector_base<_Alloc>::_Bvector_base(const allocator_type&) [with _Alloc = std::allocator<bool>]/1325.
/usr/include/c++/11/bits/stl_bvector.h:654:18: optimized:  Inlining std::_Bvector_base<_Alloc>::_Bvector_base(const allocator_type&) [with _Alloc = std::allocator<bool>]/1325 into std::vector<bool, _Alloc>::vector(std::vector<bool, _Alloc>::size_type, const bool&, const allocator_type&) [with _Alloc = std::allocator<bool>]/1232.
/usr/include/c++/11/bits/hashtable_policy.h:1276:51: note: Considering inline candidate const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 1; _Tp = std::hash<int>]/1550.
/usr/include/c++/11/bits/hashtable_policy.h:1276:51: optimized:  Inlining const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 1; _Tp = std::hash<int>]/1550 into const _Hash& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash() const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1511.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: note: Considering inline candidate std::size_t std::hash<int>::operator()(int) const/951.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: optimized:  Inlining std::size_t std::hash<int>::operator()(int) const/951 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1436.
/usr/include/c++/11/bits/hashtable_policy.h:1219:16: note: Considering inline candidate const _Hash& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash() const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1511.
/usr/include/c++/11/bits/hashtable_policy.h:1219:16: optimized:  Inlining const _Hash& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash() const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1511 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1436.
/usr/include/c++/11/bits/hashtable_policy.h:339:24: note: Considering inline candidate std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_Node_iterator_base(std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::__node_type*) [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1560.
/usr/include/c++/11/bits/hashtable_policy.h:339:24: optimized:  Inlining std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_Node_iterator_base(std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::__node_type*) [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1560 into std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1523.
/usr/include/c++/11/bits/alloc_traits.h:535:15: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = int; _Tp = std::_Rb_tree_node<int>]/1563.
/usr/include/c++/11/bits/alloc_traits.h:535:15: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = int; _Tp = std::_Rb_tree_node<int>]/1563 into static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = int; _Tp = std::_Rb_tree_node<int>]/1527.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::_Rb_tree_node<int>]/1564.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::_Rb_tree_node<int>]/1564 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::_Rb_tree_node<int>]/1528.
/usr/include/c++/11/bits/stl_tree.h:565:34: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::_Rb_tree_node<int>]/1528.
/usr/include/c++/11/bits/stl_tree.h:565:34: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::_Rb_tree_node<int>]/1528 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_put_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1472.
/usr/include/c++/11/bits/stl_tree.h:565:56: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1525.
/usr/include/c++/11/bits/stl_tree.h:565:56: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1525 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_put_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1472.
/usr/include/c++/11/bits/hashtable_policy.h:1834:40: note: Considering inline candidate _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_get() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1565.
/usr/include/c++/11/bits/hashtable_policy.h:1834:40: optimized:  Inlining _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_get() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1565 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1529.
/usr/include/c++/11/bits/alloc_traits.h:535:15: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::pair<const int, double>; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1566.
/usr/include/c++/11/bits/alloc_traits.h:535:15: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::pair<const int, double>; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1566 into static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const int, double>; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1530.
/usr/include/c++/11/bits/move.h:146:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1567.
/usr/include/c++/11/bits/move.h:146:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1567 into constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1568.
/usr/include/c++/11/bits/ptr_traits.h:150:30: note: Considering inline candidate constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1568.
/usr/include/c++/11/bits/ptr_traits.h:150:30: optimized:  Inlining constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1568 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1569.
/usr/include/c++/11/bits/allocator.h:169:53: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/1571.
/usr/include/c++/11/bits/allocator.h:169:53: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/1571 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const int, double>, false>; _Tp = std::__detail::_Hash_node_base*]/1536.
/usr/include/c++/11/bits/allocator.h:174:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/1574.
/usr/include/c++/11/bits/allocator.h:174:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/1574 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1539.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1576.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1576 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1541.
/usr/include/c++/11/bits/hashtable_policy.h:1943:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1539.
/usr/include/c++/11/bits/hashtable_policy.h:1943:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1539 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1477.
/usr/include/c++/11/bits/hashtable_policy.h:1942:41: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1541.
/usr/include/c++/11/bits/hashtable_policy.h:1942:41: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1541 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1477.
/usr/include/c++/11/bits/hashtable_policy.h:1941:28: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const int, double>, false>; _Tp = std::__detail::_Hash_node_base*]/1536.
/usr/include/c++/11/bits/hashtable_policy.h:1941:28: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const int, double>, false>; _Tp = std::__detail::_Hash_node_base*]/1536 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1477.
/usr/include/c++/11/bits/hashtable_policy.h:1941:53: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1529.
/usr/include/c++/11/bits/hashtable_policy.h:1941:53: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1529 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1477.
/usr/include/c++/11/bits/hashtable_policy.h:1940:57: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/1534.
/usr/include/c++/11/bits/hashtable_policy.h:1940:57: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/1534 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1477.
/usr/include/c++/11/bits/hashtable.h:449:42: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1477.
/usr/include/c++/11/bits/hashtable.h:449:42: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__buckets_ptr, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1477 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1391.
/usr/include/c++/11/bits/hashtable.h:446:27: note: Considering inline candidate bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_uses_single_bucket(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1476.
/usr/include/c++/11/bits/hashtable.h:446:27: optimized:  Inlining bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_uses_single_bucket(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1476 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1391.
/usr/include/c++/11/bits/hashtable.h:454:30: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1391.
/usr/include/c++/11/bits/hashtable.h:454:30: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1391 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314.
/usr/include/c++/11/utility:234:43: note: Considering inline candidate static constexpr const _Tp1& std::__pair_get<0>::__const_get(const std::pair<_T1, _T2>&) [with _Tp1 = const int; _Tp2 = double]/1584.
/usr/include/c++/11/utility:234:43: optimized:  Inlining static constexpr const _Tp1& std::__pair_get<0>::__const_get(const std::pair<_T1, _T2>&) [with _Tp1 = const int; _Tp2 = double]/1584 into constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&) [with long unsigned int _Int = 0; _Tp1 = const int; _Tp2 = double]/1585.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: note: Considering inline candidate constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&) [with long unsigned int _Int = 0; _Tp1 = const int; _Tp2 = double]/1585.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: optimized:  Inlining constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&) [with long unsigned int _Int = 0; _Tp1 = const int; _Tp2 = double]/1585 into decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const int, double>&]/1586.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const int, double>&]/1583.
/usr/include/c++/11/bits/hashtable_policy.h:95:27: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::pair<const int, double>&]/1583 into decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const int, double>&]/1586.
/usr/include/c++/11/ext/aligned_buffer.h:115:41: note: Considering inline candidate void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() [with _Tp = std::pair<const int, double>]/1589.
/usr/include/c++/11/ext/aligned_buffer.h:115:41: optimized:  Inlining void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() [with _Tp = std::pair<const int, double>]/1589 into _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = std::pair<const int, double>]/1553.
/usr/include/c++/11/bits/hashtable_policy.h:238:33: note: Considering inline candidate _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = std::pair<const int, double>]/1553.
/usr/include/c++/11/bits/hashtable_policy.h:238:33: optimized:  Inlining _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = std::pair<const int, double>]/1553 into _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1514.
/usr/include/c++/11/bits/hashtable_policy.h:246:26: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1514.
/usr/include/c++/11/bits/hashtable_policy.h:246:26: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1514 into _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const int, double>]/1439.
/usr/include/c++/11/bits/hashtable_policy.h:347:39: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1514.
/usr/include/c++/11/bits/hashtable_policy.h:347:39: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1514 into std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::pointer std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator->() const [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1459.
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1590.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1590 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1591.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1591.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1554->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1591, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/tuple:756:17: note: Considering inline candidate constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(std::_Tuple_impl<_Idx, _Head>&&) [with long unsigned int _Idx = 0; _Head = const int&]/1593.
/usr/include/c++/11/tuple:756:17: optimized:  Inlining constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(std::_Tuple_impl<_Idx, _Head>&&) [with long unsigned int _Idx = 0; _Head = const int&]/1593 into constexpr std::tuple<_Elements>::tuple(std::tuple<_Elements>&&) [with _Elements = {const int&}]/1596.
/usr/include/c++/11/bits/alloc_traits.h:496:23: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1599.
/usr/include/c++/11/bits/alloc_traits.h:496:23: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1599 into static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1557.
/usr/include/c++/11/bits/hashtable_policy.h:1905:38: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1557.
/usr/include/c++/11/bits/hashtable_policy.h:1905:38: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1557 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1531.
/usr/include/c++/11/bits/hashtable_policy.h:1905:56: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1529.
/usr/include/c++/11/bits/hashtable_policy.h:1905:56: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1529 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1531.
/usr/include/c++/11/bits/hashtable_policy.h:1903:57: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1569.
/usr/include/c++/11/bits/hashtable_policy.h:1903:57: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1569 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1531.
/usr/include/c++/11/bits/hashtable_policy.h:1895:29: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1531.
/usr/include/c++/11/bits/hashtable_policy.h:1895:29: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1531 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1475.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const int, double>; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1530.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = std::pair<const int, double>; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1530 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1475.
/usr/include/c++/11/bits/hashtable_policy.h:1894:53: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1529.
/usr/include/c++/11/bits/hashtable_policy.h:1894:53: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1529 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1475.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1514.
/usr/include/c++/11/bits/hashtable_policy.h:1894:35: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1514 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1475.
/usr/include/c++/11/bits/hashtable.h:308:57: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1475.
/usr/include/c++/11/bits/hashtable.h:308:57: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1475 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1456.
/usr/include/c++/11/bits/hashtable_policy.h:1916:22: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1475.
/usr/include/c++/11/bits/hashtable_policy.h:1916:22: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1475 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1390.
/usr/include/c++/11/bits/hashtable_policy.h:1915:22: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1473.
/usr/include/c++/11/bits/hashtable_policy.h:1915:22: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1473 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1390.
/usr/include/c++/11/bits/hashtable.h:2320:32: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1390.
/usr/include/c++/11/bits/hashtable.h:2320:32: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_ptr) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1390 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1313.
/usr/include/c++/11/bits/hashtable.h:2320:32: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1389.
/usr/include/c++/11/bits/hashtable.h:2320:32: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1389 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1313.
/usr/include/c++/11/bits/hashtable.h:1534:5: note: Considering inline candidate std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> > >::~_Hashtable_alloc()/1131.
/usr/include/c++/11/bits/hashtable.h:1534:5: optimized:  Inlining std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> > >::~_Hashtable_alloc()/1131 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223.
/usr/include/c++/11/bits/hashtable.h:1533:28: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314.
/usr/include/c++/11/bits/hashtable.h:1533:28: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223.
/usr/include/c++/11/bits/hashtable.h:1532:12: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1313.
/usr/include/c++/11/bits/hashtable.h:1532:12: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1313, growth 12 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/unordered_map.h:102:11: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223.
/usr/include/c++/11/bits/unordered_map.h:102:11: missed:   will not early inline: std::unordered_map<int, double>::~unordered_map()/1140->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223, growth 7 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/ext/aligned_buffer.h:73:41: note: Considering inline candidate void* __gnu_cxx::__aligned_membuf<_Tp>::_M_addr() [with _Tp = int]/1601.
/usr/include/c++/11/ext/aligned_buffer.h:73:41: optimized:  Inlining void* __gnu_cxx::__aligned_membuf<_Tp>::_M_addr() [with _Tp = int]/1601 into _Tp* __gnu_cxx::__aligned_membuf<_Tp>::_M_ptr() [with _Tp = int]/1562.
/usr/include/c++/11/bits/stl_tree.h:235:33: note: Considering inline candidate _Tp* __gnu_cxx::__aligned_membuf<_Tp>::_M_ptr() [with _Tp = int]/1562.
/usr/include/c++/11/bits/stl_tree.h:235:33: optimized:  Inlining _Tp* __gnu_cxx::__aligned_membuf<_Tp>::_M_ptr() [with _Tp = int]/1562 into _Val* std::_Rb_tree_node<_Val>::_M_valptr() [with _Val = int]/1526.
/usr/include/c++/11/bits/stl_tree.h:623:24: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = int; _Tp = std::_Rb_tree_node<int>]/1527.
/usr/include/c++/11/bits/stl_tree.h:623:24: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::destroy(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*) [with _Up = int; _Tp = std::_Rb_tree_node<int>]/1527 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1471.
/usr/include/c++/11/bits/stl_tree.h:623:46: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1525.
/usr/include/c++/11/bits/stl_tree.h:623:46: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1525 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1471.
/usr/include/c++/11/bits/stl_tree.h:623:24: note: Considering inline candidate _Val* std::_Rb_tree_node<_Val>::_M_valptr() [with _Val = int]/1526.
/usr/include/c++/11/bits/stl_tree.h:623:24: optimized:  Inlining _Val* std::_Rb_tree_node<_Val>::_M_valptr() [with _Val = int]/1526 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1471.
/usr/include/c++/11/bits/stl_tree.h:632:13: note: Considering inline candidate void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_put_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1472.
/usr/include/c++/11/bits/stl_tree.h:632:13: optimized:  Inlining void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_put_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1472 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_drop_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1384.
/usr/include/c++/11/bits/stl_tree.h:631:17: note: Considering inline candidate void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1471.
/usr/include/c++/11/bits/stl_tree.h:631:17: optimized:  Inlining void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1471 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_drop_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1384.
/usr/include/c++/11/bits/stl_tree.h:1891:16: note: Considering inline candidate void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_drop_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1384.
/usr/include/c++/11/bits/stl_tree.h:1891:16: optimized:  Inlining void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_drop_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1384 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1305.
/usr/include/c++/11/bits/stl_tree.h:1890:28: note: Considering inline candidate static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_left(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1383.
/usr/include/c++/11/bits/stl_tree.h:1890:28: optimized:  Inlining static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_left(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1383 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1305.
/usr/include/c++/11/bits/stl_tree.h:1889:12: note: Considering inline candidate void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1305.
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed:   Not inlining: recursive call.
/usr/include/c++/11/bits/stl_tree.h:1889:12: note: Considering inline candidate static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_right(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1382.
/usr/include/c++/11/bits/stl_tree.h:1889:12: optimized:  Inlining static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_right(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1382 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1305.
/usr/include/c++/11/bits/stl_tree.h:984:31: note: Considering inline candidate std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl<std::less<int>, true>::~_Rb_tree_impl()/1106.
/usr/include/c++/11/bits/stl_tree.h:984:31: optimized:  Inlining std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl<std::less<int>, true>::~_Rb_tree_impl()/1106 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1208.
/usr/include/c++/11/bits/stl_tree.h:984:17: note: Considering inline candidate void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1305.
/usr/include/c++/11/bits/stl_tree.h:984:17: missed:   will not early inline: std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1208->void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1305, growth 7 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_tree.h:984:17: note: Considering inline candidate std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1306.
/usr/include/c++/11/bits/stl_tree.h:984:17: optimized:  Inlining std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1306 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1208.
/usr/include/c++/11/bits/stl_set.h:281:7: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1208.
/usr/include/c++/11/bits/stl_set.h:281:7: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1208 into std::set<_Key, _Compare, _Alloc>::~set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1115.
/usr/include/c++/11/ext/aligned_buffer.h:77:47: note: Considering inline candidate const void* __gnu_cxx::__aligned_membuf<_Tp>::_M_addr() const [with _Tp = int]/1602.
/usr/include/c++/11/ext/aligned_buffer.h:77:47: optimized:  Inlining const void* __gnu_cxx::__aligned_membuf<_Tp>::_M_addr() const [with _Tp = int]/1602 into const _Tp* __gnu_cxx::__aligned_membuf<_Tp>::_M_ptr() const [with _Tp = int]/1577.
/usr/include/c++/11/bits/stl_tree.h:239:33: note: Considering inline candidate const _Tp* __gnu_cxx::__aligned_membuf<_Tp>::_M_ptr() const [with _Tp = int]/1577.
/usr/include/c++/11/bits/stl_tree.h:239:33: optimized:  Inlining const _Tp* __gnu_cxx::__aligned_membuf<_Tp>::_M_ptr() const [with _Tp = int]/1577 into const _Val* std::_Rb_tree_node<_Val>::_M_valptr() const [with _Val = int]/1548.
/usr/include/c++/11/bits/stl_tree.h:775:22: note: Considering inline candidate const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = int]/1421.
/usr/include/c++/11/bits/stl_tree.h:775:22: optimized:  Inlining const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = int]/1421 into static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1496.
/usr/include/c++/11/bits/stl_tree.h:775:38: note: Considering inline candidate const _Val* std::_Rb_tree_node<_Val>::_M_valptr() const [with _Val = int]/1548.
/usr/include/c++/11/bits/stl_tree.h:775:38: optimized:  Inlining const _Val* std::_Rb_tree_node<_Val>::_M_valptr() const [with _Val = int]/1548 into static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1496.
/usr/include/c++/11/bits/stl_tree.h:796:22: note: Considering inline candidate static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1496.
/usr/include/c++/11/bits/stl_tree.h:796:22: optimized:  Inlining static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1496 into static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1506.
/usr/include/c++/11/bits/stl_tree.h:2084:14: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = std::_Rb_tree_node_base*&; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1508.
/usr/include/c++/11/bits/stl_tree.h:2084:14: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = std::_Rb_tree_node_base*&; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1508 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420.
/usr/include/c++/11/bits/stl_tree.h:2083:9: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_node<int>*&; _U2 = std::_Rb_tree_node_base*&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1503.
/usr/include/c++/11/bits/stl_tree.h:2083:9: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_node<int>*&; _U2 = std::_Rb_tree_node_base*&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1503 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420.
/usr/include/c++/11/bits/stl_tree.h:2082:33: note: Considering inline candidate constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1497.
/usr/include/c++/11/bits/stl_tree.h:2082:33: optimized:  Inlining constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1497 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420.
/usr/include/c++/11/bits/stl_tree.h:2082:33: note: Considering inline candidate static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1506.
/usr/include/c++/11/bits/stl_tree.h:2082:33: optimized:  Inlining static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1506 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420.
/usr/include/c++/11/bits/stl_tree.h:2080:6: note: Considering inline candidate std::_Rb_tree_iterator<_Tp>::_Self& std::_Rb_tree_iterator<_Tp>::operator--() [with _Tp = int]/1505.
/usr/include/c++/11/bits/stl_tree.h:2080:6: optimized:  Inlining std::_Rb_tree_iterator<_Tp>::_Self& std::_Rb_tree_iterator<_Tp>::operator--() [with _Tp = int]/1505 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420.
/usr/include/c++/11/bits/stl_tree.h:2078:13: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_node<int>*&; _U2 = std::_Rb_tree_node_base*&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1503.
/usr/include/c++/11/bits/stl_tree.h:2078:13: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_node<int>*&; _U2 = std::_Rb_tree_node_base*&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_node_base*; _T2 = std::_Rb_tree_node_base*]/1503 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420.
/usr/include/c++/11/bits/stl_tree.h:2077:12: note: Considering inline candidate bool std::operator==(const _Self&, const _Self&)/1499.
/usr/include/c++/11/bits/stl_tree.h:2077:12: optimized:  Inlining bool std::operator==(const _Self&, const _Self&)/1499 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420.
/usr/include/c++/11/bits/stl_tree.h:2077:20: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1498.
/usr/include/c++/11/bits/stl_tree.h:2077:20: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1498 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420.
/usr/include/c++/11/bits/stl_tree.h:2074:16: note: Considering inline candidate std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1431.
/usr/include/c++/11/bits/stl_tree.h:2074:16: optimized:  Inlining std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1431 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420.
/usr/include/c++/11/bits/stl_tree.h:2072:42: note: Considering inline candidate static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_right(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1382.
/usr/include/c++/11/bits/stl_tree.h:2072:42: optimized:  Inlining static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_right(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1382 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420.
/usr/include/c++/11/bits/stl_tree.h:2072:26: note: Considering inline candidate static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_left(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1383.
/usr/include/c++/11/bits/stl_tree.h:2072:26: optimized:  Inlining static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_left(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1383 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420.
/usr/include/c++/11/bits/stl_tree.h:2071:35: note: Considering inline candidate constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1497.
/usr/include/c++/11/bits/stl_tree.h:2071:35: optimized:  Inlining constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1497 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420.
/usr/include/c++/11/bits/stl_tree.h:2071:35: note: Considering inline candidate static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1496.
/usr/include/c++/11/bits/stl_tree.h:2071:35: optimized:  Inlining static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1496 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420.
/usr/include/c++/11/bits/stl_tree.h:2066:29: note: Considering inline candidate std::_Rb_tree_node_base* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_end() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1493.
/usr/include/c++/11/bits/stl_tree.h:2066:29: optimized:  Inlining std::_Rb_tree_node_base* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_end() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1493 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420.
/usr/include/c++/11/bits/stl_tree.h:2065:32: note: Considering inline candidate std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1306.
/usr/include/c++/11/bits/stl_tree.h:2065:32: optimized:  Inlining std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1306 into std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420.
/usr/include/c++/11/bits/hashtable_policy.h:1650:48: note: Considering inline candidate const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 0; _Tp = std::equal_to<int>]/1605.
/usr/include/c++/11/bits/hashtable_policy.h:1650:48: optimized:  Inlining const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_M_cget() const [with int _Nm = 0; _Tp = std::equal_to<int>]/1605 into const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_eq() const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1581.
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::_Rb_tree_node<int>]/1611.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::_Rb_tree_node<int>]/1611 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::_Rb_tree_node<int>]/1612.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::_Rb_tree_node<int>]/1612.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::_Rb_tree_node<int>]/1603->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::_Rb_tree_node<int>]/1612, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/stl_tree.h:561:39: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::_Rb_tree_node<int>]/1603.
/usr/include/c++/11/bits/stl_tree.h:561:39: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::_Rb_tree_node<int>]/1603 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_node() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1578.
/usr/include/c++/11/bits/stl_tree.h:561:61: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1525.
/usr/include/c++/11/bits/stl_tree.h:561:61: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1525 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_node() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1578.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate void* operator new(std::size_t, void*)/938.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining void* operator new(std::size_t, void*)/938 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1613.
/usr/include/c++/11/ext/new_allocator.h:162:46: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1343.
/usr/include/c++/11/ext/new_allocator.h:162:46: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1343 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1613.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1613.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1613 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1604.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1343.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1343 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1604.
/usr/include/c++/11/bits/stl_tree.h:595:32: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1604.
/usr/include/c++/11/bits/stl_tree.h:595:32: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::_Rb_tree_node<int>]/1604 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1579.
/usr/include/c++/11/bits/stl_tree.h:595:54: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1525.
/usr/include/c++/11/bits/stl_tree.h:595:54: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1525 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1579.
/usr/include/c++/11/bits/stl_tree.h:595:32: note: Considering inline candidate _Val* std::_Rb_tree_node<_Val>::_M_valptr() [with _Val = int]/1526.
/usr/include/c++/11/bits/stl_tree.h:595:32: optimized:  Inlining _Val* std::_Rb_tree_node<_Val>::_M_valptr() [with _Val = int]/1526 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1579.
/usr/include/c++/11/bits/stl_tree.h:595:32: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1343.
/usr/include/c++/11/bits/stl_tree.h:595:32: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1343 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1579.
/usr/include/c++/11/bits/stl_tree.h:594:8: note: Considering inline candidate void* operator new(std::size_t, void*)/938.
/usr/include/c++/11/bits/stl_tree.h:594:8: optimized:  Inlining void* operator new(std::size_t, void*)/938 into void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1579.
/usr/include/c++/11/bits/stl_tree.h:612:21: note: Considering inline candidate void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1579.
/usr/include/c++/11/bits/stl_tree.h:612:21: optimized:  Inlining void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1579 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1549.
/usr/include/c++/11/bits/stl_tree.h:612:21: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1343.
/usr/include/c++/11/bits/stl_tree.h:612:21: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1343 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1549.
/usr/include/c++/11/bits/stl_tree.h:611:34: note: Considering inline candidate std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_node() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1578.
/usr/include/c++/11/bits/stl_tree.h:611:34: optimized:  Inlining std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_node() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1578 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1549.
/usr/include/c++/11/bits/stl_tree.h:529:32: note: Considering inline candidate std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1549.
/usr/include/c++/11/bits/stl_tree.h:529:32: optimized:  Inlining std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1549 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::operator()(_Arg&&) const [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1510.
/usr/include/c++/11/bits/stl_tree.h:529:32: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1343.
/usr/include/c++/11/bits/stl_tree.h:529:32: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1343 into std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::operator()(_Arg&&) const [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1510.
/usr/include/c++/11/bits/stl_tree.h:1789:9: note: Considering inline candidate std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1431.
/usr/include/c++/11/bits/stl_tree.h:1789:9: optimized:  Inlining std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1431 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1425.
/usr/include/c++/11/bits/stl_tree.h:1784:29: note: Considering inline candidate std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::operator()(_Arg&&) const [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1510.
/usr/include/c++/11/bits/stl_tree.h:1784:29: optimized:  Inlining std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::operator()(_Arg&&) const [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1510 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1425.
/usr/include/c++/11/bits/stl_tree.h:1784:29: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1343.
/usr/include/c++/11/bits/stl_tree.h:1784:29: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1343 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1425.
/usr/include/c++/11/bits/stl_tree.h:1781:35: note: Considering inline candidate constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1497.
/usr/include/c++/11/bits/stl_tree.h:1781:35: optimized:  Inlining constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1497 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1425.
/usr/include/c++/11/bits/stl_tree.h:1781:35: note: Considering inline candidate const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = int]/1421.
/usr/include/c++/11/bits/stl_tree.h:1781:35: optimized:  Inlining const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = int]/1421 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1425.
/usr/include/c++/11/bits/stl_tree.h:1781:35: note: Considering inline candidate static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1506.
/usr/include/c++/11/bits/stl_tree.h:1781:35: optimized:  Inlining static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1506 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1425.
/usr/include/c++/11/bits/stl_tree.h:1780:49: note: Considering inline candidate std::_Rb_tree_node_base* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_end() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1493.
/usr/include/c++/11/bits/stl_tree.h:1780:49: optimized:  Inlining std::_Rb_tree_node_base* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_end() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1493 into std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1425.
/usr/include/c++/11/bits/stl_tree.h:2134:14: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_iterator<int>; _T2 = bool]/1428.
/usr/include/c++/11/bits/stl_tree.h:2134:14: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_iterator<int>; _T2 = bool]/1428 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1344.
/usr/include/c++/11/bits/stl_tree.h:2134:19: note: Considering inline candidate std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1431.
/usr/include/c++/11/bits/stl_tree.h:2134:19: optimized:  Inlining std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Base_ptr) [with _Tp = int]/1431 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1344.
/usr/include/c++/11/bits/stl_tree.h:2129:11: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_iterator<int>; _T2 = bool]/1428.
/usr/include/c++/11/bits/stl_tree.h:2129:11: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_iterator<int>; _T2 = bool]/1428 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1344.
/usr/include/c++/11/bits/stl_tree.h:2129:26: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1425.
/usr/include/c++/11/bits/stl_tree.h:2129:26: missed:   will not early inline: std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1344->std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1425, growth 15 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/stl_tree.h:2129:26: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1343.
/usr/include/c++/11/bits/stl_tree.h:2129:26: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1343 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1344.
/usr/include/c++/11/bits/stl_tree.h:2128:16: note: Considering inline candidate std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::_Alloc_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1423.
/usr/include/c++/11/bits/stl_tree.h:2128:16: optimized:  Inlining std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::_Alloc_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1423 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1344.
/usr/include/c++/11/bits/stl_tree.h:2124:28: note: Considering inline candidate std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420.
/usr/include/c++/11/bits/stl_tree.h:2124:28: missed:   will not early inline: std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1344->std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420, call is cold and code would grow at least by 20
/usr/include/c++/11/bits/stl_tree.h:2124:42: note: Considering inline candidate const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = int]/1421.
/usr/include/c++/11/bits/stl_tree.h:2124:42: optimized:  Inlining const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = int]/1421 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1344.
/usr/include/c++/11/bits/stl_set.h:513:14: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>&; _U2 = bool&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_const_iterator<int>; _T2 = bool]/1348.
/usr/include/c++/11/bits/stl_set.h:513:14: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::_Rb_tree_iterator<int>&; _U2 = bool&; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::_Rb_tree_const_iterator<int>; _T2 = bool]/1348 into std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Tp>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1248.
/usr/include/c++/11/bits/stl_set.h:512:25: note: Considering inline candidate std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1344.
/usr/include/c++/11/bits/stl_set.h:512:25: missed:   will not early inline: std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Tp>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1248->std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1344, call is cold and code would grow at least by 17
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:59:1: note: Considering inline candidate std::set<_Key, _Compare, _Alloc>::~set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1115.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:59:1: optimized:  Inlining std::set<_Key, _Compare, _Alloc>::~set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1115 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:59:1: note: Considering inline candidate std::unordered_map<int, double>::~unordered_map()/1140.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:59:1: optimized:  Inlining std::unordered_map<int, double>::~unordered_map()/1140 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:39:5: note: Considering inline candidate std::vector<bool, _Alloc>::~vector() [with _Alloc = std::allocator<bool>]/1235.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:39:5: optimized:  Inlining std::vector<bool, _Alloc>::~vector() [with _Alloc = std::allocator<bool>]/1235 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:10:14: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = bool]/1229.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:10:14: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = bool]/1229 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:59:1: note: Considering inline candidate std::set<_Key, _Compare, _Alloc>::~set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1115.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:59:1: optimized:  Inlining std::set<_Key, _Compare, _Alloc>::~set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1115 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:59:1: note: Considering inline candidate std::unordered_map<int, double>::~unordered_map()/1140.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:59:1: optimized:  Inlining std::unordered_map<int, double>::~unordered_map()/1140 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:57:30: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size() const [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1252.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:57:30: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size() const [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1252 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:39:5: note: Considering inline candidate std::vector<bool, _Alloc>::~vector() [with _Alloc = std::allocator<bool>]/1235.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:39:5: optimized:  Inlining std::vector<bool, _Alloc>::~vector() [with _Alloc = std::allocator<bool>]/1235 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:38:31: note: Considering inline candidate std::set<_Key, _Compare, _Alloc>::size_type std::set<_Key, _Compare, _Alloc>::size() const [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1249.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:38:31: optimized:  Inlining std::set<_Key, _Compare, _Alloc>::size_type std::set<_Key, _Compare, _Alloc>::size() const [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1249 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:33:44: note: Considering inline candidate std::vector<bool, _Alloc>::size_type std::vector<bool, _Alloc>::size() const [with _Alloc = std::allocator<bool>]/1238.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:33:44: optimized:  Inlining std::vector<bool, _Alloc>::size_type std::vector<bool, _Alloc>::size() const [with _Alloc = std::allocator<bool>]/1238 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:35:34: note: Considering inline candidate std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Tp>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1248.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:35:34: optimized:  Inlining std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Tp>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1248 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:34:30: note: Considering inline candidate std::_Bit_reference::operator bool() const/1038.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:34:30: optimized:  Inlining std::_Bit_reference::operator bool() const/1038 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:34:29: note: Considering inline candidate std::vector<bool, _Alloc>::reference std::vector<bool, _Alloc>::operator[](std::vector<bool, _Alloc>::size_type) [with _Alloc = std::allocator<bool>]/1237.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:34:29: optimized:  Inlining std::vector<bool, _Alloc>::reference std::vector<bool, _Alloc>::operator[](std::vector<bool, _Alloc>::size_type) [with _Alloc = std::allocator<bool>]/1237 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:10:14: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = bool]/1229.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:10:14: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = bool]/1229 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:16:70: note: Considering inline candidate std::vector<bool, _Alloc>::vector(std::vector<bool, _Alloc>::size_type, const bool&, const allocator_type&) [with _Alloc = std::allocator<bool>]/1232.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:16:70: missed:   will not early inline: unsigned int CalculateTwoElectronIntegrals(bool, int)/1143->std::vector<bool, _Alloc>::vector(std::vector<bool, _Alloc>::size_type, const bool&, const allocator_type&) [with _Alloc = std::allocator<bool>]/1232, growth 10 exceeds --param early-inlining-insns divided by number of calls
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:16:70: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = bool]/1226.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:16:70: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = bool]/1226 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:12:37: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map() [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1137.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:12:37: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_map() [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1137 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:11:19: note: Considering inline candidate std::set<_Key, _Compare, _Alloc>::set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1112.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:11:19: optimized:  Inlining std::set<_Key, _Compare, _Alloc>::set() [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1112 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143.
/usr/include/c++/11/tuple:424:65: note: Considering inline candidate static constexpr _Head& std::_Head_base<_Idx, _Head, false>::_M_head(std::_Head_base<_Idx, _Head, false>&) [with long unsigned int _Idx = 0; _Head = const int&]/1615.
/usr/include/c++/11/tuple:424:65: optimized:  Inlining static constexpr _Head& std::_Head_base<_Idx, _Head, false>::_M_head(std::_Head_base<_Idx, _Head, false>&) [with long unsigned int _Idx = 0; _Head = const int&]/1615 into static constexpr _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(std::_Tuple_impl<_Idx, _Head>&) [with long unsigned int _Idx = 0; _Head = const int&]/1616.
/usr/include/c++/11/tuple:1378:56: note: Considering inline candidate static constexpr _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(std::_Tuple_impl<_Idx, _Head>&) [with long unsigned int _Idx = 0; _Head = const int&]/1616.
/usr/include/c++/11/tuple:1378:56: optimized:  Inlining static constexpr _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(std::_Tuple_impl<_Idx, _Head>&) [with long unsigned int _Idx = 0; _Head = const int&]/1616 into constexpr _Head& std::__get_helper(std::_Tuple_impl<_Idx, _Head, _Tail ...>&) [with long unsigned int __i = 0; _Head = const int&; _Tail = {}]/1617.
/usr/include/c++/11/tuple:1394:36: note: Considering inline candidate constexpr _Head& std::__get_helper(std::_Tuple_impl<_Idx, _Head, _Tail ...>&) [with long unsigned int __i = 0; _Head = const int&; _Tail = {}]/1617.
/usr/include/c++/11/tuple:1394:36: optimized:  Inlining constexpr _Head& std::__get_helper(std::_Tuple_impl<_Idx, _Head, _Tail ...>&) [with long unsigned int __i = 0; _Head = const int&; _Tail = {}]/1617 into constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >& std::get(std::tuple<_UTypes ...>&) [with long unsigned int __i = 0; _Elements = {const int&}]/1618.
/usr/include/c++/11/tuple:1819:35: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1343.
/usr/include/c++/11/tuple:1819:35: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/1343 into std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {const int&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const int; _T2 = double]/1620.
/usr/include/c++/11/tuple:1819:55: note: Considering inline candidate constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >& std::get(std::tuple<_UTypes ...>&) [with long unsigned int __i = 0; _Elements = {const int&}]/1618.
/usr/include/c++/11/tuple:1819:55: optimized:  Inlining constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >& std::get(std::tuple<_UTypes ...>&) [with long unsigned int __i = 0; _Elements = {const int&}]/1618 into std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {const int&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const int; _T2 = double]/1620.
/usr/include/c++/11/tuple:1809:63: note: Considering inline candidate std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {const int&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const int; _T2 = double]/1620.
/usr/include/c++/11/tuple:1809:63: optimized:  Inlining std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {const int&}; long unsigned int ..._Indexes1 = {0}; _Args2 = {}; long unsigned int ..._Indexes2 = {}; _T1 = const int; _T2 = double]/1620 into std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {const int&}; _Args2 = {}; _T1 = const int; _T2 = double]/1608.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {const int&}; _Args2 = {}; _T1 = const int; _T2 = double]/1608.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {const int&}; _Args2 = {}; _T1 = const int; _T2 = double]/1608 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1598.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate void* operator new(std::size_t, void*)/938.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining void* operator new(std::size_t, void*)/938 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1598.
/usr/include/c++/11/ext/new_allocator.h:162:46: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1451.
/usr/include/c++/11/ext/new_allocator.h:162:46: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1451 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1598.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate constexpr std::tuple<_Elements>::tuple(std::tuple<_Elements>&&) [with _Elements = {const int&}]/1596.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining constexpr std::tuple<_Elements>::tuple(std::tuple<_Elements>&&) [with _Elements = {const int&}]/1596 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1598.
/usr/include/c++/11/ext/new_allocator.h:162:4: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1450.
/usr/include/c++/11/ext/new_allocator.h:162:4: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1450 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1598.
/usr/include/c++/11/ext/new_allocator.h:162:46: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1449.
/usr/include/c++/11/ext/new_allocator.h:162:46: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1449 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1598.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1598.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1598 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1556.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1449.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1449 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1556.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1450.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1450 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1556.
/usr/include/c++/11/bits/alloc_traits.h:516:17: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1451.
/usr/include/c++/11/bits/alloc_traits.h:516:17: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1451 into static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1556.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1556.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const int, double>; _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1556 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1518.
/usr/include/c++/11/bits/hashtable_policy.h:1878:54: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1529.
/usr/include/c++/11/bits/hashtable_policy.h:1878:54: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1529 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1518.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1514.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = std::pair<const int, double>]/1514 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1518.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1449.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1449 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1518.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1450.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1450 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1518.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1451.
/usr/include/c++/11/bits/hashtable_policy.h:1878:36: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1451 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1518.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: note: Considering inline candidate std::__detail::_Hash_node<std::pair<const int, double>, false>::_Hash_node()/1516.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: optimized:  Inlining std::__detail::_Hash_node<std::pair<const int, double>, false>::_Hash_node()/1516 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1518.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: note: Considering inline candidate void* operator new(std::size_t, void*)/938.
/usr/include/c++/11/bits/hashtable_policy.h:1877:6: optimized:  Inlining void* operator new(std::size_t, void*)/938 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1518.
/usr/include/c++/11/bits/hashtable_policy.h:1874:36: note: Considering inline candidate constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1555.
/usr/include/c++/11/bits/hashtable_policy.h:1874:36: optimized:  Inlining constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1555 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1518.
/usr/include/c++/11/bits/hashtable_policy.h:1873:45: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1554.
/usr/include/c++/11/bits/hashtable_policy.h:1873:45: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node<std::pair<const int, double>, false>]/1554 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1518.
/usr/include/c++/11/bits/hashtable_policy.h:1873:63: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1529.
/usr/include/c++/11/bits/hashtable_policy.h:1873:63: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1529 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1518.
/usr/include/c++/11/bits/hashtable.h:304:35: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1518.
/usr/include/c++/11/bits/hashtable.h:304:35: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1518 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1453.
/usr/include/c++/11/bits/hashtable.h:304:35: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1449.
/usr/include/c++/11/bits/hashtable.h:304:35: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::piecewise_construct_t&]/1449 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1453.
/usr/include/c++/11/bits/hashtable.h:304:35: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1450.
/usr/include/c++/11/bits/hashtable.h:304:35: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<const int&>]/1450 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1453.
/usr/include/c++/11/bits/hashtable.h:304:35: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1451.
/usr/include/c++/11/bits/hashtable.h:304:35: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<>]/1451 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1453.
/usr/include/c++/11/ext/aligned_buffer.h:119:47: note: Considering inline candidate const void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() const [with _Tp = std::pair<const int, double>]/1624.
/usr/include/c++/11/ext/aligned_buffer.h:119:47: optimized:  Inlining const void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() const [with _Tp = std::pair<const int, double>]/1624 into const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = std::pair<const int, double>]/1614.
/usr/include/c++/11/bits/hashtable_policy.h:242:33: note: Considering inline candidate const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = std::pair<const int, double>]/1614.
/usr/include/c++/11/bits/hashtable_policy.h:242:33: optimized:  Inlining const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = std::pair<const int, double>]/1614 into const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = std::pair<const int, double>]/1606.
/usr/include/c++/11/bits/hashtable_policy.h:250:26: note: Considering inline candidate const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = std::pair<const int, double>]/1606.
/usr/include/c++/11/bits/hashtable_policy.h:250:26: optimized:  Inlining const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = std::pair<const int, double>]/1606 into const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const int, double>]/1582.
/usr/include/c++/11/bits/hashtable_policy.h:1617:39: note: Considering inline candidate constexpr bool std::equal_to<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1587.
/usr/include/c++/11/bits/hashtable_policy.h:1617:39: optimized:  Inlining constexpr bool std::equal_to<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/1587 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1551.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: note: Considering inline candidate decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const int, double>&]/1586.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: optimized:  Inlining decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const int, double>&]/1586 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1551.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: note: Considering inline candidate const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const int, double>]/1582.
/usr/include/c++/11/bits/hashtable_policy.h:1617:58: optimized:  Inlining const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const int, double>]/1582 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1551.
/usr/include/c++/11/bits/hashtable_policy.h:1617:37: note: Considering inline candidate const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_eq() const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1581.
/usr/include/c++/11/bits/hashtable_policy.h:1617:37: optimized:  Inlining const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_eq() const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1581 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1551.
/usr/include/c++/11/bits/hashtable_policy.h:1617:18: note: Considering inline candidate static bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_S_equals(std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_code_cache<false>&) [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1580.
/usr/include/c++/11/bits/hashtable_policy.h:1617:18: optimized:  Inlining static bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_S_equals(std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_code_cache<false>&) [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1580 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1551.
/usr/include/c++/11/bits/hashtable_policy.h:1242:21: note: Considering inline candidate std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/975.
/usr/include/c++/11/bits/hashtable_policy.h:1242:21: optimized:  Inlining std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/975 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1588.
/usr/include/c++/11/bits/hashtable_policy.h:1242:21: note: Considering inline candidate std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1436.
/usr/include/c++/11/bits/hashtable_policy.h:1242:21: optimized:  Inlining std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1436 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1588.
/usr/include/c++/11/bits/hashtable_policy.h:1242:48: note: Considering inline candidate decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const int, double>&]/1586.
/usr/include/c++/11/bits/hashtable_policy.h:1242:48: optimized:  Inlining decltype (get<0>(forward<_Tp>(__x))) std::__detail::_Select1st::operator()(_Tp&&) const [with _Tp = const std::pair<const int, double>&]/1586 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1588.
/usr/include/c++/11/bits/hashtable_policy.h:1242:48: note: Considering inline candidate const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const int, double>]/1582.
/usr/include/c++/11/bits/hashtable_policy.h:1242:48: optimized:  Inlining const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = std::pair<const int, double>]/1582 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1588.
/usr/include/c++/11/bits/hashtable.h:791:49: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1588.
/usr/include/c++/11/bits/hashtable.h:791:49: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1588 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1552.
/usr/include/c++/11/bits/hashtable.h:1838:23: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1473.
/usr/include/c++/11/bits/hashtable.h:1838:23: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1473 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1513.
/usr/include/c++/11/bits/hashtable.h:1843:39: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1552.
/usr/include/c++/11/bits/hashtable.h:1843:39: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1552 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1513.
/usr/include/c++/11/bits/hashtable.h:1843:53: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1473.
/usr/include/c++/11/bits/hashtable.h:1843:53: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1473 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1513.
/usr/include/c++/11/bits/hashtable.h:1840:23: note: Considering inline candidate bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1551.
/usr/include/c++/11/bits/hashtable.h:1840:23: optimized:  Inlining bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _Traits>::__hash_code, const std::__detail::_Hash_node_value<_Value, typename _Traits::__hash_cached::value>&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1551 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1513.
/usr/include/c++/11/bits/hashtable.h:810:50: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1513.
/usr/include/c++/11/bits/hashtable.h:810:50: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_base_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1513 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1438.
/usr/include/c++/11/bits/hashtable.h:1908:32: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1552.
/usr/include/c++/11/bits/hashtable.h:1908:32: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(const __node_value_type&) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1552 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1521.
/usr/include/c++/11/bits/hashtable.h:1908:49: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1473.
/usr/include/c++/11/bits/hashtable.h:1908:49: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1473 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1521.
/usr/include/c++/11/ext/new_allocator.h:111:46: note: Considering inline candidate constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node_base*]/1625.
/usr/include/c++/11/ext/new_allocator.h:111:46: optimized:  Inlining constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = std::__detail::_Hash_node_base*]/1625 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/1626.
/usr/include/c++/11/bits/alloc_traits.h:464:28: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/1626.
/usr/include/c++/11/bits/alloc_traits.h:464:28: missed:   will not early inline: static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1622->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/1626, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1539.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1539 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1610.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1539.
/usr/include/c++/11/bits/hashtable_policy.h:1931:5: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/1539 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1610.
/usr/include/c++/11/bits/hashtable_policy.h:1928:44: note: Considering inline candidate constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node_base*]/1623.
/usr/include/c++/11/bits/hashtable_policy.h:1928:44: optimized:  Inlining constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node_base*]/1623 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1610.
/usr/include/c++/11/bits/hashtable_policy.h:1927:52: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1622.
/usr/include/c++/11/bits/hashtable_policy.h:1927:52: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/1622 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1610.
/usr/include/c++/11/bits/hashtable_policy.h:1925:28: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const int, double>, false>; _Tp = std::__detail::_Hash_node_base*]/1536.
/usr/include/c++/11/bits/hashtable_policy.h:1925:28: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<std::pair<const int, double>, false>; _Tp = std::__detail::_Hash_node_base*]/1536 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1610.
/usr/include/c++/11/bits/hashtable_policy.h:1925:53: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1529.
/usr/include/c++/11/bits/hashtable_policy.h:1925:53: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1529 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1610.
/usr/include/c++/11/bits/hashtable.h:440:47: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1610.
/usr/include/c++/11/bits/hashtable.h:440:47: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1600->std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const int, double>, false> >]/1610, growth 6 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/11/bits/hashtable.h:2409:28: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314.
/usr/include/c++/11/bits/hashtable.h:2409:28: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1314 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1558.
/usr/include/c++/11/bits/hashtable.h:2390:41: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1588.
/usr/include/c++/11/bits/hashtable.h:2390:41: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_bucket_index(const std::__detail::_Hash_node_value<_Value, false>&, std::size_t) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1588 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1558.
/usr/include/c++/11/bits/hashtable.h:2388:36: note: Considering inline candidate std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1473.
/usr/include/c++/11/bits/hashtable.h:2388:36: optimized:  Inlining std::__detail::_Hash_node<_Value, _Cache_hash_code>* std::__detail::_Hash_node<_Value, _Cache_hash_code>::_M_next() const [with _Value = std::pair<const int, double>; bool _Cache_hash_code = false]/1473 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1558.
/usr/include/c++/11/bits/hashtable.h:2383:32: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1389.
/usr/include/c++/11/bits/hashtable.h:2383:32: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1389 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1558.
/usr/include/c++/11/bits/hashtable.h:2382:56: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1600.
/usr/include/c++/11/bits/hashtable.h:2382:56: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__buckets_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1600 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1558.
/usr/include/c++/11/bits/hashtable.h:2367:29: note: Considering inline candidate void std::__detail::_Prime_rehash_policy::_M_reset(std::__detail::_Prime_rehash_policy::_State)/983.
/usr/include/c++/11/bits/hashtable.h:2367:29: optimized:  Inlining void std::__detail::_Prime_rehash_policy::_M_reset(std::__detail::_Prime_rehash_policy::_State)/983 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1519.
/usr/include/c++/11/bits/hashtable.h:2361:17: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1558.
/usr/include/c++/11/bits/hashtable.h:2361:17: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1519->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1558, call is cold and code would grow at least by 33
/usr/include/c++/11/bits/hashtable.h:2030:14: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1523.
/usr/include/c++/11/bits/hashtable.h:2030:14: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1523 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1458.
/usr/include/c++/11/bits/hashtable.h:2028:29: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1521.
/usr/include/c++/11/bits/hashtable.h:2028:29: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1458->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1521, growth 16 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/hashtable.h:2025:26: note: Considering inline candidate void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1520.
/usr/include/c++/11/bits/hashtable.h:2025:26: optimized:  Inlining void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1520 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1458.
/usr/include/c++/11/bits/hashtable.h:2022:27: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1437.
/usr/include/c++/11/bits/hashtable.h:2022:27: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1437 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1458.
/usr/include/c++/11/bits/hashtable.h:2021:13: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1519.
/usr/include/c++/11/bits/hashtable.h:2021:13: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1458->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1519, call is cold and code would grow at least by 17
/usr/include/c++/11/bits/hashtable.h:2014:70: note: Considering inline candidate std::__detail::_Prime_rehash_policy::_State std::__detail::_Prime_rehash_policy::_M_state() const/981.
/usr/include/c++/11/bits/hashtable.h:2014:70: optimized:  Inlining std::__detail::_Prime_rehash_policy::_State std::__detail::_Prime_rehash_policy::_M_state() const/981 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1458.
/usr/include/c++/11/bits/hashtable_policy.h:717:5: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1456.
/usr/include/c++/11/bits/hashtable_policy.h:717:5: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1456 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1357.
/usr/include/c++/11/bits/hashtable_policy.h:717:5: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1456.
/usr/include/c++/11/bits/hashtable_policy.h:717:5: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::~_Scoped_node() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1456 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1357.
/usr/include/c++/11/bits/hashtable_policy.h:716:14: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::pointer std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator->() const [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1459.
/usr/include/c++/11/bits/hashtable_policy.h:716:14: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::pointer std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator->() const [with _Value = std::pair<const int, double>; bool __constant_iterators = false; bool __cache = false]/1459 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1357.
/usr/include/c++/11/bits/hashtable_policy.h:714:30: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1458.
/usr/include/c++/11/bits/hashtable_policy.h:714:30: missed:   will not early inline: std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1357->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1458, call is cold and code would grow at least by 17
/usr/include/c++/11/bits/hashtable_policy.h:707:42: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1453.
/usr/include/c++/11/bits/hashtable_policy.h:707:42: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_Scoped_node::_Scoped_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hashtable_alloc*, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const int&>, std::tuple<>}; _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1453 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1357.
/usr/include/c++/11/bits/hashtable_policy.h:710:7: note: Considering inline candidate constexpr std::tuple<_Elements>::tuple(const _Elements& ...) [with bool _NotEmpty = true; typename std::enable_if<std::tuple<_Elements>::_TCC<_Dummy>::__is_implicitly_constructible<const _Elements& ...>(), bool>::type <anonymous> = true; _Elements = {const int&}]/1447.
/usr/include/c++/11/bits/hashtable_policy.h:710:7: optimized:  Inlining constexpr std::tuple<_Elements>::tuple(const _Elements& ...) [with bool _NotEmpty = true; typename std::enable_if<std::tuple<_Elements>::_TCC<_Dummy>::__is_implicitly_constructible<const _Elements& ...>(), bool>::type <anonymous> = true; _Elements = {const int&}]/1447 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1357.
/usr/include/c++/11/bits/hashtable_policy.h:705:21: note: Considering inline candidate _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const int, double>]/1439.
/usr/include/c++/11/bits/hashtable_policy.h:705:21: optimized:  Inlining _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = std::pair<const int, double>]/1439 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1357.
/usr/include/c++/11/bits/hashtable_policy.h:704:42: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1438.
/usr/include/c++/11/bits/hashtable_policy.h:704:42: missed:   will not early inline: std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1357->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1438, growth 15 exceeds --param early-inlining-insns
/usr/include/c++/11/bits/hashtable_policy.h:703:47: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1437.
/usr/include/c++/11/bits/hashtable_policy.h:703:47: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1437 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1357.
/usr/include/c++/11/bits/hashtable_policy.h:702:45: note: Considering inline candidate std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1436.
/usr/include/c++/11/bits/hashtable_policy.h:702:45: optimized:  Inlining std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash, _Unused, __cache_hash_code>::_M_hash_code(const _Key&) const [with _Key = int; _Value = std::pair<const int, double>; _ExtractKey = std::__detail::_Select1st; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; bool __cache_hash_code = false]/1436 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1357.
/usr/include/c++/11/bits/unordered_map.h:980:20: note: Considering inline candidate std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1357.
/usr/include/c++/11/bits/unordered_map.h:980:20: missed:   will not early inline: std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](const key_type&) [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1251->std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1357, call is cold and code would grow at least by 26
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:51:42: note: Considering inline candidate std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](const key_type&) [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1251.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:51:42: optimized:  Inlining std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](const key_type&) [with _Key = int; _Tp = double; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, double> >]/1251 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.1/1650.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:49:53: note: Considering inline candidate constexpr typename __gnu_cxx::__enable_if<std::__is_integer<_Tp>::__value, double>::__type std::sin(_Tp) [with _Tp = int]/1250.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:49:53: optimized:  Inlining constexpr typename __gnu_cxx::__enable_if<std::__is_integer<_Tp>::__value, double>::__type std::sin(_Tp) [with _Tp = int]/1250 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.1/1650.
/usr/include/c++/11/ext/new_allocator.h:103:7: optimized: Semantic equality hit:_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = long unsigned int]/1547->_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/1626
/usr/include/c++/11/ext/new_allocator.h:103:7: optimized: Assembler symbol names:_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv/1547->_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv/1626
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_erase.isra/1765 -> void operator delete(void*, std::size_t)/1666, function body not available
/usr/include/c++/11/bits/stl_tree.h:1786:31: missed:   not inlinable: _M_insert_.isra/1764 -> void std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)/1670, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.isra/1762 -> long int __builtin_expect(long int, long int)/1662, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.isra/1762 -> void std::__throw_bad_array_new_length()/1663, function body not available
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.isra/1762 -> void std::__throw_bad_alloc()/1664, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.isra/1762 -> void* operator new(std::size_t)/1665, function body not available
/usr/include/c++/11/bits/hashtable.h:434:22: missed:   not inlinable: _M_rehash_aux.isra/1761 -> long int __builtin_expect(long int, long int)/1662, function body not available
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: _M_rehash_aux.isra/1761 -> long int __builtin_expect(long int, long int)/1662, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: _M_rehash_aux.isra/1761 -> void operator delete(void*, std::size_t)/1666, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.isra/1760 -> long int __builtin_expect(long int, long int)/1662, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.isra/1760 -> void std::__throw_bad_array_new_length()/1663, function body not available
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.isra/1760 -> void std::__throw_bad_alloc()/1664, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.isra/1760 -> void* operator new(std::size_t)/1665, function body not available
/usr/include/c++/11/bits/hashtable_policy.h:1929:23: missed:   not inlinable: _M_allocate_buckets.isra/1759 -> void* __builtin_memset(void*, int, long unsigned int)/1668, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.isra/1758 -> long int __builtin_expect(long int, long int)/1662, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.isra/1758 -> void std::__throw_bad_array_new_length()/1663, function body not available
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.isra/1758 -> void std::__throw_bad_alloc()/1664, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.isra/1758 -> void* operator new(std::size_t)/1665, function body not available
/usr/include/c++/11/ext/new_allocator.h:111:22: missed:   not inlinable: allocate.constprop/1756 -> long int __builtin_expect(long int, long int)/1662, function body not available
/usr/include/c++/11/ext/new_allocator.h:116:41: missed:   not inlinable: allocate.constprop/1756 -> void __builtin_unreachable()/1757, unreachable
/usr/include/c++/11/ext/new_allocator.h:117:28: missed:   not inlinable: allocate.constprop/1756 -> void std::__throw_bad_alloc()/1664, function body not available
/usr/include/c++/11/ext/new_allocator.h:127:41: missed:   not inlinable: allocate.constprop/1756 -> void* operator new(std::size_t)/1665, function body not available
missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.1/1650 -> void __builtin_GOMP_barrier()/1653, function body not available
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:50:54: missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.1/1650 -> double sqrt(double)/1655, function body not available
/usr/include/c++/11/cmath:438:27: missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.1/1650 -> double __builtin_sin(double)/1657, function body not available
missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.1/1650 -> int __builtin_omp_get_thread_num()/1652, function body not available
missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.1/1650 -> int __builtin_omp_get_num_threads()/1651, function body not available
missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1649 -> void __builtin_GOMP_barrier()/1653, function body not available
missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1649 -> int __builtin_omp_get_thread_num()/1652, function body not available
missed:   not inlinable: _Z29CalculateTwoElectronIntegralsbi._omp_fn.0/1649 -> int __builtin_omp_get_num_threads()/1651, function body not available
/usr/include/c++/11/bits/hashtable.h:2363:7: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1519 -> void __cxa_end_catch()/1661, function body not available
/usr/include/c++/11/bits/hashtable.h:2368:4: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1519 -> void __cxa_rethrow()/1660, function body not available
/usr/include/c++/11/bits/hashtable.h:2363:7: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1519 -> void* __cxa_begin_catch(void*)/1659, function body not available
/usr/include/c++/11/bits/hashtable.h:2363:7: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1519 -> void* __builtin_eh_pointer(int)/1658, function body not available
/usr/include/c++/11/bits/hashtable.h:2016:35: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1458 -> std::pair<bool, long unsigned int> std::__detail::_Prime_rehash_policy::_M_need_rehash(std::size_t, std::size_t, std::size_t) const/1667, function body not available
/usr/include/c++/11/bits/stl_tree.h:302:30: missed:   not inlinable: std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420 -> std::_Rb_tree_node_base* std::_Rb_tree_decrement(std::_Rb_tree_node_base*)/1669, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: void std::_Bvector_base<_Alloc>::_M_deallocate() [with _Alloc = std::allocator<bool>]/1401 -> void operator delete(void*, std::size_t)/1666, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1357 -> void operator delete(void*, std::size_t)/1666, function body not available
/usr/include/c++/11/bits/stl_bvector.h:1153:20: missed:   not inlinable: void std::vector<bool, _Alloc>::_M_initialize_value(bool) [with _Alloc = std::allocator<bool>]/1331 -> void* __builtin_memset(void*, int, long unsigned int)/1668, function body not available
/usr/include/c++/11/bits/hashtable.h:2321:23: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1313 -> void* __builtin_memset(void*, int, long unsigned int)/1668, function body not available
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1313 -> void operator delete(void*, std::size_t)/1666, function body not available
/usr/include/c++/11/bits/stl_bvector.h:543:28: missed:   not inlinable: std::vector<bool, _Alloc>::vector(std::vector<bool, _Alloc>::size_type, const bool&, const allocator_type&) [with _Alloc = std::allocator<bool>]/1232 -> void std::_Bvector_base<_Alloc>::_M_deallocate() [with _Alloc = std::allocator<bool>]/1401, call is unlikely and code size would grow
/usr/include/c++/11/ext/new_allocator.h:145:19: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223 -> void operator delete(void*, std::size_t)/1666, function body not available
/usr/include/c++/11/bits/hashtable.h:422:32: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223 -> long int __builtin_expect(long int, long int)/1662, function body not available
/usr/include/c++/11/bits/stl_tree.h:984:17: missed:   not inlinable: unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 -> _M_erase.isra/1765, call is unlikely and code size would grow
/usr/include/c++/11/bits/unordered_map.h:102:11: missed:   not inlinable: unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 -> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1224, call is unlikely and code size would grow
/usr/include/c++/11/bits/stl_bvector.h:543:28: missed:   not inlinable: unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 -> void std::_Bvector_base<_Alloc>::_M_deallocate() [with _Alloc = std::allocator<bool>]/1401, call is unlikely and code size would grow
missed:   not inlinable: unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 -> void __builtin_GOMP_parallel(void (*)(void*), void*, unsigned int, unsigned int)/1656, function body not available
missed:   not inlinable: unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 -> void __builtin_GOMP_parallel(void (*)(void*), void*, unsigned int, unsigned int)/1656, function body not available
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.constprop/1756 into _M_insert_.isra/1764 which now has time 37.740000 and size 27, net change of -8.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.isra/1760 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1357 which now has time 36.629890 and size 35, net change of -14.
/usr/include/c++/11/bits/unordered_map.h:980:20: optimized:  Inlined std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1357 into _Z29CalculateTwoElectronIntegralsbi._omp_fn.1/1650 which now has time 192053.405029 and size 87, net change of -8.
/usr/include/c++/11/bits/hashtable_policy.h:704:42: optimized:  Inlined _M_find_node.isra/1763 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1357 which now has time 254772.473145 and size 35, net change of -11.
/usr/include/c++/11/bits/hashtable_policy.h:714:30: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1458 into std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = int; _Pair = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1357 which now has time 266767.604004 and size 35, net change of -13.
/usr/include/c++/11/bits/hashtable.h:2028:29: optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1521 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1458 which now has time 266555.690918 and size 31, net change of -10.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.isra/1758 into _M_allocate_buckets.isra/1759 which now has time 30.900000 and size 18, net change of -8.
/usr/include/c++/11/bits/hashtable.h:2021:13: optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1519 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::__node_ptr, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1458 which now has time 266555.690918 and size 31, net change of -8.
/usr/include/c++/11/bits/alloc_traits.h:464:28: optimized:  Inlined allocate.isra/1762 into void std::vector<bool, _Alloc>::_M_initialize(std::vector<bool, _Alloc>::size_type) [with _Alloc = std::allocator<bool>]/1755 which now has time 34.720000 and size 32, net change of -8.
/usr/include/c++/11/bits/stl_bvector.h:657:21: optimized:  Inlined void std::vector<bool, _Alloc>::_M_initialize_value(bool) [with _Alloc = std::allocator<bool>]/1331 into std::vector<bool, _Alloc>::vector(std::vector<bool, _Alloc>::size_type, const bool&, const allocator_type&) [with _Alloc = std::allocator<bool>]/1232 which now has time 29.410000 and size 30, net change of -7.
/usr/include/c++/11/bits/hashtable.h:2361:17: optimized:  Inlined _M_rehash_aux.isra/1761 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1519 which now has time 296396.688965 and size 25, net change of -12.
/usr/include/c++/11/bits/hashtable.h:440:47: optimized:  Inlined _M_allocate_buckets.isra/1759 into _M_rehash_aux.isra/1761 which now has time 298378.308594 and size 46, net change of -7.
/usr/include/c++/11/bits/hashtable.h:1532:12: optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1313 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1223 which now has time 157.563637 and size 25, net change of -7.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:16:70: optimized:  Inlined std::vector<bool, _Alloc>::vector(std::vector<bool, _Alloc>::size_type, const bool&, const allocator_type&) [with _Alloc = std::allocator<bool>]/1232 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 which now has time 195.422730 and size 113, net change of -11.
/usr/include/c++/11/bits/stl_set.h:512:25: missed:   not inlinable: unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 -> std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1344, --param max-inline-insns-auto limit reached
/usr/include/c++/11/bits/stl_tree.h:2129:26: optimized:  Inlined _M_insert_.isra/1764 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1344 which now has time 39.730541 and size 38, net change of -13.
/usr/include/c++/11/bits/stl_tree.h:2124:28: optimized:  Inlined std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1420 into std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]/1344 which now has time 102.337360 and size 60, net change of -9.
optimized:  Inlined void std::vector<bool, _Alloc>::_M_initialize(std::vector<bool, _Alloc>::size_type) [with _Alloc = std::allocator<bool>]/1755 into std::vector<bool, _Alloc>::vector(std::vector<bool, _Alloc>::size_type, const bool&, const allocator_type&) [with _Alloc = std::allocator<bool>]/1232 which now has time 198.594030 and size 30, net change of -7.
/usr/include/c++/11/bits/unordered_map.h:102:11: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = std::pair<const int, double>; _Alloc = std::allocator<std::pair<const int, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]/1766 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 which now has time 341.657670 and size 156, net change of +18.
/usr/include/c++/11/bits/stl_bvector.h:543:28: optimized:  Inlined void std::_Bvector_base<_Alloc>::_M_deallocate() [with _Alloc = std::allocator<bool>]/1768 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 which now has time 341.232670 and size 168, net change of +12.
/usr/include/c++/11/bits/stl_tree.h:984:17: optimized:  Inlined _M_erase.isra/1769 into unsigned int CalculateTwoElectronIntegrals(bool, int)/1143 which now has time 361.723579 and size 175, net change of +7.
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed:    not inlining recursively: frequency of recursive call is too large
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed:    not inlining recursively: --param max-inline-recursive-depth exceeded.
/usr/include/c++/11/bits/stl_tree.h:1889:12: note: 
   Inlined 8 times, body grown from size 13 to 69, time 34.490909 to 139.523112
/usr/include/c++/11/bits/stl_tree.h:1889:12: optimized:  Inlined _M_erase.isra/1771 into _M_erase.isra/1765 which now has time 139.523112 and size 69, net change of +56.
Unit growth for small function inlining: 665->597 (-11%)

Inlined 330 calls, eliminated 236 functions

/usr/include/c++/11/bits/stl_bvector.h:93:8: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_bvector.h:93:8: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_bvector.h:93:8: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_bvector.h:93:8: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_bvector.h:93:8: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_bvector.h:93:8: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_bvector.h:93:8: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_bvector.h:93:8: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_bvector.h:93:8: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_bvector.h:93:8: missed: failed: evolution of base is not affine.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:25:45: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:25:45: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:22:37: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:22:37: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:23:41: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_bvector.h:93:8: missed: not vectorized: data ref analysis failed: _35 = *__tmp$_M_p_49;
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:24:45: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_bvector.h:93:8: missed: not vectorized: not suitable for gather load _92 = *__tmp$_M_p_95;
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:24:45: note: ***** Analysis failed with vector mode V2DI
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:24:45: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:18:17: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/stl_bvector.h:93:8: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_bvector.h:93:8: missed: failed: evolution of base is not affine.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:18:17: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:22:37: note: ***** Analysis failed with vector mode V4SI
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:22:37: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:50:54: missed: statement clobbers memory: _101 = sqrt (_41);
/usr/include/c++/11/bits/hashtable_policy.h:283:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2391:22: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:44: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:21: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:37: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2393:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2395:29: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2396:17: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2397:31: missed: failed: evolution of base is not affine.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:45:37: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:45:37: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:48:52: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:48:52: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:48:65: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:48:65: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:48:78: missed: couldn't vectorize loop
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:48:78: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/usr/include/c++/11/bits/hashtable.h:2386:14: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable.h:2386:14: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/hashtable_policy.h:1617:29: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1617:29: missed: not vectorized: control flow in loop.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:41:17: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/hashtable.h:1843:14: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:283:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1219:18: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2391:22: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:44: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2402:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:21: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2403:37: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2393:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2395:29: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2396:17: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable.h:2397:31: missed: failed: evolution of base is not affine.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:41:17: missed: splitting region at control altering definition __do_rehash = std::__detail::_Prime_rehash_policy::_M_need_rehash (_83, _85, _84, 1);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:50:54: missed: statement clobbers memory: _101 = sqrt (_41);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _97 = operator new (24);
/usr/include/c++/11/bits/hashtable.h:2016:35: missed: not vectorized: statement can throw an exception: __do_rehash = std::__detail::_Prime_rehash_policy::_M_need_rehash (_83, _85, _84, 1);
/usr/include/c++/11/bits/hashtable.h:2016:35: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/bits/hashtable.h:2016:35: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
/usr/include/c++/11/bits/hashtable.h:2016:35: missed: splitting region at dominance boundary bb23
/usr/include/c++/11/bits/hashtable.h:2016:35: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable.h:2016:35: missed: splitting region at control altering definition _138 = operator new (_137);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: not vectorized: statement can throw an exception: _138 = operator new (_137);
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Analysis failed with vector mode V16QI
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V16QI
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: splitting region at dominance boundary bb33
/usr/include/c++/11/ext/new_allocator.h:127:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: splitting region at dominance boundary bb27
/usr/include/c++/11/bits/hashtable_policy.h:1929:23: missed: statement clobbers memory: __builtin_memset (_138, 0, _137);
/usr/include/c++/11/bits/hashtable.h:437:14: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/hashtable.h:437:14: missed: splitting region at dominance boundary bb44
/usr/include/c++/11/ext/new_allocator.h:117:28: missed: not vectorized: statement can throw an exception: std::__throw_bad_alloc ();
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: not vectorized: statement can throw an exception: std::__throw_bad_array_new_length ();
/usr/include/c++/11/ext/new_allocator.h:116:41: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:116:41: missed: splitting region at dominance boundary bb56
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: statement clobbers memory: _98 = __builtin_eh_pointer (5);
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: statement clobbers memory: __cxa_begin_catch (_98);
/usr/include/c++/11/bits/hashtable.h:2368:4: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: statement clobbers memory: __cxa_end_catch ();
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:41:17: missed: not vectorized: statement can throw an exception: resx 4
/usr/include/c++/11/bits/hashtable.h:2363:7: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:2363:7: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:2363:7: missed: splitting region at dominance boundary bb25
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_265, 24);
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: splitting region at dominance boundary bb34
/usr/include/c++/11/bits/hashtable.h:437:14: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:437:14: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:437:14: missed: splitting region at dominance boundary bb48
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_124, _129);
/usr/include/c++/11/bits/hashtable.h:1890:21: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable.h:1890:21: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable.h:1890:21: missed: splitting region at dominance boundary bb54
/usr/include/c++/11/bits/hashtable_policy.h:716:21: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/hashtable_policy.h:716:21: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/hashtable_policy.h:716:21: missed: splitting region at loop 4 exit at bb11
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:47:45: note: ***** Analysis failed with vector mode V2DF
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:47:45: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DF
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:47:45: missed: splitting region at loop 3 exit at bb9
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:46:41: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:46:41: missed: splitting region at dominance boundary bb7
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:45:37: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:45:37: missed: splitting region at dominance boundary bb57
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:45:37: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:45:37: missed: splitting region at dominance boundary bb62
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:41:17: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:45:37: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:45:37: missed: splitting region at dominance boundary bb10
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:45:37: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:45:37: missed: splitting region at dominance boundary bb63
/usr/include/c++/11/cmath:438:27: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/cmath:438:27: missed: splitting region at dominance boundary bb12
/usr/include/c++/11/cmath:438:27: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/cmath:438:27: missed: splitting region at dominance boundary bb64
/usr/include/c++/11/cmath:438:27: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/cmath:438:27: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: multiple nested loops.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: control flow in loop.
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: number of iterations cannot be computed.
/usr/include/c++/11/bits/stl_tree.h:1883:5: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/stl_tree.h:788:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed: statement clobbers memory: std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase.isra (_40);
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed: statement clobbers memory: std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase.isra (_40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_86, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_85, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_84, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_83, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_82, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_81, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_80, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_79, 40);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_76, 40);
/usr/include/c++/11/bits/stl_tree.h:1894:5: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_tree.h:1894:5: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_function.h:400:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:788:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:780:52: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:2068:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:2068:18: missed: not vectorized: number of iterations cannot be computed.
/usr/include/c++/11/bits/stl_tree.h:2068:18: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/bits/stl_tree.h:2068:18: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
/usr/include/c++/11/bits/stl_tree.h:2115:5: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/stl_function.h:400:20: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:788:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:780:52: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:302:30: missed: statement clobbers memory: _32 = std::_Rb_tree_decrement (__y_62);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: statement clobbers memory: _58 = operator new (40);
/usr/include/c++/11/bits/stl_tree.h:1786:31: missed: statement clobbers memory: std::_Rb_tree_insert_and_rebalance (prephitmp_55, _58, SR.486_24, _22);
/usr/include/c++/11/bits/stl_tree.h:2115:5: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_tree.h:2115:5: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_5, _3);
/usr/include/c++/11/bits/stl_bvector.h:563:7: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_bvector.h:563:7: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_tree.h:1887:18: missed: not vectorized: number of iterations cannot be computed.
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: couldn't vectorize loop
/usr/include/c++/11/bits/hashtable_policy.h:1912:14: missed: not vectorized: number of iterations cannot be computed.
/usr/include/c++/11/bits/stl_bvector.h:182:17: missed: couldn't vectorize loop
/usr/include/c++/11/bits/stl_bvector.h:182:17: missed: not vectorized: control flow in loop.
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:10:14: note: vectorized 0 loops in function.
/usr/include/c++/11/bits/stl_bvector.h:87:17: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_set.h:512:25: missed: statement clobbers memory: __p = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique<const int&> (&found_keys._M_t, &i);
/usr/include/c++/11/bits/stl_tree.h:788:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed: statement clobbers memory: std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase.isra (_138);
/usr/include/c++/11/bits/hashtable_policy.h:283:53: missed: failed: evolution of base is not affine.
/usr/include/c++/11/bits/hashtable_policy.h:1904:7: missed: failed: evolution of base is not affine.
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_222, 24);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:10:14: missed: splitting region at control altering definition _122 = operator new (_121);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:10:14: missed: statement clobbers memory: __builtin_GOMP_parallel (_Z29CalculateTwoElectronIntegralsbi._omp_fn.1, &.omp_data_o.12, 0, 0);
/usr/include/c++/11/ext/new_allocator.h:127:41: missed: not vectorized: statement can throw an exception: _122 = operator new (_121);
/usr/include/c++/11/bits/stl_tree.h:208:27: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/bits/stl_tree.h:208:27: note: ***** The result for vector mode V16QI would be the same
/usr/include/c++/11/bits/stl_tree.h:208:27: note: ***** Re-trying analysis with vector mode V8QI
/usr/include/c++/11/bits/stl_tree.h:208:27: note: ***** Analysis failed with vector mode V8QI
/usr/include/c++/11/bits/stl_tree.h:208:27: missed: splitting region at dominance boundary bb5
/usr/include/c++/11/bits/stl_bvector.h:543:28: missed: statement clobbers memory: std::_Bvector_base<std::allocator<bool> >::_M_deallocate (&local_keys.D.58075);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:10:14: missed: not vectorized: statement can throw an exception: resx 28
/usr/include/c++/11/bits/stl_bvector.h:543:28: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_bvector.h:543:28: missed: splitting region at dominance boundary bb8
/usr/include/c++/11/bits/stl_bvector.h:1153:20: missed: statement clobbers memory: __builtin_memset (_122, 0, _128);
/usr/include/c++/11/bits/stl_bvector.h:1153:20: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/bits/stl_bvector.h:1153:20: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_bvector.h:1153:20: missed: splitting region at control altering definition __p = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique<const int&> (&found_keys._M_t, &i);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:10:14: missed: statement clobbers memory: __builtin_GOMP_parallel (_Z29CalculateTwoElectronIntegralsbi._omp_fn.0, &.omp_data_o.10, 0, 0);
/usr/include/c++/11/bits/stl_set.h:512:25: missed: not vectorized: statement can throw an exception: __p = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique<const int&> (&found_keys._M_t, &i);
/usr/include/c++/11/bits/stl_set.h:512:25: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/bits/stl_set.h:512:25: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
/usr/include/c++/11/bits/stl_set.h:512:25: missed: splitting region at dominance boundary bb31
/usr/include/c++/11/bits/stl_bvector.h:543:28: missed: statement clobbers memory: std::_Bvector_base<std::allocator<bool> >::_M_deallocate (&local_keys.D.58075);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:10:14: missed: not vectorized: statement can throw an exception: resx 15
/usr/include/c++/11/bits/stl_bvector.h:733:37: note: ***** Analysis failed with vector mode VOID
/usr/include/c++/11/bits/stl_bvector.h:733:37: missed: splitting region at dominance boundary bb15
/usr/include/c++/11/bits/hashtable.h:2321:23: missed: statement clobbers memory: __builtin_memset (_166, 0, _165);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_155, _160);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:10:14: missed: not vectorized: statement can throw an exception: resx 3
/usr/include/c++/11/bits/stl_tree.h:984:17: missed: statement clobbers memory: std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase.isra (_66);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_162, 24);
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Analysis failed with vector mode V2DI
/usr/include/c++/11/ext/new_allocator.h:145:19: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: splitting region at dominance boundary bb16
/usr/include/c++/11/bits/stl_bvector.h:340:30: note: ***** Analysis failed with vector mode V4SI
/usr/include/c++/11/bits/stl_bvector.h:340:30: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
/usr/include/c++/11/bits/stl_bvector.h:340:30: missed: splitting region at loop 5 exit at bb48
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:33:27: note: ***** Analysis failed with vector mode V4SI
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:33:27: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V4SI
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:33:27: missed: splitting region at dominance boundary bb17
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:33:27: note: ***** Analysis failed with vector mode VOID
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:33:27: missed: splitting region at dominance boundary bb21
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_136, _134);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:10:14: note: ***** Analysis failed with vector mode V2DI
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:10:14: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:10:14: missed: splitting region at dominance boundary bb10
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__n_222, 24);
/usr/include/c++/11/bits/hashtable.h:2321:23: missed: statement clobbers memory: __builtin_memset (_153, 0, _152);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (_142, _147);
/usr/include/c++/11/bits/stl_tree.h:1889:12: missed: statement clobbers memory: std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase.isra (_138);
/usr/include/c++/11/ext/new_allocator.h:145:19: missed: statement clobbers memory: operator delete (__x_103, 40);
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:10:14: note: ***** Analysis failed with vector mode V2DI
/workspace/llm_outputs/multi_step_benchmarks_minibenchV2_no_hint_V1_attemp_1/gpt-4o-mini/benchmark_1277/step_4.cpp:10:14: note: ***** Skipping vector mode V16QI, which would repeat the analysis for V2DI
/usr/include/c++/11/bits/stl_bvector.h:180:4: note: ***** Analysis failed with vector mode VOID
